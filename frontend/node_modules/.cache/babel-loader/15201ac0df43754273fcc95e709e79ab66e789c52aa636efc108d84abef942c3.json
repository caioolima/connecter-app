{"ast":null,"code":"var _s = $RefreshSig$();\n// useDropdownMenu.js\nimport { useState, useEffect, useRef } from 'react';\nconst useDropdownMenu = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [hoveredItem, setHoveredItem] = useState(null);\n  const menuRef = useRef(null);\n  const handleToggle = () => setIsOpen(prev => !prev);\n  const handleClickOutside = event => {\n    if (menuRef.current && !menuRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const handleMouseEnter = item => setHoveredItem(item);\n  const handleMouseLeave = () => setHoveredItem(null);\n  return {\n    isOpen,\n    hoveredItem,\n    menuRef,\n    handleToggle,\n    handleMouseEnter,\n    handleMouseLeave\n  };\n};\n_s(useDropdownMenu, \"jkOPceQND9lC7FFMbtuhoY8MmEE=\");\nexport default useDropdownMenu;","map":{"version":3,"names":["useState","useEffect","useRef","useDropdownMenu","_s","isOpen","setIsOpen","hoveredItem","setHoveredItem","menuRef","handleToggle","prev","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleMouseEnter","item","handleMouseLeave"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/hooks/Manager Hooks/useDropdownMenu.js"],"sourcesContent":["// useDropdownMenu.js\nimport { useState, useEffect, useRef } from 'react';\n\nconst useDropdownMenu = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [hoveredItem, setHoveredItem] = useState(null);\n  const menuRef = useRef(null);\n\n  const handleToggle = () => setIsOpen(prev => !prev);\n\n  const handleClickOutside = (event) => {\n    if (menuRef.current && !menuRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const handleMouseEnter = (item) => setHoveredItem(item);\n  const handleMouseLeave = () => setHoveredItem(null);\n\n  return {\n    isOpen,\n    hoveredItem,\n    menuRef,\n    handleToggle,\n    handleMouseEnter,\n    handleMouseLeave,\n  };\n};\n\nexport default useDropdownMenu;\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMS,OAAO,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAMQ,YAAY,GAAGA,CAAA,KAAMJ,SAAS,CAACK,IAAI,IAAI,CAACA,IAAI,CAAC;EAEnD,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpC,IAAIJ,OAAO,CAACK,OAAO,IAAI,CAACL,OAAO,CAACK,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;MAC9DV,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAEDL,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,gBAAgB,GAAIC,IAAI,IAAKb,cAAc,CAACa,IAAI,CAAC;EACvD,MAAMC,gBAAgB,GAAGA,CAAA,KAAMd,cAAc,CAAC,IAAI,CAAC;EAEnD,OAAO;IACLH,MAAM;IACNE,WAAW;IACXE,OAAO;IACPC,YAAY;IACZU,gBAAgB;IAChBE;EACF,CAAC;AACH,CAAC;AAAClB,EAAA,CA/BID,eAAe;AAiCrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}