{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\n// src/pages/UserTasksPage.js\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate]);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [\"Tarefas de \", user.firstName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskGrid, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        children: [/*#__PURE__*/_jsxDEV(TaskName, {\n          children: task.taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n          children: formatDate(task.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskDescription, {\n          children: task.taskDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTasksPage, \"oPOR0c9hMNK4a/hmWMCmPKWdzds=\", false, function () {\n  return [useNavigate];\n});\n_c = UserTasksPage;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: linear-gradient(135deg, #000000 50%, #0033ff 50%); /* Gradiente preto e azul */\n  background-size: cover;\n  padding: 2rem;\n  min-height: 100vh;\n  color: #ffffff;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n`;\n_c2 = Container;\nconst Header = styled.h1`\n  color: #f70073; /* Rosa vibrante */\n  font-size: 3rem;\n  font-weight: bold;\n  margin: 5rem;\n  margin-bottom: 2rem;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);\n  position: relative;\n  display: inline-block;\n  overflow: hidden;\n`;\n_c3 = Header;\nconst TaskGrid = styled.div`\n  display: grid;\n  gap: 1.5rem;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  width: 100%;\n  max-width: 1200px;\n`;\n_c4 = TaskGrid;\nconst TaskItem = styled.div`\n  background: rgba(0, 0, 0, 0.9); /* Fundo preto semitransparente */\n  border-radius: 12px;\n  padding: 1.5rem;\n  color: #ffffff;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.8);\n  }\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: radial-gradient(circle, rgba(255, 105, 180, 0.2), rgba(0, 0, 0, 0) 70%);\n    opacity: 0.3;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n  }\n`;\n_c5 = TaskItem;\nconst TaskName = styled.h3`\n  font-size: 1.4rem;\n  font-weight: bold;\n  color: #00bfff; /* Azul claro */\n  margin-bottom: 0.5rem;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n`;\n_c6 = TaskName;\nconst TaskDate = styled.p`\n  font-size: 1rem;\n  color: #b0b0b0;\n  margin-bottom: 1rem;\n`;\n_c7 = TaskDate;\nconst TaskDescription = styled.p`\n  font-size: 1rem;\n`;\n_c8 = TaskDescription;\nexport default UserTasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"UserTasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"TaskGrid\");\n$RefreshReg$(_c5, \"TaskItem\");\n$RefreshReg$(_c6, \"TaskName\");\n$RefreshReg$(_c7, \"TaskDate\");\n$RefreshReg$(_c8, \"TaskDescription\");","map":{"version":3,"names":["React","useEffect","useState","styled","useNavigate","jwtDecode","jsxDEV","_jsxDEV","UserTasksPage","_s","tasks","setTasks","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","navigate","token","localStorage","getItem","decodedToken","fullName","name","capitalizeFirstLetter","split","fetchTasks","response","fetch","headers","Authorization","ok","data","json","console","error","statusText","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","Container","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","TaskGrid","map","task","TaskItem","TaskName","taskTitle","TaskDate","createdAt","TaskDescription","taskDescription","id","_c","div","_c2","h1","_c3","_c4","_c5","h3","_c6","p","_c7","_c8","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["// src/pages/UserTasksPage.js\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\nconst UserTasksPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({ firstName: '', email: '' });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setIsAuthenticated(true);\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível',\n        });\n\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: { Authorization: `Bearer ${token}` },\n            });\n\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Data não disponível.';\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  return (\n    <Container>\n      <Header>Tarefas de {user.firstName}</Header>\n      <TaskGrid>\n        {tasks.map((task) => (\n          <TaskItem key={task.id}>\n            <TaskName>{task.taskTitle}</TaskName>\n            <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n            <TaskDescription>{task.taskDescription}</TaskDescription>\n          </TaskItem>\n        ))}\n      </TaskGrid>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: linear-gradient(135deg, #000000 50%, #0033ff 50%); /* Gradiente preto e azul */\n  background-size: cover;\n  padding: 2rem;\n  min-height: 100vh;\n  color: #ffffff;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nconst Header = styled.h1`\n  color: #f70073; /* Rosa vibrante */\n  font-size: 3rem;\n  font-weight: bold;\n  margin: 5rem;\n  margin-bottom: 2rem;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);\n  position: relative;\n  display: inline-block;\n  overflow: hidden;\n`;\n\nconst TaskGrid = styled.div`\n  display: grid;\n  gap: 1.5rem;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  width: 100%;\n  max-width: 1200px;\n`;\n\nconst TaskItem = styled.div`\n  background: rgba(0, 0, 0, 0.9); /* Fundo preto semitransparente */\n  border-radius: 12px;\n  padding: 1.5rem;\n  color: #ffffff;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.8);\n  }\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: radial-gradient(circle, rgba(255, 105, 180, 0.2), rgba(0, 0, 0, 0) 70%);\n    opacity: 0.3;\n    transition: opacity 0.3s ease;\n    pointer-events: none;\n  }\n`;\n\nconst TaskName = styled.h3`\n  font-size: 1.4rem;\n  font-weight: bold;\n  color: #00bfff; /* Azul claro */\n  margin-bottom: 0.5rem;\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);\n`;\n\nconst TaskDate = styled.p`\n  font-size: 1rem;\n  color: #b0b0b0;\n  margin-bottom: 1rem;\n`;\n\nconst TaskDescription = styled.p`\n  font-size: 1rem;\n`;\n\nexport default UserTasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}