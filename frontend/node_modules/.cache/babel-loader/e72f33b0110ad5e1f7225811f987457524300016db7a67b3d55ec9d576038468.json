{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { useAuth } from '../Context/AuthContext';\nimport { useFormState } from '../hooks/useFormStates';\nimport Logo from '../components/Login/Logo';\nimport Title from '../components/Login/Title';\nimport EmailContainer from '../components/Login/EmailContainer';\nimport PasswordContainer from '../components/Login/PasswordContainer';\nimport Input from '../components/Login/Input';\nimport Button from '../components/Login/Button';\nimport RegisterLink from '../components/Login/RegisterLink';\nimport ErrorMessage from '../components/Login/ErrorMessage';\n\n// Componente de formulário de login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  // Obtém funções e estado do contexto de autenticação\n  const {\n    login,\n    loginError,\n    clearLoginError\n  } = useAuth();\n  // Obtém valores e funções para gerenciar o estado do formulário\n  const {\n    formValues,\n    handleInputChange\n  } = useFormState({\n    email: '',\n    password: ''\n  });\n  const [showPassword, setShowPassword] = useState(false); // Estado para controlar a exibição da senha\n  const [loadingStartTime, setLoadingStartTime] = useState(null); // Estado para controlar o início do carregamento\n  const [minLoadingDuration] = useState(5000); // Duração mínima de carregamento\n\n  // Função para validar o e-mail com regex\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  // Função para mostrar a senha, se o e-mail for válido\n  const handleShowPassword = () => {\n    if (validateEmail(formValues.email)) {\n      setShowPassword(true);\n    }\n  };\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoadingStartTime(Date.now()); // Define o horário de início do carregamento\n    clearLoginError(); // Limpa qualquer erro de login existente\n\n    try {\n      await login(formValues.email, formValues.password); // Tenta fazer o login\n      const elapsedTime = Date.now() - loadingStartTime; // Calcula o tempo decorrido\n      const remainingTime = Math.max(minLoadingDuration - elapsedTime, 0);\n      // Lógica adicional pode ser adicionada para lidar com remainingTime, se necessário\n    } catch (err) {\n      console.error('Erro ao fazer login:', err); // Log de erros\n    }\n  };\n\n  // Função para lidar com mudanças nos campos de entrada\n  const handleChange = e => {\n    handleInputChange(e);\n    clearLoginError(); // Limpa a mensagem de erro ao digitar\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Fa\\xE7a login com seu ID Connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(EmailContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"E-mail\",\n          value: formValues.email,\n          onChange: handleChange,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), !showPassword && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleShowPassword,\n          disabled: !validateEmail(formValues.email),\n          emptyEmail: !formValues.email,\n          children: /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordContainer, {\n        show: showPassword,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Senha\",\n          value: formValues.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterLink, {\n        to: \"/register\",\n        children: \"Criar um ID Connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), loginError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: loginError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 24\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n// Estilo para o contêiner principal do formulário\n_s(LoginForm, \"6WaYEKxDDc/QjE1aGprbG5rsiLM=\", false, function () {\n  return [useAuth, useFormState];\n});\n_c = LoginForm;\nconst Container = styled.div`\n  display: flex; /* Usa flexbox para layout */\n  justify-content: center; /* Centraliza horizontalmente */\n  align-items: center; /* Centraliza verticalmente */\n  height: 60vh; /* Define a altura do contêiner como 60% da altura da viewport */\n  margin-top: 9rem; /* Adiciona uma margem no topo */\n`;\n\n// Estilo para o formulário de login\n_c2 = Container;\nconst Form = styled.form`\n  padding: 2rem; /* Adiciona espaçamento interno */\n  max-width: 560px; /* Define a largura máxima */\n  width: 100%; /* Define a largura como 100% do contêiner pai */\n  text-align: center; /* Centraliza o texto */\n  background: #1c1c1c; /* Define o fundo como uma cor escura */\n  border-radius: 30px; /* Define o raio da borda */\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.4); /* Adiciona sombra ao formulário */\n`;\n_c3 = Form;\nexport default LoginForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Form\");","map":{"version":3,"names":["React","useState","styled","FaArrowRight","useAuth","useFormState","Logo","Title","EmailContainer","PasswordContainer","Input","Button","RegisterLink","ErrorMessage","jsxDEV","_jsxDEV","LoginForm","_s","login","loginError","clearLoginError","formValues","handleInputChange","email","password","showPassword","setShowPassword","loadingStartTime","setLoadingStartTime","minLoadingDuration","validateEmail","emailRegex","test","handleShowPassword","handleSubmit","e","preventDefault","Date","now","elapsedTime","remainingTime","Math","max","err","console","error","handleChange","Container","children","Form","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","name","type","placeholder","value","onChange","autoFocus","onClick","disabled","emptyEmail","show","to","_c","div","_c2","form","_c3","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { useAuth } from '../Context/AuthContext';\nimport { useFormState } from '../hooks/useFormStates';\nimport Logo from '../components/Login/Logo';\nimport Title from '../components/Login/Title';\nimport EmailContainer from '../components/Login/EmailContainer';\nimport PasswordContainer from '../components/Login/PasswordContainer';\nimport Input from '../components/Login/Input';\nimport Button from '../components/Login/Button';\nimport RegisterLink from '../components/Login/RegisterLink';\nimport ErrorMessage from '../components/Login/ErrorMessage';\n\n// Componente de formulário de login\nconst LoginForm = () => {\n  // Obtém funções e estado do contexto de autenticação\n  const { login, loginError, clearLoginError } = useAuth();\n  // Obtém valores e funções para gerenciar o estado do formulário\n  const { formValues, handleInputChange } = useFormState({\n    email: '',\n    password: '',\n  });\n  const [showPassword, setShowPassword] = useState(false); // Estado para controlar a exibição da senha\n  const [loadingStartTime, setLoadingStartTime] = useState(null); // Estado para controlar o início do carregamento\n  const [minLoadingDuration] = useState(5000); // Duração mínima de carregamento\n\n  // Função para validar o e-mail com regex\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  // Função para mostrar a senha, se o e-mail for válido\n  const handleShowPassword = () => {\n    if (validateEmail(formValues.email)) {\n      setShowPassword(true);\n    }\n  };\n\n  // Função para lidar com o envio do formulário\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoadingStartTime(Date.now()); // Define o horário de início do carregamento\n    clearLoginError(); // Limpa qualquer erro de login existente\n\n    try {\n      await login(formValues.email, formValues.password); // Tenta fazer o login\n      const elapsedTime = Date.now() - loadingStartTime; // Calcula o tempo decorrido\n      const remainingTime = Math.max(minLoadingDuration - elapsedTime, 0);\n      // Lógica adicional pode ser adicionada para lidar com remainingTime, se necessário\n    } catch (err) {\n      console.error('Erro ao fazer login:', err); // Log de erros\n    }\n  };\n\n  // Função para lidar com mudanças nos campos de entrada\n  const handleChange = (e) => {\n    handleInputChange(e);\n    clearLoginError(); // Limpa a mensagem de erro ao digitar\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Logo /> {/* Componente logo */}\n        <Title>Faça login com seu ID Connecter</Title> {/* Título do formulário */}\n        <EmailContainer>\n          <Input\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"E-mail\"\n            value={formValues.email}\n            onChange={handleChange}\n            autoFocus\n          />\n          {!showPassword && (\n            <Button\n              onClick={handleShowPassword}\n              disabled={!validateEmail(formValues.email)}\n              emptyEmail={!formValues.email}\n            >\n              <FaArrowRight />\n            </Button>\n          )}\n        </EmailContainer>\n        <PasswordContainer show={showPassword}>\n          <Input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Senha\"\n            value={formValues.password}\n            onChange={handleChange}\n          />\n          <Button type=\"submit\">\n            <FaArrowRight />\n          </Button>\n        </PasswordContainer>\n        <RegisterLink to=\"/register\">Criar um ID Connecter</RegisterLink>\n        {loginError && <ErrorMessage>{loginError}</ErrorMessage>} {/* Mensagem de erro se houver */}\n      </Form>\n    </Container>\n  );\n};\n\n// Estilo para o contêiner principal do formulário\nconst Container = styled.div`\n  display: flex; /* Usa flexbox para layout */\n  justify-content: center; /* Centraliza horizontalmente */\n  align-items: center; /* Centraliza verticalmente */\n  height: 60vh; /* Define a altura do contêiner como 60% da altura da viewport */\n  margin-top: 9rem; /* Adiciona uma margem no topo */\n`;\n\n// Estilo para o formulário de login\nconst Form = styled.form`\n  padding: 2rem; /* Adiciona espaçamento interno */\n  max-width: 560px; /* Define a largura máxima */\n  width: 100%; /* Define a largura como 100% do contêiner pai */\n  text-align: center; /* Centraliza o texto */\n  background: #1c1c1c; /* Define o fundo como uma cor escura */\n  border-radius: 30px; /* Define o raio da borda */\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.4); /* Adiciona sombra ao formulário */\n`;\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}