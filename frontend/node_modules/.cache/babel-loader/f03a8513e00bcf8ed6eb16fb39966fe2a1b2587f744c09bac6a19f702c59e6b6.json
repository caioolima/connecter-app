{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Manager/EditTaskModal.js\",\n  _s = $RefreshSig$();\n// EditTaskModal.js\nimport React from 'react';\nimport ModalOverlay from '../components/Manager/ModalOverlay';\nimport ModalContent from '../components/Manager/ModalContent';\nimport Title from '../components/Manager/Title';\nimport Input from '../components/Manager/Input';\nimport Textarea from '../components/Manager/Textarea';\nimport ButtonContainer from '../components/Manager/ButtonContainer';\nimport Button from '../components/Manager/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTaskModal = ({\n  isOpen,\n  onClose,\n  onSave,\n  task\n}) => {\n  _s();\n  const {\n    formData,\n    handleChange,\n    resetForm\n  } = useFormManager({\n    title: task ? task.taskTitle : '',\n    description: task ? task.taskDescription : ''\n  });\n  useEffect(() => {\n    if (task) {\n      resetForm({\n        title: task.taskTitle,\n        description: task.taskDescription\n      });\n    }\n  }, [task, resetForm]);\n  const handleSubmit = () => {\n    onSave(formData);\n    handleClose();\n  };\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Editar Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"T\\xEDtulo\",\n        value: formData.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        name: \"description\",\n        placeholder: \"Descri\\xE7\\xE3o\",\n        value: formData.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          $variant: \"save\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          $variant: \"cancel\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n// Styled components here (same as TaskModal)\n_s(EditTaskModal, \"JOAfIXGRWQXEHFiKfNuHT2KCnk8=\", true);\n_c = EditTaskModal;\nexport default EditTaskModal;\nvar _c;\n$RefreshReg$(_c, \"EditTaskModal\");","map":{"version":3,"names":["React","ModalOverlay","ModalContent","Title","Input","Textarea","ButtonContainer","Button","jsxDEV","_jsxDEV","EditTaskModal","isOpen","onClose","onSave","task","_s","formData","handleChange","resetForm","useFormManager","title","taskTitle","description","taskDescription","useEffect","handleSubmit","handleClose","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","onClick","$variant","_c","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Manager/EditTaskModal.js"],"sourcesContent":["// EditTaskModal.js\nimport React from 'react';\nimport ModalOverlay from '../components/Manager/ModalOverlay';\nimport ModalContent from '../components/Manager/ModalContent';\nimport Title from '../components/Manager/Title';\nimport Input from '../components/Manager/Input';\nimport Textarea from '../components/Manager/Textarea';\nimport ButtonContainer from '../components/Manager/ButtonContainer';\nimport Button from '../components/Manager/Button';\nconst EditTaskModal = ({ isOpen, onClose, onSave, task }) => {\n  const { formData, handleChange, resetForm } = useFormManager({\n    title: task ? task.taskTitle : '',\n    description: task ? task.taskDescription : '',\n  });\n\n  useEffect(() => {\n    if (task) {\n      resetForm({\n        title: task.taskTitle,\n        description: task.taskDescription,\n      });\n    }\n  }, [task, resetForm]);\n\n  const handleSubmit = () => {\n    onSave(formData);\n    handleClose();\n  };\n\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <ModalOverlay>\n      <ModalContent>\n        <Title>Editar Tarefa</Title>\n        <Input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Título\"\n          value={formData.title}\n          onChange={handleChange}\n        />\n        <Textarea\n          name=\"description\"\n          placeholder=\"Descrição\"\n          value={formData.description}\n          onChange={handleChange}\n        />\n        <ButtonContainer>\n          <Button onClick={handleSubmit} $variant=\"save\">\n            Salvar\n          </Button>\n          <Button onClick={handleClose} $variant=\"cancel\">\n            Cancelar\n          </Button>\n        </ButtonContainer>\n      </ModalContent>\n    </ModalOverlay>\n  );\n};\n\n// Styled components here (same as TaskModal)\n\nexport default EditTaskModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}