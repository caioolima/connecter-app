{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nconst useHeader = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isCreateTaskModalOpen, setIsCreateTaskModalOpen] = useState(false);\n  const [isTaskMenuOpen, setIsTaskMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: '',\n    fullName: '',\n    createdAt: ''\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUserInfo({\n          username: decodedToken.username || '',\n          email: decodedToken.email || '',\n          fullName: decodedToken.fullName || '',\n          createdAt: decodedToken.createdAt || ''\n        });\n      } catch (error) {\n        console.error('Erro ao decodificar o token', error);\n        localStorage.removeItem('token');\n        setToken('');\n        setUserInfo({\n          username: '',\n          email: '',\n          fullName: '',\n          createdAt: ''\n        });\n      }\n    } else {\n      setUserInfo({\n        username: '',\n        email: '',\n        fullName: '',\n        createdAt: ''\n      });\n    }\n    setLoading(false);\n  }, [token]);\n  useEffect(() => {\n    if (loading) return;\n    if (token && userInfo.username && location.pathname === '/login') {\n      navigate(`/tasks/${encodeURIComponent(userInfo.username)}`);\n    }\n  }, [loading, token, userInfo.username, location.pathname, navigate]);\n  useEffect(() => {\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  }, [location.pathname]);\n  const toggleTaskMenu = () => {\n    if (isUserMenuOpen) {\n      setIsUserMenuOpen(false);\n    }\n    setIsTaskMenuOpen(!isTaskMenuOpen);\n  };\n  const toggleUserMenu = () => {\n    if (isTaskMenuOpen) {\n      setIsTaskMenuOpen(false);\n    }\n    setIsUserMenuOpen(!isUserMenuOpen);\n  };\n  const openCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(true);\n  };\n  const closeCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(false);\n  };\n  const handleCreateTask = task => {\n    console.log('Nova tarefa criada:', task);\n  };\n  const handleViewTasks = () => {\n    navigate('/user-tasks');\n    setIsTaskMenuOpen(false);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken('');\n    setUserInfo({\n      username: '',\n      email: '',\n      fullName: '',\n      createdAt: ''\n    });\n    navigate('/login');\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  };\n  const isOnLoginPage = location.pathname === '/login';\n  const isOnUserTasksPage = location.pathname === '/user-tasks';\n  const isAuthenticated = !!token && !!userInfo.username;\n  return {\n    isCreateTaskModalOpen,\n    isTaskMenuOpen,\n    isUserMenuOpen,\n    userInfo,\n    isAuthenticated,\n    isOnLoginPage,\n    isOnUserTasksPage,\n    toggleTaskMenu,\n    toggleUserMenu,\n    openCreateTaskModal,\n    closeCreateTaskModal,\n    handleCreateTask,\n    handleViewTasks,\n    handleLogout\n  };\n};\n_s(useHeader, \"4sla1ld0kow0VjjPBUv0hwfAr1Q=\", false, function () {\n  return [useNavigate, useLocation];\n});\nexport default useHeader;","map":{"version":3,"names":["useState","useEffect","useNavigate","useLocation","jwtDecode","useHeader","_s","navigate","location","isCreateTaskModalOpen","setIsCreateTaskModalOpen","isTaskMenuOpen","setIsTaskMenuOpen","isUserMenuOpen","setIsUserMenuOpen","token","setToken","localStorage","getItem","userInfo","setUserInfo","username","email","fullName","createdAt","loading","setLoading","decodedToken","error","console","removeItem","pathname","encodeURIComponent","toggleTaskMenu","toggleUserMenu","openCreateTaskModal","closeCreateTaskModal","handleCreateTask","task","log","handleViewTasks","handleLogout","isOnLoginPage","isOnUserTasksPage","isAuthenticated"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/hooks/useHeader.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\nconst useHeader = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isCreateTaskModalOpen, setIsCreateTaskModalOpen] = useState(false);\n  const [isTaskMenuOpen, setIsTaskMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: '',\n    fullName: '',\n    createdAt: '',\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUserInfo({\n          username: decodedToken.username || '',\n          email: decodedToken.email || '',\n          fullName: decodedToken.fullName || '',\n          createdAt: decodedToken.createdAt || '',\n        });\n      } catch (error) {\n        console.error('Erro ao decodificar o token', error);\n        localStorage.removeItem('token');\n        setToken('');\n        setUserInfo({\n          username: '',\n          email: '',\n          fullName: '',\n          createdAt: '',\n        });\n      }\n    } else {\n      setUserInfo({\n        username: '',\n        email: '',\n        fullName: '',\n        createdAt: '',\n      });\n    }\n    setLoading(false);\n  }, [token]);\n\n  useEffect(() => {\n    if (loading) return;\n\n    if (token && userInfo.username && location.pathname === '/login') {\n      navigate(`/tasks/${encodeURIComponent(userInfo.username)}`);\n    }\n  }, [loading, token, userInfo.username, location.pathname, navigate]);\n\n  useEffect(() => {\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  }, [location.pathname]);\n\n  const toggleTaskMenu = () => {\n    if (isUserMenuOpen) {\n      setIsUserMenuOpen(false);\n    }\n    setIsTaskMenuOpen(!isTaskMenuOpen);\n  };\n\n  const toggleUserMenu = () => {\n    if (isTaskMenuOpen) {\n      setIsTaskMenuOpen(false);\n    }\n    setIsUserMenuOpen(!isUserMenuOpen);\n  };\n\n  const openCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(true);\n  };\n\n  const closeCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(false);\n  };\n\n  const handleCreateTask = (task) => {\n    console.log('Nova tarefa criada:', task);\n  };\n\n  const handleViewTasks = () => {\n    navigate('/user-tasks');\n    setIsTaskMenuOpen(false);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken('');\n    setUserInfo({\n      username: '',\n      email: '',\n      fullName: '',\n      createdAt: '',\n    });\n    navigate('/login');\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  };\n\n  const isOnLoginPage = location.pathname === '/login';\n  const isOnUserTasksPage = location.pathname === '/user-tasks';\n  const isAuthenticated = !!token && !!userInfo.username;\n\n  return {\n    isCreateTaskModalOpen,\n    isTaskMenuOpen,\n    isUserMenuOpen,\n    userInfo,\n    isAuthenticated,\n    isOnLoginPage,\n    isOnUserTasksPage,\n    toggleTaskMenu,\n    toggleUserMenu,\n    openCreateTaskModal,\n    closeCreateTaskModal,\n    handleCreateTask,\n    handleViewTasks,\n    handleLogout,\n  };\n};\n\nexport default useHeader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}