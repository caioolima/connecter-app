{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Header/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaBars } from 'react-icons/fa';\nimport { jwtDecode } from 'jwt-decode';\nimport CreateTaskModal from '../CreateTaskModal';\nimport UserMenu from './UserMenu';\nimport TaskMenu from './TaskMenu';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isMenuOpen, setIsMenuOpen] = useState(null); // Controle centralizado para os menus\n  const [isCreateTaskModalOpen, setIsCreateTaskModalOpen] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: '',\n    fullName: '',\n    createdAt: ''\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUserInfo({\n          username: decodedToken.username || '',\n          email: decodedToken.email || '',\n          fullName: decodedToken.fullName || '',\n          createdAt: decodedToken.createdAt || ''\n        });\n      } catch (error) {\n        console.error('Erro ao decodificar o token', error);\n        localStorage.removeItem('token');\n        setToken('');\n        setUserInfo({\n          username: '',\n          email: '',\n          fullName: '',\n          createdAt: ''\n        });\n      }\n    } else {\n      setUserInfo({\n        username: '',\n        email: '',\n        fullName: '',\n        createdAt: ''\n      });\n    }\n    setLoading(false);\n  }, [token]);\n  useEffect(() => {\n    if (loading) return;\n    if (token && userInfo.username && location.pathname === '/login') {\n      navigate(`/tasks/${encodeURIComponent(userInfo.username)}`);\n    }\n  }, [loading, token, userInfo.username, location.pathname, navigate]);\n  useEffect(() => {\n    // Fechar os menus ao trocar de página\n    setIsMenuOpen(null);\n  }, [location.pathname]);\n  const toggleMenu = menu => {\n    setIsMenuOpen(prevMenu => prevMenu === menu ? null : menu);\n  };\n  const openCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(true);\n  };\n  const closeCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(false);\n  };\n  const handleCreateTask = task => {\n    console.log('Nova tarefa criada:', task);\n  };\n  const handleViewTasks = () => {\n    navigate('/user-tasks');\n    setIsMenuOpen(null); // Fecha o menu ao navegar\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken('');\n    setUserInfo({\n      username: '',\n      email: '',\n      fullName: '',\n      createdAt: ''\n    });\n    navigate('/login');\n    setIsMenuOpen(null); // Fecha o menu ao deslogar\n  };\n  const isOnLoginPage = location.pathname === '/login';\n  const isOnUserTasksPage = location.pathname === '/user-tasks';\n\n  // Verifica se o usuário está autenticado com base no token e userInfo\n  const isAuthenticated = !!token && !!userInfo.username;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(StyledLink, {\n        to: isAuthenticated ? `/tasks/${encodeURIComponent(userInfo.username)}` : '/',\n        children: /*#__PURE__*/_jsxDEV(Logo, {\n          src: \"https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-logo-preview.png?alt=media&token=5891cb1a-9b80-4908-ba62-ebf81bbeb46a\",\n          alt: \"Connecter Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), isAuthenticated && !isOnUserTasksPage ? /*#__PURE__*/_jsxDEV(MenuContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MenuIcon, {\n          onClick: () => toggleMenu('task'),\n          children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), isMenuOpen === 'task' && /*#__PURE__*/_jsxDEV(TaskMenu, {\n          onViewTasks: () => {\n            handleViewTasks();\n            setIsMenuOpen(null); // Fecha o menu ao clicar na opção\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(UserMenu, {\n          name: userInfo.fullName,\n          onLogout: handleLogout,\n          onClick: () => toggleMenu('user'),\n          isOpen: isMenuOpen === 'user'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), isMenuOpen === 'user' && /*#__PURE__*/_jsxDEV(UserMenu, {\n          name: userInfo.fullName,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : isAuthenticated && !isOnLoginPage ? /*#__PURE__*/_jsxDEV(MenuContainer, {\n        children: /*#__PURE__*/_jsxDEV(UserMenu, {\n          name: userInfo.fullName,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : !isAuthenticated && !isOnUserTasksPage ? /*#__PURE__*/_jsxDEV(LoginButton, {\n        to: \"/login\",\n        children: \"Fazer Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTaskModal, {\n      isOpen: isCreateTaskModalOpen,\n      onClose: closeCreateTaskModal,\n      onCreate: handleCreateTask,\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Header, \"6NawqD9OYU7AsCtWXE/HnR9qF5I=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Header;\nconst Container = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: rgba(0, 0, 0, 0.6);\n  height: 80px;\n  padding: 0 20px;\n  margin: 0;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  position: fixed;\n  backdrop-filter: blur(8px);\n`;\n_c2 = Container;\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  height: 100%;\n`;\n_c3 = StyledLink;\nconst Logo = styled.img`\n  height: 30px;\n  width: auto;\n  cursor: pointer;\n`;\n_c4 = Logo;\nconst MenuContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  color: #fff;\n  margin-right: 2rem;\n`;\n_c5 = MenuContainer;\nconst MenuIcon = styled.div`\n  font-size: 1.8rem;\n  cursor: pointer;\n  margin-right: 1.5rem;\n  color: #fff;\n`;\n_c6 = MenuIcon;\nconst LoginButton = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n  background-color: #000;\n  margin-right: 2rem;\n  padding: 0.6rem 1.2rem;\n  border: 3px solid #fff;\n  border-radius: 6px;\n  font-weight: bold;\n  font-size: 1rem;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover {\n    background-color: #fff;\n    color: #000;\n  }\n`;\n_c7 = LoginButton;\nexport default Header;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"StyledLink\");\n$RefreshReg$(_c4, \"Logo\");\n$RefreshReg$(_c5, \"MenuContainer\");\n$RefreshReg$(_c6, \"MenuIcon\");\n$RefreshReg$(_c7, \"LoginButton\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","styled","FaBars","jwtDecode","CreateTaskModal","UserMenu","TaskMenu","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","navigate","location","isMenuOpen","setIsMenuOpen","isCreateTaskModalOpen","setIsCreateTaskModalOpen","token","setToken","localStorage","getItem","userInfo","setUserInfo","username","email","fullName","createdAt","loading","setLoading","decodedToken","error","console","removeItem","pathname","encodeURIComponent","toggleMenu","menu","prevMenu","openCreateTaskModal","closeCreateTaskModal","handleCreateTask","task","log","handleViewTasks","handleLogout","isOnLoginPage","isOnUserTasksPage","isAuthenticated","children","Container","StyledLink","to","Logo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","MenuContainer","MenuIcon","onClick","onViewTasks","name","onLogout","isOpen","LoginButton","onClose","onCreate","_c","header","_c2","_c3","img","_c4","div","_c5","_c6","_c7","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaBars } from 'react-icons/fa';\nimport { jwtDecode } from 'jwt-decode';\nimport CreateTaskModal from '../CreateTaskModal';\nimport UserMenu from './UserMenu';\nimport TaskMenu from './TaskMenu';\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isMenuOpen, setIsMenuOpen] = useState(null); // Controle centralizado para os menus\n  const [isCreateTaskModalOpen, setIsCreateTaskModalOpen] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: '',\n    fullName: '',\n    createdAt: '',\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUserInfo({\n          username: decodedToken.username || '',\n          email: decodedToken.email || '',\n          fullName: decodedToken.fullName || '',\n          createdAt: decodedToken.createdAt || '',\n        });\n      } catch (error) {\n        console.error('Erro ao decodificar o token', error);\n        localStorage.removeItem('token');\n        setToken('');\n        setUserInfo({\n          username: '',\n          email: '',\n          fullName: '',\n          createdAt: '',\n        });\n      }\n    } else {\n      setUserInfo({\n        username: '',\n        email: '',\n        fullName: '',\n        createdAt: '',\n      });\n    }\n    setLoading(false);\n  }, [token]);\n\n  useEffect(() => {\n    if (loading) return;\n\n    if (token && userInfo.username && location.pathname === '/login') {\n      navigate(`/tasks/${encodeURIComponent(userInfo.username)}`);\n    }\n  }, [loading, token, userInfo.username, location.pathname, navigate]);\n\n  useEffect(() => {\n    // Fechar os menus ao trocar de página\n    setIsMenuOpen(null);\n  }, [location.pathname]);\n\n  const toggleMenu = (menu) => {\n    setIsMenuOpen(prevMenu => (prevMenu === menu ? null : menu));\n  };\n\n  const openCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(true);\n  };\n\n  const closeCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(false);\n  };\n\n  const handleCreateTask = (task) => {\n    console.log('Nova tarefa criada:', task);\n  };\n\n  const handleViewTasks = () => {\n    navigate('/user-tasks');\n    setIsMenuOpen(null); // Fecha o menu ao navegar\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken('');\n    setUserInfo({\n      username: '',\n      email: '',\n      fullName: '',\n      createdAt: '',\n    });\n    navigate('/login');\n    setIsMenuOpen(null); // Fecha o menu ao deslogar\n  };\n\n  const isOnLoginPage = location.pathname === '/login';\n  const isOnUserTasksPage = location.pathname === '/user-tasks';\n\n  // Verifica se o usuário está autenticado com base no token e userInfo\n  const isAuthenticated = !!token && !!userInfo.username;\n\n  return (\n    <>\n      <Container>\n        <StyledLink to={isAuthenticated ? `/tasks/${encodeURIComponent(userInfo.username)}` : '/'}>\n          <Logo src=\"https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-logo-preview.png?alt=media&token=5891cb1a-9b80-4908-ba62-ebf81bbeb46a\" alt=\"Connecter Logo\" />\n        </StyledLink>\n        {isAuthenticated && !isOnUserTasksPage ? (\n          <MenuContainer>\n            <MenuIcon onClick={() => toggleMenu('task')}>\n              <FaBars />\n            </MenuIcon>\n            {isMenuOpen === 'task' && (\n              <TaskMenu \n                onViewTasks={() => {\n                  handleViewTasks();\n                  setIsMenuOpen(null); // Fecha o menu ao clicar na opção\n                }} \n              />\n            )}\n            <UserMenu\n              name={userInfo.fullName}\n              onLogout={handleLogout}\n              onClick={() => toggleMenu('user')}\n              isOpen={isMenuOpen === 'user'}\n            />\n            {isMenuOpen === 'user' && (\n              <UserMenu \n                name={userInfo.fullName} \n                onLogout={handleLogout} \n              />\n            )}\n          </MenuContainer>\n        ) : isAuthenticated && !isOnLoginPage ? (\n          <MenuContainer>\n            <UserMenu name={userInfo.fullName} onLogout={handleLogout} />\n          </MenuContainer>\n        ) : !isAuthenticated && !isOnUserTasksPage ? (\n          <LoginButton to=\"/login\">Fazer Login</LoginButton>\n        ) : null}\n      </Container>\n      <CreateTaskModal \n        isOpen={isCreateTaskModalOpen} \n        onClose={closeCreateTaskModal} \n        onCreate={handleCreateTask} \n        token={token} \n      />\n    </>\n  );\n};\n\nconst Container = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: rgba(0, 0, 0, 0.6);\n  height: 80px;\n  padding: 0 20px;\n  margin: 0;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  position: fixed;\n  backdrop-filter: blur(8px);\n`;\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  height: 100%;\n`;\n\nconst Logo = styled.img`\n  height: 30px;\n  width: auto;\n  cursor: pointer;\n`;\n\nconst MenuContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  color: #fff;\n  margin-right: 2rem;\n`;\n\nconst MenuIcon = styled.div`\n  font-size: 1.8rem;\n  cursor: pointer;\n  margin-right: 1.5rem;\n  color: #fff;\n`;\n\nconst LoginButton = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n  background-color: #000;\n  margin-right: 2rem;\n  padding: 0.6rem 1.2rem;\n  border: 3px solid #fff;\n  border-radius: 6px;\n  font-weight: bold;\n  font-size: 1rem;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover {\n    background-color: #fff;\n    color: #000;\n  }\n`;\n\nexport default Header;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACpD,MAAM,CAACqB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAACyB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EACvE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC;IACvC6B,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAIsB,KAAK,EAAE;MACT,IAAI;QACF,MAAMY,YAAY,GAAG5B,SAAS,CAACgB,KAAK,CAAC;QACrCK,WAAW,CAAC;UACVC,QAAQ,EAAEM,YAAY,CAACN,QAAQ,IAAI,EAAE;UACrCC,KAAK,EAAEK,YAAY,CAACL,KAAK,IAAI,EAAE;UAC/BC,QAAQ,EAAEI,YAAY,CAACJ,QAAQ,IAAI,EAAE;UACrCC,SAAS,EAAEG,YAAY,CAACH,SAAS,IAAI;QACvC,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDX,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;QAChCd,QAAQ,CAAC,EAAE,CAAC;QACZI,WAAW,CAAC;UACVC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE,EAAE;UACZC,SAAS,EAAE;QACb,CAAC,CAAC;MACJ;IACF,CAAC,MAAM;MACLJ,WAAW,CAAC;QACVC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;IACAE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;EAEXtB,SAAS,CAAC,MAAM;IACd,IAAIgC,OAAO,EAAE;IAEb,IAAIV,KAAK,IAAII,QAAQ,CAACE,QAAQ,IAAIX,QAAQ,CAACqB,QAAQ,KAAK,QAAQ,EAAE;MAChEtB,QAAQ,CAAC,UAAUuB,kBAAkB,CAACb,QAAQ,CAACE,QAAQ,CAAC,EAAE,CAAC;IAC7D;EACF,CAAC,EAAE,CAACI,OAAO,EAAEV,KAAK,EAAEI,QAAQ,CAACE,QAAQ,EAAEX,QAAQ,CAACqB,QAAQ,EAAEtB,QAAQ,CAAC,CAAC;EAEpEhB,SAAS,CAAC,MAAM;IACd;IACAmB,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC,EAAE,CAACF,QAAQ,CAACqB,QAAQ,CAAC,CAAC;EAEvB,MAAME,UAAU,GAAIC,IAAI,IAAK;IAC3BtB,aAAa,CAACuB,QAAQ,IAAKA,QAAQ,KAAKD,IAAI,GAAG,IAAI,GAAGA,IAAK,CAAC;EAC9D,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChCtB,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC;EAED,MAAMuB,oBAAoB,GAAGA,CAAA,KAAM;IACjCvB,wBAAwB,CAAC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMwB,gBAAgB,GAAIC,IAAI,IAAK;IACjCV,OAAO,CAACW,GAAG,CAAC,qBAAqB,EAAED,IAAI,CAAC;EAC1C,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5BhC,QAAQ,CAAC,aAAa,CAAC;IACvBG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAM8B,YAAY,GAAGA,CAAA,KAAM;IACzBzB,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCd,QAAQ,CAAC,EAAE,CAAC;IACZI,WAAW,CAAC;MACVC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;IACb,CAAC,CAAC;IACFf,QAAQ,CAAC,QAAQ,CAAC;IAClBG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAM+B,aAAa,GAAGjC,QAAQ,CAACqB,QAAQ,KAAK,QAAQ;EACpD,MAAMa,iBAAiB,GAAGlC,QAAQ,CAACqB,QAAQ,KAAK,aAAa;;EAE7D;EACA,MAAMc,eAAe,GAAG,CAAC,CAAC9B,KAAK,IAAI,CAAC,CAACI,QAAQ,CAACE,QAAQ;EAEtD,oBACEjB,OAAA,CAAAE,SAAA;IAAAwC,QAAA,gBACE1C,OAAA,CAAC2C,SAAS;MAAAD,QAAA,gBACR1C,OAAA,CAAC4C,UAAU;QAACC,EAAE,EAAEJ,eAAe,GAAG,UAAUb,kBAAkB,CAACb,QAAQ,CAACE,QAAQ,CAAC,EAAE,GAAG,GAAI;QAAAyB,QAAA,eACxF1C,OAAA,CAAC8C,IAAI;UAACC,GAAG,EAAC,mKAAmK;UAACC,GAAG,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3L,CAAC,EACZX,eAAe,IAAI,CAACD,iBAAiB,gBACpCxC,OAAA,CAACqD,aAAa;QAAAX,QAAA,gBACZ1C,OAAA,CAACsD,QAAQ;UAACC,OAAO,EAAEA,CAAA,KAAM1B,UAAU,CAAC,MAAM,CAAE;UAAAa,QAAA,eAC1C1C,OAAA,CAACN,MAAM;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,EACV7C,UAAU,KAAK,MAAM,iBACpBP,OAAA,CAACF,QAAQ;UACP0D,WAAW,EAAEA,CAAA,KAAM;YACjBnB,eAAe,CAAC,CAAC;YACjB7B,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;UACvB;QAAE;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACF,eACDpD,OAAA,CAACH,QAAQ;UACP4D,IAAI,EAAE1C,QAAQ,CAACI,QAAS;UACxBuC,QAAQ,EAAEpB,YAAa;UACvBiB,OAAO,EAAEA,CAAA,KAAM1B,UAAU,CAAC,MAAM,CAAE;UAClC8B,MAAM,EAAEpD,UAAU,KAAK;QAAO;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,EACD7C,UAAU,KAAK,MAAM,iBACpBP,OAAA,CAACH,QAAQ;UACP4D,IAAI,EAAE1C,QAAQ,CAACI,QAAS;UACxBuC,QAAQ,EAAEpB;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC,GACdX,eAAe,IAAI,CAACF,aAAa,gBACnCvC,OAAA,CAACqD,aAAa;QAAAX,QAAA,eACZ1C,OAAA,CAACH,QAAQ;UAAC4D,IAAI,EAAE1C,QAAQ,CAACI,QAAS;UAACuC,QAAQ,EAAEpB;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,GACd,CAACX,eAAe,IAAI,CAACD,iBAAiB,gBACxCxC,OAAA,CAAC4D,WAAW;QAACf,EAAE,EAAC,QAAQ;QAAAH,QAAA,EAAC;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,GAChD,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACZpD,OAAA,CAACJ,eAAe;MACd+D,MAAM,EAAElD,qBAAsB;MAC9BoD,OAAO,EAAE5B,oBAAqB;MAC9B6B,QAAQ,EAAE5B,gBAAiB;MAC3BvB,KAAK,EAAEA;IAAM;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAChD,EAAA,CAnJID,MAAM;EAAA,QACOZ,WAAW,EACXC,WAAW;AAAA;AAAAuE,EAAA,GAFxB5D,MAAM;AAqJZ,MAAMwC,SAAS,GAAGlD,MAAM,CAACuE,MAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAfItB,SAAS;AAiBf,MAAMC,UAAU,GAAGnD,MAAM,CAACH,IAAI,CAAC;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAAC4E,GAAA,GALItB,UAAU;AAOhB,MAAME,IAAI,GAAGrD,MAAM,CAAC0E,GAAG;AACvB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJItB,IAAI;AAMV,MAAMO,aAAa,GAAG5D,MAAM,CAAC4E,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIjB,aAAa;AAQnB,MAAMC,QAAQ,GAAG7D,MAAM,CAAC4E,GAAG;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GALIjB,QAAQ;AAOd,MAAMM,WAAW,GAAGnE,MAAM,CAACH,IAAI,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACkF,GAAA,GAhBIZ,WAAW;AAkBjB,eAAezD,MAAM;AAAC,IAAA4D,EAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}