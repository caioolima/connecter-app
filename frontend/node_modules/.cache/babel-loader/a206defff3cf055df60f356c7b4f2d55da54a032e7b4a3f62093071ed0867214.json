{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useFetchTasks.js\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../../Context/AuthContext';\n\n/**\n * Hook para buscar e gerenciar tarefas.\n * Inclui funções para buscar, salvar, completar e excluir tarefas,\n * além de lógica para filtragem e controle de estado de carregamento.\n */\nconst useFetchTasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const {\n    token,\n    userInfo\n  } = useAuth();\n\n  // Função para buscar tarefas do backend\n  const fetchTasks = async () => {\n    if (!token || !(userInfo !== null && userInfo !== void 0 && userInfo.username)) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${userInfo.username}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao buscar tarefas');\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Efeito colateral para buscar tarefas quando o token ou o nome de usuário mudarem\n  useEffect(() => {\n    fetchTasks();\n  }, [token, userInfo === null || userInfo === void 0 ? void 0 : userInfo.username]);\n\n  // Função para salvar ou atualizar uma tarefa\n  const saveTask = async task => {\n    try {\n      const method = task.id ? 'PUT' : 'POST';\n      const url = task.id ? `https://connecter-app-production.up.railway.app/api/manager/tasks/${task.id}` : 'https://connecter-app-production.up.railway.app/api/manager/tasks';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(task)\n      });\n      if (!response.ok) throw new Error('Erro ao salvar tarefa');\n      await response.json();\n      fetchTasks(); // Atualiza a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para marcar uma tarefa como concluída\n  const completeTask = async taskId => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluída');\n      await response.json();\n      fetchTasks(); // Atualiza a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para excluir uma tarefa\n  const deleteTask = async taskId => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao excluir tarefa');\n      fetchTasks(); // Atualiza a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Filtra as tarefas com base no estado do filtro\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.taskStatus;\n    if (filter === 'pending') return !task.taskStatus;\n    return true;\n  });\n  return {\n    tasks: filteredTasks,\n    loading,\n    setFilter,\n    saveTask,\n    completeTask,\n    deleteTask\n  };\n};\n_s(useFetchTasks, \"TH2BCn1wlRTlBeq8gXH46Lp7HcE=\", false, function () {\n  return [useAuth];\n});\nexport default useFetchTasks;","map":{"version":3,"names":["useState","useEffect","useAuth","useFetchTasks","_s","tasks","setTasks","loading","setLoading","filter","setFilter","token","userInfo","fetchTasks","username","response","fetch","headers","Authorization","ok","Error","data","json","error","console","saveTask","task","method","id","url","body","JSON","stringify","completeTask","taskId","deleteTask","filteredTasks","taskStatus"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/hooks/Manager Hooks/useFetchTasks.js"],"sourcesContent":["// hooks/useFetchTasks.js\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../../Context/AuthContext';\n\n/**\n * Hook para buscar e gerenciar tarefas.\n * Inclui funções para buscar, salvar, completar e excluir tarefas,\n * além de lógica para filtragem e controle de estado de carregamento.\n */\nconst useFetchTasks = () => {\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const { token, userInfo } = useAuth();\n\n  // Função para buscar tarefas do backend\n  const fetchTasks = async () => {\n    if (!token || !userInfo?.username) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${userInfo.username}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (!response.ok) throw new Error('Erro ao buscar tarefas');\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Efeito colateral para buscar tarefas quando o token ou o nome de usuário mudarem\n  useEffect(() => {\n    fetchTasks();\n  }, [token, userInfo?.username]);\n\n  // Função para salvar ou atualizar uma tarefa\n  const saveTask = async (task) => {\n    try {\n      const method = task.id ? 'PUT' : 'POST';\n      const url = task.id\n        ? `https://connecter-app-production.up.railway.app/api/manager/tasks/${task.id}`\n        : 'https://connecter-app-production.up.railway.app/api/manager/tasks';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(task),\n      });\n\n      if (!response.ok) throw new Error('Erro ao salvar tarefa');\n      await response.json();\n      \n      fetchTasks(); // Atualiza a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para marcar uma tarefa como concluída\n  const completeTask = async (taskId) => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluída');\n      await response.json();\n      \n      fetchTasks(); // Atualiza a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para excluir uma tarefa\n  const deleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao excluir tarefa');\n      fetchTasks(); // Atualiza a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Filtra as tarefas com base no estado do filtro\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.taskStatus;\n    if (filter === 'pending') return !task.taskStatus;\n    return true;\n  });\n\n  return { tasks: filteredTasks, loading, setFilter, saveTask, completeTask, deleteTask };\n};\n\nexport default useFetchTasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}