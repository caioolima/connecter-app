{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../../Context/AuthContext';\n\n// Hook personalizado para buscar e gerenciar tarefas\nconst useTasks = username => {\n  _s();\n  // Estados para armazenar as tarefas e o status de carregamento\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Obtém o token e as informações do usuário do contexto de autenticação\n  const {\n    token,\n    userInfo\n  } = useAuth();\n  useEffect(() => {\n    // Função assíncrona para buscar as tarefas\n    const fetchTasks = async () => {\n      try {\n        // Define a URL da API com base no username fornecido e no username do usuário logado\n        const apiUrl = username === userInfo.username ? `https://connecter-app-production.up.railway.app/api/manager/tasks/${encodeURIComponent(userInfo.username)}` : `https://connecter-app-production.up.railway.app/api/manager/tasks/${encodeURIComponent(username)}`;\n\n        // Faz a requisição para buscar as tarefas, incluindo o token de autorização se disponível\n        const response = await fetch(apiUrl, {\n          headers: token ? {\n            Authorization: `Bearer ${token}`\n          } : {}\n        });\n        if (response.ok) {\n          const data = await response.json();\n          // Ordena as tarefas pela data de criação em ordem decrescente\n          const sortedTasks = data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n          // Seleciona as 9 tarefas mais recentes\n          const recentTasks = sortedTasks.slice(0, 9);\n\n          // Verifica se as tarefas recentes são diferentes das tarefas atuais\n          if (JSON.stringify(recentTasks) !== JSON.stringify(tasks)) {\n            setTasks(recentTasks);\n          }\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      } finally {\n        setLoading(false); // Define o carregamento como falso após a tentativa de carregar as tarefas\n      }\n    };\n    fetchTasks(); // Chama a função para buscar as tarefas\n  }, [username, token, userInfo.username]); // Reexecuta o efeito se username, token ou userInfo.username mudarem\n\n  return {\n    tasks,\n    loading\n  }; // Retorna as tarefas e o status de carregamento\n};\n_s(useTasks, \"791QVc7H8sHed2u32h2WYOnx6Ps=\", false, function () {\n  return [useAuth];\n});\nexport default useTasks;","map":{"version":3,"names":["useState","useEffect","useAuth","useTasks","username","_s","tasks","setTasks","loading","setLoading","token","userInfo","fetchTasks","apiUrl","encodeURIComponent","response","fetch","headers","Authorization","ok","data","json","sortedTasks","sort","a","b","Date","createdAt","recentTasks","slice","JSON","stringify","console","error","statusText"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/hooks/Tasks Hooks/useTasks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuth } from '../../Context/AuthContext';\n\n// Hook personalizado para buscar e gerenciar tarefas\nconst useTasks = (username) => {\n  // Estados para armazenar as tarefas e o status de carregamento\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  \n  // Obtém o token e as informações do usuário do contexto de autenticação\n  const { token, userInfo } = useAuth();\n\n  useEffect(() => {\n    // Função assíncrona para buscar as tarefas\n    const fetchTasks = async () => {\n      try {\n        // Define a URL da API com base no username fornecido e no username do usuário logado\n        const apiUrl = username === userInfo.username\n          ? `https://connecter-app-production.up.railway.app/api/manager/tasks/${encodeURIComponent(userInfo.username)}`\n          : `https://connecter-app-production.up.railway.app/api/manager/tasks/${encodeURIComponent(username)}`;\n\n        // Faz a requisição para buscar as tarefas, incluindo o token de autorização se disponível\n        const response = await fetch(apiUrl, {\n          headers: token ? { Authorization: `Bearer ${token}` } : {},\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          // Ordena as tarefas pela data de criação em ordem decrescente\n          const sortedTasks = data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n          // Seleciona as 9 tarefas mais recentes\n          const recentTasks = sortedTasks.slice(0, 9);\n\n          // Verifica se as tarefas recentes são diferentes das tarefas atuais\n          if (JSON.stringify(recentTasks) !== JSON.stringify(tasks)) {\n            setTasks(recentTasks);\n          }\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      } finally {\n        setLoading(false); // Define o carregamento como falso após a tentativa de carregar as tarefas\n      }\n    };\n\n    fetchTasks(); // Chama a função para buscar as tarefas\n  }, [username, token, userInfo.username]); // Reexecuta o efeito se username, token ou userInfo.username mudarem\n\n  return { tasks, loading }; // Retorna as tarefas e o status de carregamento\n};\n\nexport default useTasks;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,2BAA2B;;AAEnD;AACA,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM;IAAEU,KAAK;IAAEC;EAAS,CAAC,GAAGT,OAAO,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAMC,MAAM,GAAGT,QAAQ,KAAKO,QAAQ,CAACP,QAAQ,GACzC,qEAAqEU,kBAAkB,CAACH,QAAQ,CAACP,QAAQ,CAAC,EAAE,GAC5G,qEAAqEU,kBAAkB,CAACV,QAAQ,CAAC,EAAE;;QAEvG;QACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACH,MAAM,EAAE;UACnCI,OAAO,EAAEP,KAAK,GAAG;YAAEQ,aAAa,EAAE,UAAUR,KAAK;UAAG,CAAC,GAAG,CAAC;QAC3D,CAAC,CAAC;QAEF,IAAIK,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClC;UACA,MAAMC,WAAW,GAAGF,IAAI,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC;UACtF;UACA,MAAMC,WAAW,GAAGN,WAAW,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;;UAE3C;UACA,IAAIC,IAAI,CAACC,SAAS,CAACH,WAAW,CAAC,KAAKE,IAAI,CAACC,SAAS,CAACzB,KAAK,CAAC,EAAE;YACzDC,QAAQ,CAACqB,WAAW,CAAC;UACvB;QACF,CAAC,MAAM;UACLI,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAElB,QAAQ,CAACmB,UAAU,CAAC;QACjE;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,SAAS;QACRxB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,QAAQ,EAAEM,KAAK,EAAEC,QAAQ,CAACP,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1C,OAAO;IAAEE,KAAK;IAAEE;EAAQ,CAAC,CAAC,CAAC;AAC7B,CAAC;AAACH,EAAA,CA/CIF,QAAQ;EAAA,QAMgBD,OAAO;AAAA;AA2CrC,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}