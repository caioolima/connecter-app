{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport Navbar from '../components/Manager/Navbar';\nimport CreateTaskModal from '../components/Manager/CreateTaskModal';\nimport DropdownMenu from '../components/Manager/DropdownMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const {\n    token,\n    userInfo\n  } = useAuth();\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token || !(userInfo !== null && userInfo !== void 0 && userInfo.username)) return;\n      try {\n        const response = await fetch(`http://localhost:5000/api/manager/tasks/${userInfo.username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) throw new Error('Erro ao buscar tarefas');\n        const data = await response.json();\n        setTasks(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTasks();\n  }, [token, userInfo === null || userInfo === void 0 ? void 0 : userInfo.username]);\n  const handleAddTaskClick = () => {\n    setCurrentTask(null);\n    setModalOpen(true);\n  };\n  const handleSaveTask = async task => {\n    try {\n      const method = currentTask ? 'PUT' : 'POST';\n      const url = currentTask ? `http://localhost:5000/api/manager/tasks/${currentTask.id}` : 'http://localhost:5000/api/manager/tasks';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(task)\n      });\n      if (!response.ok) throw new Error('Erro ao salvar tarefa');\n      const savedTask = await response.json();\n      if (currentTask) {\n        setTasks(tasks.map(t => t.id === savedTask.id ? savedTask : t));\n      } else {\n        setTasks(prevTasks => [...prevTasks, savedTask]);\n      }\n      setModalOpen(false);\n      setCurrentTask(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluÃ­da');\n      const updatedTask = await response.json();\n      setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleTaskClick = task => {\n    setCurrentTask(task);\n    setModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      children: [/*#__PURE__*/_jsxDEV(DropdownMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTaskClick,\n        children: \"Adicionar Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gerenciador de Tarefas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskModal, {\n        isOpen: modalOpen,\n        onClose: () => setModalOpen(false),\n        onCreate: handleSaveTask,\n        token: token,\n        task: currentTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.filter(task => filter === 'all' || task.status === filter).map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleTaskClick(task),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.taskTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCompleteTask(task.id),\n            children: \"Concluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"0q6Ol9/1NUEryS8uVc15TuUPwUs=\", false, function () {\n  return [useAuth];\n});\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","Navbar","CreateTaskModal","DropdownMenu","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","filter","setFilter","modalOpen","setModalOpen","currentTask","setCurrentTask","token","userInfo","fetchTasks","username","response","fetch","headers","Authorization","ok","Error","data","json","error","console","handleAddTaskClick","handleSaveTask","task","method","url","id","body","JSON","stringify","savedTask","map","t","prevTasks","handleCompleteTask","taskId","updatedTask","handleTaskClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","onCreate","status","taskTitle","_c","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport Navbar from '../components/Manager/Navbar';\nimport CreateTaskModal from '../components/Manager/CreateTaskModal';\nimport DropdownMenu from '../components/Manager/DropdownMenu';\n\nconst TaskManager = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const { token, userInfo } = useAuth();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token || !userInfo?.username) return;\n      try {\n        const response = await fetch(`http://localhost:5000/api/manager/tasks/${userInfo.username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (!response.ok) throw new Error('Erro ao buscar tarefas');\n        const data = await response.json();\n        setTasks(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  \n    fetchTasks();\n  }, [token, userInfo?.username]);\n\n  const handleAddTaskClick = () => {\n    setCurrentTask(null);\n    setModalOpen(true);\n  };\n\n  const handleSaveTask = async (task) => {\n    try {\n      const method = currentTask ? 'PUT' : 'POST';\n      const url = currentTask ? `http://localhost:5000/api/manager/tasks/${currentTask.id}` : 'http://localhost:5000/api/manager/tasks';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(task),\n      });\n  \n      if (!response.ok) throw new Error('Erro ao salvar tarefa');\n      const savedTask = await response.json();\n      \n      if (currentTask) {\n        setTasks(tasks.map(t => (t.id === savedTask.id ? savedTask : t)));\n      } else {\n        setTasks(prevTasks => [...prevTasks, savedTask]);\n      }\n      \n      setModalOpen(false);\n      setCurrentTask(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluÃ­da');\n      const updatedTask = await response.json();\n      setTasks(tasks.map(task => (task.id === updatedTask.id ? updatedTask : task)));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleTaskClick = (task) => {\n    setCurrentTask(task);\n    setModalOpen(true);\n  };\n\n  return (\n    <div>\n      <Navbar>\n        <DropdownMenu />\n        <button onClick={handleAddTaskClick}>Adicionar Tarefa</button>\n      </Navbar>\n      <main>\n        <h1>Gerenciador de Tarefas</h1>\n        <CreateTaskModal\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onCreate={handleSaveTask}\n          token={token}\n          task={currentTask}\n        />\n        <ul>\n          {tasks\n            .filter(task => filter === 'all' || task.status === filter)\n            .map(task => (\n              <li key={task.id} onClick={() => handleTaskClick(task)}>\n                <span>{task.taskTitle}</span>\n                <button onClick={() => handleCompleteTask(task.id)}>Concluir</button>\n              </li>\n            ))}\n        </ul>\n      </main>\n    </div>\n  );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}