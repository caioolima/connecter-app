{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\n// src/pages/UserTasksPage.js\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Corrigido a importação de jwt-decode\nimport { FaEllipsisV } from 'react-icons/fa'; // Ícone do menu hambúrguer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: ''\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n  const [taskOptions, setTaskOptions] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  const handleMenuClick = task => {\n    setTaskOptions(task);\n    setShowMenu(!showMenu);\n  };\n  const handleEditClick = () => {\n    setSelectedTask(taskOptions);\n    setModalOpen(true);\n    setShowMenu(false);\n  };\n  const handleCompleteClick = () => {\n    handleCompleteTask(taskOptions.id);\n    setShowMenu(false);\n  };\n  const handleDeleteClick = () => {\n    handleDeleteTask(taskOptions.id);\n    setShowMenu(false);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task));\n        filterTasks(tasks, filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        const updatedTask = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n        filterTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.id !== taskId));\n        filterTasks(tasks.filter(task => task.id !== taskId), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [\"Tarefas de \", user.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterMenu, {\n        children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('recent'),\n          active: filter === 'recent',\n          children: \"Recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('completed'),\n          active: filter === 'completed',\n          children: \"Conclu\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('pending'),\n          active: filter === 'pending',\n          children: \"Pendentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(TaskGrid, {\n        children: filteredTasks.length ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {\n              onClick: () => handleMenuClick(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), showMenu && taskOptions === task && /*#__PURE__*/_jsxDEV(Menu, {\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleEditClick,\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 23\n              }, this), !task.taskStatus && /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleCompleteClick,\n                children: \"Concluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleDeleteClick,\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDescription, {\n            children: task.taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n            children: formatDate(task.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTasks, {\n          children: \"Nenhuma tarefa encontrada.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), modalOpen && selectedTask && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Editar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            e.preventDefault();\n            handleUpdateTask(selectedTask);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: selectedTask.taskTitle,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskTitle: e.target.value\n            }),\n            placeholder: \"T\\xEDtulo da tarefa\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: selectedTask.taskDescription,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskDescription: e.target.value\n            }),\n            placeholder: \"Descri\\xE7\\xE3o da tarefa\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => handleDeleteTask(selectedTask.id),\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: handleCloseModal,\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTasksPage, \"j1MBeGsJ3E+NeIXzP2jUDazKsI4=\", false, function () {\n  return [useNavigate];\n});\n_c = UserTasksPage;\nexport default UserTasksPage;\nconst Container = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n_c2 = Container;\nconst Sidebar = styled.div`\n  width: 20%;\n  background-color: #f0f0f0;\n  padding: 20px;\n`;\n_c3 = Sidebar;\nconst Header = styled.h1`\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n`;\n_c4 = Header;\nconst FilterMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c5 = FilterMenu;\nconst FilterButton = styled.button`\n  background-color: ${({\n  active\n}) => active ? '#007bff' : 'transparent'};\n  color: ${({\n  active\n}) => active ? '#fff' : '#000'};\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n  text-align: left;\n\n  &:hover {\n    background-color: #007bff;\n    color: #fff;\n  }\n`;\n_c6 = FilterButton;\nconst Content = styled.div`\n  width: 80%;\n  padding: 20px;\n`;\n_c7 = Content;\nconst TaskGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n_c8 = TaskGrid;\nconst TaskCard = styled.div`\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  padding: 15px;\n  position: relative;\n`;\n_c9 = TaskCard;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n_c10 = CardHeader;\nconst TaskName = styled.h2`\n  font-size: 1.2rem;\n`;\n_c11 = TaskName;\nconst MenuIcon = styled(FaEllipsisV)`\n  cursor: pointer;\n  font-size: 1.5rem;\n`;\n_c12 = MenuIcon;\nconst Menu = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n`;\n_c13 = Menu;\nconst MenuItem = styled.div`\n  padding: 10px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n_c14 = MenuItem;\nconst TaskDescription = styled.p`\n  font-size: 1rem;\n`;\n_c15 = TaskDescription;\nconst TaskDate = styled.p`\n  font-size: 0.8rem;\n  color: #888;\n`;\n_c16 = TaskDate;\nconst NoTasks = styled.p`\n  text-align: center;\n  font-size: 1rem;\n  color: #888;\n`;\n_c17 = NoTasks;\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c18 = Modal;\nconst ModalContent = styled.div`\n  background: #fff;\n  padding: 20px;\n  border-radius: 5px;\n  width: 400px;\n`;\n_c19 = ModalContent;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n_c20 = Form;\nconst Input = styled.input`\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n`;\n_c21 = Input;\nconst TextArea = styled.textarea`\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  resize: vertical;\n`;\n_c22 = TextArea;\nconst Button = styled.button`\n  margin-right: 10px;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n_c23 = Button;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23;\n$RefreshReg$(_c, \"UserTasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Sidebar\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"FilterMenu\");\n$RefreshReg$(_c6, \"FilterButton\");\n$RefreshReg$(_c7, \"Content\");\n$RefreshReg$(_c8, \"TaskGrid\");\n$RefreshReg$(_c9, \"TaskCard\");\n$RefreshReg$(_c10, \"CardHeader\");\n$RefreshReg$(_c11, \"TaskName\");\n$RefreshReg$(_c12, \"MenuIcon\");\n$RefreshReg$(_c13, \"Menu\");\n$RefreshReg$(_c14, \"MenuItem\");\n$RefreshReg$(_c15, \"TaskDescription\");\n$RefreshReg$(_c16, \"TaskDate\");\n$RefreshReg$(_c17, \"NoTasks\");\n$RefreshReg$(_c18, \"Modal\");\n$RefreshReg$(_c19, \"ModalContent\");\n$RefreshReg$(_c20, \"Form\");\n$RefreshReg$(_c21, \"Input\");\n$RefreshReg$(_c22, \"TextArea\");\n$RefreshReg$(_c23, \"Button\");","map":{"version":3,"names":["React","useEffect","useState","styled","useNavigate","jwtDecode","FaEllipsisV","jsxDEV","_jsxDEV","UserTasksPage","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","selectedTask","setSelectedTask","modalOpen","setModalOpen","showMenu","setShowMenu","taskOptions","setTaskOptions","navigate","token","localStorage","getItem","decodedToken","fullName","name","capitalizeFirstLetter","split","fetchTasks","response","fetch","headers","Authorization","ok","data","json","filterTasks","console","error","statusText","length","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","sort","a","b","createdAt","task","taskStatus","handleMenuClick","handleEditClick","handleCompleteClick","handleCompleteTask","id","handleDeleteClick","handleDeleteTask","handleCloseModal","handleUpdateTask","updatedTask","method","body","JSON","stringify","updatedTaskData","map","taskId","Container","children","Sidebar","Header","fileName","_jsxFileName","lineNumber","columnNumber","FilterMenu","FilterButton","onClick","active","Content","TaskGrid","TaskCard","CardHeader","TaskName","taskTitle","MenuIcon","Menu","MenuItem","TaskDescription","taskDescription","TaskDate","NoTasks","Modal","ModalContent","Form","onSubmit","e","preventDefault","Input","type","value","onChange","target","placeholder","required","TextArea","Button","_c","div","_c2","_c3","h1","_c4","_c5","button","_c6","_c7","_c8","_c9","_c10","h2","_c11","_c12","_c13","_c14","p","_c15","_c16","_c17","_c18","_c19","form","_c20","input","_c21","textarea","_c22","_c23","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["// src/pages/UserTasksPage.js\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Corrigido a importação de jwt-decode\nimport { FaEllipsisV } from 'react-icons/fa'; // Ícone do menu hambúrguer\n\nconst UserTasksPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({ firstName: '', email: '' });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n  const [taskOptions, setTaskOptions] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setIsAuthenticated(true);\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível',\n        });\n\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: { Authorization: `Bearer ${token}` },\n            });\n\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Data não disponível.';\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n\n  const handleMenuClick = (task) => {\n    setTaskOptions(task);\n    setShowMenu(!showMenu);\n  };\n\n  const handleEditClick = () => {\n    setSelectedTask(taskOptions);\n    setModalOpen(true);\n    setShowMenu(false);\n  };\n\n  const handleCompleteClick = () => {\n    handleCompleteTask(taskOptions.id);\n    setShowMenu(false);\n  };\n\n  const handleDeleteClick = () => {\n    handleDeleteTask(taskOptions.id);\n    setShowMenu(false);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n\n  const handleUpdateTask = async (updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(updatedTask),\n      });\n\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task));\n        filterTasks(tasks, filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        const updatedTask = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n        filterTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.id !== taskId));\n        filterTasks(tasks.filter(task => task.id !== taskId), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n\n  return (\n    <Container>\n      <Sidebar>\n        <Header>Tarefas de {user.firstName}</Header>\n        <FilterMenu>\n          <FilterButton onClick={() => setFilter('recent')} active={filter === 'recent'}>Recentes</FilterButton>\n          <FilterButton onClick={() => setFilter('completed')} active={filter === 'completed'}>Concluídas</FilterButton>\n          <FilterButton onClick={() => setFilter('pending')} active={filter === 'pending'}>Pendentes</FilterButton>\n        </FilterMenu>\n      </Sidebar>\n      <Content>\n        <TaskGrid>\n          {filteredTasks.length ? (\n            filteredTasks.map((task) => (\n              <TaskCard key={task.id}>\n                <CardHeader>\n                  <TaskName>{task.taskTitle}</TaskName>\n                  <MenuIcon onClick={() => handleMenuClick(task)} />\n                  {showMenu && taskOptions === task && (\n                    <Menu>\n                      <MenuItem onClick={handleEditClick}>Editar</MenuItem>\n                      {!task.taskStatus && <MenuItem onClick={handleCompleteClick}>Concluir</MenuItem>}\n                      <MenuItem onClick={handleDeleteClick}>Excluir</MenuItem>\n                    </Menu>\n                  )}\n                </CardHeader>\n                <TaskDescription>{task.taskDescription}</TaskDescription>\n                <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n              </TaskCard>\n            ))\n          ) : (\n            <NoTasks>Nenhuma tarefa encontrada.</NoTasks>\n          )}\n        </TaskGrid>\n      </Content>\n      {modalOpen && selectedTask && (\n        <Modal>\n          <ModalContent>\n            <h2>Editar Tarefa</h2>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                handleUpdateTask(selectedTask);\n              }}\n            >\n              <Input\n                type=\"text\"\n                value={selectedTask.taskTitle}\n                onChange={(e) => setSelectedTask({ ...selectedTask, taskTitle: e.target.value })}\n                placeholder=\"Título da tarefa\"\n                required\n              />\n              <TextArea\n                value={selectedTask.taskDescription}\n                onChange={(e) => setSelectedTask({ ...selectedTask, taskDescription: e.target.value })}\n                placeholder=\"Descrição da tarefa\"\n                required\n              />\n              <Button type=\"submit\">Salvar</Button>\n              <Button type=\"button\" onClick={() => handleDeleteTask(selectedTask.id)}>Excluir</Button>\n              <Button type=\"button\" onClick={handleCloseModal}>Fechar</Button>\n            </Form>\n          </ModalContent>\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default UserTasksPage;\n\nconst Container = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n\nconst Sidebar = styled.div`\n  width: 20%;\n  background-color: #f0f0f0;\n  padding: 20px;\n`;\n\nconst Header = styled.h1`\n  font-size: 1.5rem;\n  margin-bottom: 20px;\n`;\n\nconst FilterMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FilterButton = styled.button`\n  background-color: ${({ active }) => (active ? '#007bff' : 'transparent')};\n  color: ${({ active }) => (active ? '#fff' : '#000')};\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n  text-align: left;\n\n  &:hover {\n    background-color: #007bff;\n    color: #fff;\n  }\n`;\n\nconst Content = styled.div`\n  width: 80%;\n  padding: 20px;\n`;\n\nconst TaskGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nconst TaskCard = styled.div`\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  padding: 15px;\n  position: relative;\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst TaskName = styled.h2`\n  font-size: 1.2rem;\n`;\n\nconst MenuIcon = styled(FaEllipsisV)`\n  cursor: pointer;\n  font-size: 1.5rem;\n`;\n\nconst Menu = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  z-index: 100;\n`;\n\nconst MenuItem = styled.div`\n  padding: 10px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n\nconst TaskDescription = styled.p`\n  font-size: 1rem;\n`;\n\nconst TaskDate = styled.p`\n  font-size: 0.8rem;\n  color: #888;\n`;\n\nconst NoTasks = styled.p`\n  text-align: center;\n  font-size: 1rem;\n  color: #888;\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalContent = styled.div`\n  background: #fff;\n  padding: 20px;\n  border-radius: 5px;\n  width: 400px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n`;\n\nconst TextArea = styled.textarea`\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  resize: vertical;\n`;\n\nconst Button = styled.button`\n  margin-right: 10px;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}