{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/TaskManager.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Navbar from '../components/Manager/Navbar';\nimport TaskModal from '../components/Manager/TaskModal';\nimport TaskList from '../components/Manager/TaskList';\nimport LoadingMessage from '../components/Manager/LoadingMessage';\nimport NoTasksMessage from '../components/Manager/NoTasksMessage';\nimport useTasksApi from '../hooks/Manager Hooks/useTasksApi';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #000;\n  color: #fff;\n  overflow: hidden;\n`;\n_c = Container;\nconst TaskWrapper = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n`;\n_c2 = TaskWrapper;\nconst TaskManager = () => {\n  _s();\n  const {\n    tasks,\n    loading,\n    modalOpen,\n    currentTask,\n    filter,\n    setFilter,\n    setModalOpen,\n    setCurrentTask,\n    handleAddTaskClick,\n    handleSaveTask,\n    handleCompleteTask,\n    handleDeleteTask\n  } = useTasksApi();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onAddTaskClick: handleAddTaskClick,\n      onFilterChange: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskWrapper, {\n      children: loading ? /*#__PURE__*/_jsxDEV(LoadingMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : tasks.length > 0 ? /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        onEdit: task => {\n          setCurrentTask(task);\n          setModalOpen(true);\n        },\n        onDelete: handleDeleteTask,\n        onComplete: handleCompleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(NoTasksMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      onSave: handleSaveTask,\n      task: currentTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"0U1c330V+rtcTH1aCsnVWC0IRo8=\", false, function () {\n  return [useTasksApi];\n});\n_c3 = TaskManager;\nexport default TaskManager;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TaskWrapper\");\n$RefreshReg$(_c3, \"TaskManager\");","map":{"version":3,"names":["React","Navbar","TaskModal","TaskList","LoadingMessage","NoTasksMessage","useTasksApi","styled","jsxDEV","_jsxDEV","Container","div","_c","TaskWrapper","_c2","TaskManager","_s","tasks","loading","modalOpen","currentTask","filter","setFilter","setModalOpen","setCurrentTask","handleAddTaskClick","handleSaveTask","handleCompleteTask","handleDeleteTask","children","onAddTaskClick","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","length","onEdit","task","onDelete","onComplete","isOpen","onClose","onSave","_c3","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/TaskManager.js"],"sourcesContent":["import React from 'react';\nimport Navbar from '../components/Manager/Navbar';\nimport TaskModal from '../components/Manager/TaskModal';\nimport TaskList from '../components/Manager/TaskList';\nimport LoadingMessage from '../components/Manager/LoadingMessage';\nimport NoTasksMessage from '../components/Manager/NoTasksMessage';\nimport useTasksApi from '../hooks/Manager Hooks/useTasksApi';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #000;\n  color: #fff;\n  overflow: hidden;\n`;\n\nconst TaskWrapper = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n`;\n\nconst TaskManager = () => {\n  const { \n    tasks, \n    loading, \n    modalOpen, \n    currentTask, \n    filter, \n    setFilter, \n    setModalOpen, \n    setCurrentTask,\n    handleAddTaskClick, \n    handleSaveTask, \n    handleCompleteTask, \n    handleDeleteTask \n  } = useTasksApi();\n\n  return (\n    <Container>\n      <Navbar onAddTaskClick={handleAddTaskClick} onFilterChange={setFilter} />\n      <TaskWrapper>\n        {loading ? (\n          <LoadingMessage />\n        ) : tasks.length > 0 ? (\n          <TaskList \n            tasks={tasks} \n            onEdit={(task) => {\n              setCurrentTask(task);\n              setModalOpen(true);\n            }}\n            onDelete={handleDeleteTask}\n            onComplete={handleCompleteTask}\n          />\n        ) : (\n          <NoTasksMessage />\n        )}\n      </TaskWrapper>\n      <TaskModal \n        isOpen={modalOpen} \n        onClose={() => setModalOpen(false)} \n        onSave={handleSaveTask} \n        task={currentTask} \n      />\n    </Container>\n  );\n};\n\nexport default TaskManager;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,8BAA8B;AACjD,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,cAAc,MAAM,sCAAsC;AACjE,OAAOC,cAAc,MAAM,sCAAsC;AACjE,OAAOC,WAAW,MAAM,oCAAoC;AAC5D,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,SAAS;AASf,MAAMG,WAAW,GAAGN,MAAM,CAACI,GAAG;AAC9B;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,WAAW;AAMjB,MAAME,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IACJC,KAAK;IACLC,OAAO;IACPC,SAAS;IACTC,WAAW;IACXC,MAAM;IACNC,SAAS;IACTC,YAAY;IACZC,cAAc;IACdC,kBAAkB;IAClBC,cAAc;IACdC,kBAAkB;IAClBC;EACF,CAAC,GAAGtB,WAAW,CAAC,CAAC;EAEjB,oBACEG,OAAA,CAACC,SAAS;IAAAmB,QAAA,gBACRpB,OAAA,CAACR,MAAM;MAAC6B,cAAc,EAAEL,kBAAmB;MAACM,cAAc,EAAET;IAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzE1B,OAAA,CAACI,WAAW;MAAAgB,QAAA,EACTX,OAAO,gBACNT,OAAA,CAACL,cAAc;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAChBlB,KAAK,CAACmB,MAAM,GAAG,CAAC,gBAClB3B,OAAA,CAACN,QAAQ;QACPc,KAAK,EAAEA,KAAM;QACboB,MAAM,EAAGC,IAAI,IAAK;UAChBd,cAAc,CAACc,IAAI,CAAC;UACpBf,YAAY,CAAC,IAAI,CAAC;QACpB,CAAE;QACFgB,QAAQ,EAAEX,gBAAiB;QAC3BY,UAAU,EAAEb;MAAmB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,gBAEF1B,OAAA,CAACJ,cAAc;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAClB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC,eACd1B,OAAA,CAACP,SAAS;MACRuC,MAAM,EAAEtB,SAAU;MAClBuB,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAAC,KAAK,CAAE;MACnCoB,MAAM,EAAEjB,cAAe;MACvBY,IAAI,EAAElB;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACnB,EAAA,CA5CID,WAAW;EAAA,QAcXT,WAAW;AAAA;AAAAsC,GAAA,GAdX7B,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAAjC,EAAA;AAAAiC,YAAA,CAAA/B,GAAA;AAAA+B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}