{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../Context/AuthContext';\nimport Navbar from '../components/Manager/Navbar';\nimport TaskModal from '../components/Manager/TaskModal';\nimport DropdownMenu from '../components/Manager/DropdownMenu';\nimport { FaCheckCircle } from 'react-icons/fa'; // Importar ícone de verificação\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [hoveredTask, setHoveredTask] = useState(null); // Estado para hover\n  const {\n    token,\n    userInfo\n  } = useAuth();\n  const fetchTasks = async () => {\n    if (!token || !(userInfo !== null && userInfo !== void 0 && userInfo.username)) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${userInfo.username}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao buscar tarefas');\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [token, userInfo === null || userInfo === void 0 ? void 0 : userInfo.username]);\n  const handleAddTaskClick = () => {\n    setCurrentTask(null);\n    setModalOpen(true);\n  };\n  const handleSaveTask = async task => {\n    try {\n      const method = currentTask ? 'PUT' : 'POST';\n      const url = currentTask ? `http://localhost:5000/api/manager/tasks/${currentTask.id}` : 'http://localhost:5000/api/manager/tasks';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(task)\n      });\n      if (!response.ok) throw new Error('Erro ao salvar tarefa');\n      await response.json();\n      fetchTasks(); // Atualize a lista de tarefas\n      setModalOpen(false); // Feche o modal e limpe a tarefa atual\n      setCurrentTask(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluída');\n      await response.json();\n      fetchTasks(); // Atualize a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao excluir tarefa');\n      fetchTasks(); // Atualize a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.taskStatus;\n    if (filter === 'pending') return !task.taskStatus;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onAddTaskClick: handleAddTaskClick,\n      onFilterChange: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.taskWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.taskGrid,\n        children: filteredTasks.length > 0 ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...styles.taskItem,\n            ...(hoveredTask === task.id ? styles.taskItemHover : {})\n          },\n          onMouseEnter: () => setHoveredTask(task.id),\n          onMouseLeave: () => setHoveredTask(null),\n          children: [!task.taskStatus ? /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            onEdit: () => {\n              setCurrentTask(task);\n              setModalOpen(true);\n            },\n            onDelete: () => handleDeleteTask(task.id),\n            onComplete: () => handleCompleteTask(task.id),\n            isCompleted: task.taskStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.taskContent,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: styles.taskTitle,\n              children: [\"T\\xEDtulo: \", task.taskTitle]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.taskDescription,\n              children: [\"Descri\\xE7\\xE3o: \", task.taskDescription]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), task.taskStatus && /*#__PURE__*/_jsxDEV(CompletionIcon, {\n            children: /*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.noTasks,\n          children: \"Nenhuma tarefa encontrada.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: currentTask,\n      onSave: handleSaveTask,\n      onClose: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"fiwlXXtl+TyBsHFgDc2zcekdRUQ=\", false, function () {\n  return [useAuth];\n});\n_c = TaskManager;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px'\n  },\n  taskWrapper: {\n    width: '100%',\n    maxWidth: '1200px'\n  },\n  taskGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n    gap: '15px'\n  },\n  taskItem: {\n    position: 'relative',\n    borderRadius: '8px',\n    backgroundColor: '#2a2a2a',\n    padding: '15px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.2)',\n    color: '#f5f5f5',\n    transition: '0.3s'\n  },\n  taskItemHover: {\n    backgroundColor: '#3a3a3a'\n  },\n  taskContent: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  taskTitle: {\n    fontSize: '18px',\n    margin: 0\n  },\n  taskDescription: {\n    fontSize: '16px',\n    marginTop: '5px'\n  },\n  noTasks: {\n    color: '#f5f5f5',\n    textAlign: 'center'\n  }\n};\nconst CheckIcon = styled(FaCheckCircle)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: #16bb1f; /* Verde para o ícone de verificação */\n  font-size: 24px;\n`;\n_c2 = CheckIcon;\nconst CompletionIcon = styled.div`\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  color: #16bb1f;\n  font-size: 24px;\n`;\n_c3 = CompletionIcon;\nexport default TaskManager;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TaskManager\");\n$RefreshReg$(_c2, \"CheckIcon\");\n$RefreshReg$(_c3, \"CompletionIcon\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","Navbar","TaskModal","DropdownMenu","FaCheckCircle","styled","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","filter","setFilter","modalOpen","setModalOpen","currentTask","setCurrentTask","hoveredTask","setHoveredTask","token","userInfo","fetchTasks","username","response","fetch","headers","Authorization","ok","Error","data","json","error","console","handleAddTaskClick","handleSaveTask","task","method","url","id","body","JSON","stringify","handleCompleteTask","taskId","handleDeleteTask","filteredTasks","taskStatus","style","styles","container","children","onAddTaskClick","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","taskWrapper","taskGrid","length","map","taskItem","taskItemHover","onMouseEnter","onMouseLeave","onEdit","onDelete","onComplete","isCompleted","CheckIcon","taskContent","taskTitle","taskDescription","CompletionIcon","noTasks","onSave","onClose","_c","display","flexDirection","alignItems","padding","width","maxWidth","gridTemplateColumns","gap","position","borderRadius","backgroundColor","boxShadow","color","transition","fontSize","margin","marginTop","textAlign","_c2","div","_c3","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../Context/AuthContext';\nimport Navbar from '../components/Manager/Navbar';\nimport TaskModal from '../components/Manager/TaskModal';\nimport DropdownMenu from '../components/Manager/DropdownMenu';\nimport { FaCheckCircle } from 'react-icons/fa'; // Importar ícone de verificação\nimport styled from 'styled-components';\n\nconst TaskManager = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [hoveredTask, setHoveredTask] = useState(null); // Estado para hover\n  const { token, userInfo } = useAuth();\n\n  const fetchTasks = async () => {\n    if (!token || !userInfo?.username) return;\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${userInfo.username}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (!response.ok) throw new Error('Erro ao buscar tarefas');\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, [token, userInfo?.username]);\n\n  const handleAddTaskClick = () => {\n    setCurrentTask(null);\n    setModalOpen(true);\n  };\n\n  const handleSaveTask = async (task) => {\n    try {\n      const method = currentTask ? 'PUT' : 'POST';\n      const url = currentTask ? `http://localhost:5000/api/manager/tasks/${currentTask.id}` : 'http://localhost:5000/api/manager/tasks';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(task),\n      });\n\n      if (!response.ok) throw new Error('Erro ao salvar tarefa');\n      await response.json();\n      \n      fetchTasks(); // Atualize a lista de tarefas\n      setModalOpen(false); // Feche o modal e limpe a tarefa atual\n      setCurrentTask(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluída');\n      await response.json();\n      \n      fetchTasks(); // Atualize a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao excluir tarefa');\n      fetchTasks(); // Atualize a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.taskStatus;\n    if (filter === 'pending') return !task.taskStatus;\n    return true;\n  });\n\n  return (\n    <div style={styles.container}>\n      <Navbar onAddTaskClick={handleAddTaskClick} onFilterChange={setFilter} />\n      <div style={styles.taskWrapper}>\n        <div style={styles.taskGrid}>\n          {filteredTasks.length > 0 ? (\n            filteredTasks.map(task => (\n              <div \n                key={task.id} \n                style={{\n                  ...styles.taskItem, \n                  ...(hoveredTask === task.id ? styles.taskItemHover : {}),\n                }}\n                onMouseEnter={() => setHoveredTask(task.id)}\n                onMouseLeave={() => setHoveredTask(null)}\n              >\n                {!task.taskStatus ? (\n                  <DropdownMenu\n                    onEdit={() => {\n                      setCurrentTask(task);\n                      setModalOpen(true);\n                    }}\n                    onDelete={() => handleDeleteTask(task.id)}\n                    onComplete={() => handleCompleteTask(task.id)}\n                    isCompleted={task.taskStatus}\n                  />\n                ) : (\n                  <CheckIcon />\n                )}\n                <div style={styles.taskContent}>\n                  <h3 style={styles.taskTitle}>Título: {task.taskTitle}</h3>\n                  <p style={styles.taskDescription}>Descrição: {task.taskDescription}</p>\n                </div>\n                {task.taskStatus && (\n                  <CompletionIcon>\n                    <FaCheckCircle />\n                  </CompletionIcon>\n                )}\n              </div>\n            ))\n          ) : (\n            <p style={styles.noTasks}>Nenhuma tarefa encontrada.</p>\n          )}\n        </div>\n      </div>\n      {modalOpen && (\n        <TaskModal \n          task={currentTask} \n          onSave={handleSaveTask} \n          onClose={() => setModalOpen(false)} \n        />\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n  },\n  taskWrapper: {\n    width: '100%',\n    maxWidth: '1200px',\n  },\n  taskGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n    gap: '15px',\n  },\n  taskItem: {\n    position: 'relative',\n    borderRadius: '8px',\n    backgroundColor: '#2a2a2a',\n    padding: '15px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.2)',\n    color: '#f5f5f5',\n    transition: '0.3s',\n  },\n  taskItemHover: {\n    backgroundColor: '#3a3a3a',\n  },\n  taskContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  taskTitle: {\n    fontSize: '18px',\n    margin: 0,\n  },\n  taskDescription: {\n    fontSize: '16px',\n    marginTop: '5px',\n  },\n  noTasks: {\n    color: '#f5f5f5',\n    textAlign: 'center',\n  },\n};\n\nconst CheckIcon = styled(FaCheckCircle)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: #16bb1f; /* Verde para o ícone de verificação */\n  font-size: 24px;\n`;\n\nconst CompletionIcon = styled.div`\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  color: #16bb1f;\n  font-size: 24px;\n`;\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}