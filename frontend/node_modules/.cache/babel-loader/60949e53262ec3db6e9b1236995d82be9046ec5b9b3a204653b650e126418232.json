{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { FaEllipsisV, FaCheck } from 'react-icons/fa';\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  const {\n    token,\n    userInfo,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (token) {\n      const fetchTasks = async () => {\n        try {\n          const response = await fetch('http://localhost:5000/api/tasks/', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            setTasks(data);\n            filterTasks(data, filter);\n          } else {\n            console.error('Erro ao carregar tarefas:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Erro ao carregar tarefas:', error);\n        }\n      };\n      fetchTasks();\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, token, filter]);\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null); // Fecha o menu ao clicar fora\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleFilterChange = newFilter => {\n    setFilter(newFilter);\n    filterTasks(tasks, newFilter);\n  };\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      case 'all':\n        setFilteredTasks(tasks);\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const updatedTasks = tasks.map(task => task.id === taskId ? {\n          ...task,\n          taskStatus: true\n        } : task);\n        setTasks(updatedTasks);\n        filterTasks(updatedTasks, filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  const handleEditClick = task => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  const handleCreateTask = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          title: newTaskTitle,\n          description: newTaskDescription,\n          createdBy: userInfo.username,\n          // Use username do userInfo\n          createdAt: new Date().toISOString(),\n          taskStatus: false\n        })\n      });\n      if (response.ok) {\n        const newTask = await response.json();\n        setTasks(prevTasks => [...prevTasks, newTask]);\n        filterTasks([...tasks, newTask], filter);\n        setNewTaskTitle('');\n        setNewTaskDescription('');\n      } else {\n        console.error('Erro ao criar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao criar tarefa:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Bem-vindo, \", userInfo.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n        onClick: logout,\n        children: \"Sair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(FilterButtons, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleFilterChange('recent'),\n          children: \"Recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleFilterChange('completed'),\n          children: \"Conclu\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleFilterChange('pending'),\n          children: \"Pendentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleFilterChange('all'),\n          children: \"Todas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          children: [/*#__PURE__*/_jsxDEV(TaskContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatDate(task.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TaskActions, {\n            children: [!task.taskStatus && /*#__PURE__*/_jsxDEV(ActionButton, {\n              onClick: () => handleCompleteTask(task.id),\n              children: [/*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this), \" Concluir\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n              ref: menuRef,\n              onClick: () => setMenuOpen(task.id),\n              children: [/*#__PURE__*/_jsxDEV(FaEllipsisV, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), menuOpen === task.id && /*#__PURE__*/_jsxDEV(Menu, {\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => handleEditClick(task),\n                  children: \"Editar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => handleDeleteTask(task.id),\n                  children: \"Excluir\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewTask, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Criar Nova Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"T\\xEDtulo\",\n          value: newTaskTitle,\n          onChange: e => setNewTaskTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Descri\\xE7\\xE3o\",\n          value: newTaskDescription,\n          onChange: e => setNewTaskDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateTask,\n          children: \"Criar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), modalOpen && selectedTask && /*#__PURE__*/_jsxDEV(Modal, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Editar Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: selectedTask.title,\n        onChange: e => setSelectedTask({\n          ...selectedTask,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: selectedTask.description,\n        onChange: e => setSelectedTask({\n          ...selectedTask,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleUpdateTask(selectedTask),\n        children: \"Salvar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCloseModal,\n        children: \"Fechar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n\n// Styled Components\n_s(UserTasksPage, \"pMhXUr3M1ZUtv9tKoIjgJecO5Lo=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = UserTasksPage;\nconst Container = styled.div`\n  /* Your styles here */\n`;\n_c2 = Container;\nconst Header = styled.header`\n  /* Your styles here */\n`;\n_c3 = Header;\nconst LogoutButton = styled.button`\n  /* Your styles here */\n`;\n_c4 = LogoutButton;\nconst Main = styled.main`\n  /* Your styles here */\n`;\n_c5 = Main;\nconst FilterButtons = styled.div`\n  /* Your styles here */\n`;\n_c6 = FilterButtons;\nconst Button = styled.button`\n  /* Your styles here */\n`;\n_c7 = Button;\nconst TaskList = styled.div`\n  /* Your styles here */\n`;\n_c8 = TaskList;\nconst TaskCard = styled.div`\n  /* Your styles here */\n`;\n_c9 = TaskCard;\nconst TaskContent = styled.div`\n  /* Your styles here */\n`;\n_c10 = TaskContent;\nconst TaskActions = styled.div`\n  /* Your styles here */\n`;\n_c11 = TaskActions;\nconst ActionButton = styled.button`\n  /* Your styles here */\n`;\n_c12 = ActionButton;\nconst Menu = styled.div`\n  /* Your styles here */\n`;\n_c13 = Menu;\nconst MenuItem = styled.button`\n  /* Your styles here */\n`;\n_c14 = MenuItem;\nconst NewTask = styled.div`\n  /* Your styles here */\n`;\n_c15 = NewTask;\nconst Modal = styled.div`\n  /* Your styles here */\n`;\n_c16 = Modal;\nexport default UserTasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"UserTasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"LogoutButton\");\n$RefreshReg$(_c5, \"Main\");\n$RefreshReg$(_c6, \"FilterButtons\");\n$RefreshReg$(_c7, \"Button\");\n$RefreshReg$(_c8, \"TaskList\");\n$RefreshReg$(_c9, \"TaskCard\");\n$RefreshReg$(_c10, \"TaskContent\");\n$RefreshReg$(_c11, \"TaskActions\");\n$RefreshReg$(_c12, \"ActionButton\");\n$RefreshReg$(_c13, \"Menu\");\n$RefreshReg$(_c14, \"MenuItem\");\n$RefreshReg$(_c15, \"NewTask\");\n$RefreshReg$(_c16, \"Modal\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","useNavigate","FaEllipsisV","FaCheck","useAuth","jsxDEV","_jsxDEV","UserTasksPage","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","selectedTask","setSelectedTask","modalOpen","setModalOpen","menuOpen","setMenuOpen","menuRef","newTaskTitle","setNewTaskTitle","newTaskDescription","setNewTaskDescription","token","userInfo","logout","navigate","fetchTasks","response","fetch","headers","Authorization","ok","data","json","filterTasks","console","error","statusText","length","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","capitalizeFirstLetter","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","handleFilterChange","newFilter","task","taskStatus","sort","a","b","createdAt","handleCompleteTask","taskId","method","updatedTasks","map","id","handleCloseModal","handleEditClick","handleUpdateTask","updatedTask","body","JSON","stringify","updatedTaskData","prevTasks","handleDeleteTask","handleCreateTask","title","description","createdBy","username","toISOString","newTask","Container","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","LogoutButton","onClick","Main","FilterButtons","Button","TaskList","TaskCard","TaskContent","TaskActions","ActionButton","ref","Menu","MenuItem","NewTask","type","placeholder","value","onChange","e","Modal","_c","div","_c2","header","_c3","button","_c4","main","_c5","_c6","_c7","_c8","_c9","_c10","_c11","_c12","_c13","_c14","_c15","_c16","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { FaEllipsisV, FaCheck } from 'react-icons/fa';\nimport { useAuth } from '../hooks/useAuth';\n\nconst UserTasksPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n\n  const { token, userInfo, logout } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (token) {\n      const fetchTasks = async () => {\n        try {\n          const response = await fetch('http://localhost:5000/api/tasks/', {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n\n          if (response.ok) {\n            const data = await response.json();\n            setTasks(data);\n            filterTasks(data, filter);\n          } else {\n            console.error('Erro ao carregar tarefas:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Erro ao carregar tarefas:', error);\n        }\n      };\n\n      fetchTasks();\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, token, filter]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null); // Fecha o menu ao clicar fora\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Data não disponível.';\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const handleFilterChange = (newFilter) => {\n    setFilter(newFilter);\n    filterTasks(tasks, newFilter);\n  };\n\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      case 'all':\n        setFilteredTasks(tasks);\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        const updatedTasks = tasks.map(task =>\n          task.id === taskId ? { ...task, taskStatus: true } : task\n        );\n        setTasks(updatedTasks);\n        filterTasks(updatedTasks, filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n\n  const handleEditClick = (task) => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n\n  const handleUpdateTask = async (updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(updatedTask),\n      });\n\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task =>\n            task.id === updatedTaskData.id ? updatedTaskData : task\n          );\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n\n  const handleCreateTask = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          title: newTaskTitle,\n          description: newTaskDescription,\n          createdBy: userInfo.username, // Use username do userInfo\n          createdAt: new Date().toISOString(),\n          taskStatus: false,\n        }),\n      });\n\n      if (response.ok) {\n        const newTask = await response.json();\n        setTasks(prevTasks => [...prevTasks, newTask]);\n        filterTasks([...tasks, newTask], filter);\n        setNewTaskTitle('');\n        setNewTaskDescription('');\n      } else {\n        console.error('Erro ao criar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao criar tarefa:', error);\n    }\n  };\n\n  return (\n    <Container>\n      <Header>\n        <h1>Bem-vindo, {userInfo.username}!</h1>\n        <LogoutButton onClick={logout}>Sair</LogoutButton>\n      </Header>\n      <Main>\n        <FilterButtons>\n          <Button onClick={() => handleFilterChange('recent')}>Recentes</Button>\n          <Button onClick={() => handleFilterChange('completed')}>Concluídas</Button>\n          <Button onClick={() => handleFilterChange('pending')}>Pendentes</Button>\n          <Button onClick={() => handleFilterChange('all')}>Todas</Button>\n        </FilterButtons>\n        <TaskList>\n          {filteredTasks.map((task) => (\n            <TaskCard key={task.id}>\n              <TaskContent>\n                <h3>{task.title}</h3>\n                <p>{task.description}</p>\n                <p>{formatDate(task.createdAt)}</p>\n              </TaskContent>\n              <TaskActions>\n                {!task.taskStatus && (\n                  <ActionButton onClick={() => handleCompleteTask(task.id)}>\n                    <FaCheck /> Concluir\n                  </ActionButton>\n                )}\n                <ActionButton ref={menuRef} onClick={() => setMenuOpen(task.id)}>\n                  <FaEllipsisV />\n                  {menuOpen === task.id && (\n                    <Menu>\n                      <MenuItem onClick={() => handleEditClick(task)}>Editar</MenuItem>\n                      <MenuItem onClick={() => handleDeleteTask(task.id)}>Excluir</MenuItem>\n                    </Menu>\n                  )}\n                </ActionButton>\n              </TaskActions>\n            </TaskCard>\n          ))}\n        </TaskList>\n        <NewTask>\n          <h2>Criar Nova Tarefa</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Título\"\n            value={newTaskTitle}\n            onChange={(e) => setNewTaskTitle(e.target.value)}\n          />\n          <textarea\n            placeholder=\"Descrição\"\n            value={newTaskDescription}\n            onChange={(e) => setNewTaskDescription(e.target.value)}\n          />\n          <Button onClick={handleCreateTask}>Criar Tarefa</Button>\n        </NewTask>\n      </Main>\n      {modalOpen && selectedTask && (\n        <Modal>\n          <h2>Editar Tarefa</h2>\n          <input\n            type=\"text\"\n            value={selectedTask.title}\n            onChange={(e) => setSelectedTask({ ...selectedTask, title: e.target.value })}\n          />\n          <textarea\n            value={selectedTask.description}\n            onChange={(e) => setSelectedTask({ ...selectedTask, description: e.target.value })}\n          />\n          <Button onClick={() => handleUpdateTask(selectedTask)}>Salvar</Button>\n          <Button onClick={handleCloseModal}>Fechar</Button>\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\n// Styled Components\n\nconst Container = styled.div`\n  /* Your styles here */\n`;\n\nconst Header = styled.header`\n  /* Your styles here */\n`;\n\nconst LogoutButton = styled.button`\n  /* Your styles here */\n`;\n\nconst Main = styled.main`\n  /* Your styles here */\n`;\n\nconst FilterButtons = styled.div`\n  /* Your styles here */\n`;\n\nconst Button = styled.button`\n  /* Your styles here */\n`;\n\nconst TaskList = styled.div`\n  /* Your styles here */\n`;\n\nconst TaskCard = styled.div`\n  /* Your styles here */\n`;\n\nconst TaskContent = styled.div`\n  /* Your styles here */\n`;\n\nconst TaskActions = styled.div`\n  /* Your styles here */\n`;\n\nconst ActionButton = styled.button`\n  /* Your styles here */\n`;\n\nconst Menu = styled.div`\n  /* Your styles here */\n`;\n\nconst MenuItem = styled.button`\n  /* Your styles here */\n`;\n\nconst NewTask = styled.div`\n  /* Your styles here */\n`;\n\nconst Modal = styled.div`\n  /* Your styles here */\n`;\n\nexport default UserTasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}