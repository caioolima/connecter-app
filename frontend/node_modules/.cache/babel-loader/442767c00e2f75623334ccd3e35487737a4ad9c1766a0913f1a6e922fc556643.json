{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/Context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [loginError, setLoginError] = useState(null);\n  const [registerError, setRegisterError] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: '',\n    fullName: '',\n    createdAt: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUserInfo({\n          username: decodedToken.username || '',\n          email: decodedToken.email || '',\n          fullName: decodedToken.fullName || '',\n          createdAt: decodedToken.createdAt || ''\n        });\n      } catch (error) {\n        console.error('Erro ao decodificar o token', error);\n        localStorage.removeItem('token');\n        setToken('');\n        setUserInfo({\n          username: '',\n          email: '',\n          fullName: '',\n          createdAt: ''\n        });\n      }\n    } else {\n      setUserInfo({\n        username: '',\n        email: '',\n        fullName: '',\n        createdAt: ''\n      });\n    }\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      if (!email || !password) {\n        throw new Error('E-mail e senha s찾o obrigat처rios.');\n      }\n      const response = await fetch('http://localhost:5000/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'E-mail ou senha incorretos. Verifique e tente novamente.');\n      }\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n      const decodedToken = jwtDecode(data.token);\n      setUserInfo({\n        username: decodedToken.username || '',\n        email: decodedToken.email || '',\n        fullName: decodedToken.fullName || '',\n        createdAt: decodedToken.createdAt || ''\n      });\n      window.location.reload();\n    } catch (err) {\n      setLoginError(err.message || 'Erro ao fazer login. Tente novamente mais tarde.');\n      console.error('Erro ao fazer login:', err);\n    }\n  };\n  const register = async (username, fullName, email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          fullName,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Erro ao registrar');\n      }\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n      const decodedToken = jwtDecode(data.token);\n      setUserInfo({\n        username: decodedToken.username || '',\n        email: decodedToken.email || '',\n        fullName: decodedToken.fullName || '',\n        createdAt: decodedToken.createdAt || ''\n      });\n      navigate('/login');\n    } catch (err) {\n      setRegisterError(err.message);\n      console.error('Erro ao registrar:', err);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken('');\n    setUserInfo({\n      username: '',\n      email: '',\n      fullName: '',\n      createdAt: ''\n    });\n    window.location.reload();\n  };\n  const clearLoginError = () => setLoginError(null);\n  const clearRegisterError = () => setRegisterError(null);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      register,\n      logout,\n      loginError,\n      registerError,\n      token,\n      userInfo,\n      clearLoginError,\n      clearRegisterError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"wOIoBwRKADiichOD3O0kuZpdDbI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","loginError","setLoginError","registerError","setRegisterError","token","setToken","localStorage","getItem","userInfo","setUserInfo","username","email","fullName","createdAt","navigate","decodedToken","error","console","removeItem","login","password","Error","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","data","setItem","window","location","reload","err","register","logout","clearLoginError","clearRegisterError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/Context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [loginError, setLoginError] = useState(null);\n  const [registerError, setRegisterError] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: '',\n    fullName: '',\n    createdAt: '',\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUserInfo({\n          username: decodedToken.username || '',\n          email: decodedToken.email || '',\n          fullName: decodedToken.fullName || '',\n          createdAt: decodedToken.createdAt || '',\n        });\n      } catch (error) {\n        console.error('Erro ao decodificar o token', error);\n        localStorage.removeItem('token');\n        setToken('');\n        setUserInfo({\n          username: '',\n          email: '',\n          fullName: '',\n          createdAt: '',\n        });\n      }\n    } else {\n      setUserInfo({\n        username: '',\n        email: '',\n        fullName: '',\n        createdAt: '',\n      });\n    }\n  }, [token]);\n\n  const login = async (email, password) => {\n    try {\n      if (!email || !password) {\n        throw new Error('E-mail e senha s찾o obrigat처rios.');\n      }\n\n      const response = await fetch('http://localhost:5000/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'E-mail ou senha incorretos. Verifique e tente novamente.');\n      }\n\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n\n      const decodedToken = jwtDecode(data.token);\n      setUserInfo({\n        username: decodedToken.username || '',\n        email: decodedToken.email || '',\n        fullName: decodedToken.fullName || '',\n        createdAt: decodedToken.createdAt || '',\n      });\n\n      window.location.reload();\n    } catch (err) {\n      setLoginError(err.message || 'Erro ao fazer login. Tente novamente mais tarde.');\n      console.error('Erro ao fazer login:', err);\n    }\n  };\n\n  const register = async (username, fullName, email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, fullName, email, password }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Erro ao registrar');\n      }\n\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n\n      const decodedToken = jwtDecode(data.token);\n      setUserInfo({\n        username: decodedToken.username || '',\n        email: decodedToken.email || '',\n        fullName: decodedToken.fullName || '',\n        createdAt: decodedToken.createdAt || '',\n      });\n\n      navigate('/login');\n    } catch (err) {\n      setRegisterError(err.message);\n      console.error('Erro ao registrar:', err);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken('');\n    setUserInfo({\n      username: '',\n      email: '',\n      fullName: '',\n      createdAt: '',\n    });\n    window.location.reload();\n  };\n\n  const clearLoginError = () => setLoginError(null);\n  const clearRegisterError = () => setRegisterError(null);\n\n  return (\n    <AuthContext.Provider value={{ \n      login, \n      register, \n      logout, \n      loginError, \n      registerError, \n      token, \n      userInfo, \n      clearLoginError, \n      clearRegisterError \n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}