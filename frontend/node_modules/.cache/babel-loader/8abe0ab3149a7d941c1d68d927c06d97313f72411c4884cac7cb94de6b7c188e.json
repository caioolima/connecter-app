{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport { FaCheck } from 'react-icons/fa';\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksPage = () => {\n  _s();\n  const {\n    user,\n    isAuthenticated\n  } = useAuth(); // Obtém usuário e autenticação do useAuth\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n    const fetchTasks = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await fetch('http://localhost:5000/api/tasks/', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n          filterTasks(data, filter);\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      }\n    };\n    fetchTasks();\n  }, [isAuthenticated, navigate, filter]);\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null); // Fecha o menu ao clicar fora\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleFilterChange = newFilter => {\n    setFilter(newFilter);\n    filterTasks(tasks, newFilter);\n  };\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      case 'all':\n        setFilteredTasks(tasks);\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        // Atualiza a lista de tarefas no estado\n        const updatedTasks = tasks.map(task => task.id === taskId ? {\n          ...task,\n          taskStatus: true\n        } : task);\n        setTasks(updatedTasks);\n        filterTasks(updatedTasks, filter); // Reaplica o filtro\n\n        // Fecha o menu e modal\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  const handleEditClick = task => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  const toggleMenu = taskId => {\n    setMenuOpen(prev => prev === taskId ? null : taskId);\n  };\n  const handleAddTask = async () => {\n    if (!newTaskTitle.trim()) {\n      alert(\"O título da tarefa não pode estar vazio.\");\n      return;\n    }\n    const newTask = {\n      title: newTaskTitle,\n      // Enviar como \"title\"\n      description: newTaskDescription // Enviar como \"description\"\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setTasks(prevTasks => [data.userTask, ...prevTasks]);\n        filterTasks([data.userTask, ...tasks], filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao criar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao criar tarefa:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [\"Tarefas de \", user.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FilterMenu, {\n        children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('recent'),\n          active: filter === 'recent',\n          children: \"Recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('completed'),\n          active: filter === 'completed',\n          children: \"Conclu\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('pending'),\n          active: filter === 'pending',\n          children: \"Pendentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('all'),\n          active: filter === 'all',\n          children: \"Todas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setModalOpen(true),\n          children: \"Criar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 3\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [modalOpen && !selectedTask && /*#__PURE__*/_jsxDEV(Modal, {\n        children: /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Criar Tarefa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: e => {\n              e.preventDefault();\n              handleAddTask();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: newTaskTitle,\n              onChange: e => setNewTaskTitle(e.target.value),\n              placeholder: \"T\\xEDtulo da tarefa\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n              value: newTaskDescription,\n              onChange: e => setNewTaskDescription(e.target.value),\n              placeholder: \"Descri\\xE7\\xE3o da tarefa\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Criar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              onClick: handleCloseModal,\n              children: \"Fechar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(TaskGrid, {\n        children: filteredTasks.length ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          disabled: task.taskStatus,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {\n              onClick: () => toggleMenu(task.id),\n              disabled: task.taskStatus,\n              children: /*#__PURE__*/_jsxDEV(FaEllipsisV, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CheckIcon, {\n              visible: task.taskStatus,\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 21\n            }, this), menuOpen === task.id && !task.taskStatus && /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleEditClick(task),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 25\n              }, this), !task.taskStatus && /*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleCompleteTask(task.id),\n                children: \"Concluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TaskDescription, {\n            children: task.taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n            children: formatDate(task.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTasks, {\n          children: \"Nenhuma tarefa encontrada.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this), modalOpen && selectedTask && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Editar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            e.preventDefault();\n            handleUpdateTask(selectedTask);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: selectedTask.taskTitle,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskTitle: e.target.value\n            }),\n            placeholder: \"T\\xEDtulo da tarefa\",\n            required: true,\n            disabled: selectedTask.taskStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: selectedTask.taskDescription,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskDescription: e.target.value\n            }),\n            placeholder: \"Descri\\xE7\\xE3o da tarefa\",\n            required: true,\n            disabled: selectedTask.taskStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: selectedTask.taskStatus,\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => handleDeleteTask(selectedTask.id),\n            disabled: selectedTask.taskStatus,\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: handleCloseModal,\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 7\n  }, this);\n};\n_s(UserTasksPage, \"2Yrh3Ti+k1zCwItLLo7Poic5HU8=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = UserTasksPage;\nconst Container = styled.div`\n      display: flex;\n      min-height: 100vh;\n      background-color: #000;\n    `;\n_c2 = Container;\nconst Sidebar = styled.div`\n      width: 20%;\n      padding: 20px;\n      border-right: 2px solid #333; /* Linha lateral direita */\n    `;\n_c3 = Sidebar;\nconst Header = styled.h1`\n      font-size: 24px;\n      margin-bottom: 2rem;\n      margin-top: 5rem;\n      color: #fff;\n    `;\n_c4 = Header;\nconst FilterMenu = styled.div`\n      display: flex;\n      flex-direction: column;\n    `;\n_c5 = FilterMenu;\nconst FilterButton = styled.button`\n    font-weight: bold;\n    background-color: ${props => props.active ? '#000000' : '#ffffff'}; /* Preto quando ativo, branco quando inativo */\n    color: ${props => props.active ? '#ffffff' : '#000000'}; /* Branco quando ativo, preto quando inativo */\n    border: 1px solid #eaeaea; /* Borda leve */\n    padding: 8px 16px;\n    margin-bottom: 10px;\n    cursor: pointer;\n    border-radius: 5px; /* Bordas levemente arredondadas */\n    transition: background-color 0.2s ease, color 0.2s ease, border 0.2s ease; /* Transições suaves */\n    \n    &:hover {\n      background-color: #333333; /* Cinza claro no hover */\n      border-color: #d0d0d0; /* Ajuste sutil na borda no hover */\n      color: #fff;\n    }\n\n    &:focus {\n      outline: none; /* Remove outline padrão */\n      box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1); /* Sombra leve no foco */\n    }\n\n    &:active {\n      background-color: #333333; /* Tom mais escuro quando pressionado */\n      border-color: #333333; /* Borda alinhada com o background */\n    }\n  `;\n_c6 = FilterButton;\nconst Content = styled.div`\n      flex: 1;\n      padding: 20px;\n    `;\n_c7 = Content;\nconst TaskGrid = styled.div`\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 20px;\n      margin-top: 5rem;\n    `;\n_c8 = TaskGrid;\nconst TaskCard = styled.div`\n    background-color: #ffffff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    opacity: ${props => props.disabled ? 0.6 : 1};\n    pointer-events: ${props => props.disabled ? 'none' : 'auto'};\n  `;\n_c9 = TaskCard;\nconst CheckIcon = styled.div`\n    display: ${props => props.visible ? 'block' : 'none'};\n    color: green;\n    font-size: 20px;\n  `;\n_c10 = CheckIcon;\nconst CardHeader = styled.div`\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    `;\n_c11 = CardHeader;\nconst TaskName = styled.h3`\n      margin: 0;\n    `;\n_c12 = TaskName;\nconst MenuIcon = styled.div`\n    cursor: pointer;\n  `;\n_c13 = MenuIcon;\nconst DropdownMenu = styled.div`\n    position: relative; /* Posiciona o menu em relação ao MenuWrapper */\n    top: 100%; /* Coloca o menu diretamente abaixo do ícone */\n    right: 0;\n    background-color: white;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    z-index: 1000;\n    min-width: 120px; /* Define uma largura mínima para o menu */\n  `;\n_c14 = DropdownMenu;\nconst DropdownItem = styled.div`\n    padding: 8px 16px;\n    cursor: pointer;\n    &:hover {\n      background-color: #f0f0f0;\n    }\n  `;\n_c15 = DropdownItem;\nconst TaskDescription = styled.p`\n      font-size: 14px;\n      margin: 10px 0;\n    `;\n_c16 = TaskDescription;\nconst TaskDate = styled.span`\n      font-size: 12px;\n      color: #777;\n    `;\n_c17 = TaskDate;\nconst NoTasks = styled.div`\n      text-align: center;\n      color: #777;\n      padding: 20px;\n    `;\n_c18 = NoTasks;\nconst Modal = styled.div`\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.6);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    `;\n_c19 = Modal;\nconst ModalContent = styled.div`\n      background: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      width: 400px;\n      max-width: 80%;\n    `;\n_c20 = ModalContent;\nconst Form = styled.form`\n      display: flex;\n      flex-direction: column;\n    `;\n_c21 = Form;\nconst Input = styled.input`\n      margin-bottom: 10px;\n      padding: 10px;\n      font-size: 16px;\n    `;\n_c22 = Input;\nconst TextArea = styled.textarea`\n      margin-bottom: 10px;\n      padding: 10px;\n      font-size: 16px;\n    `;\n_c23 = TextArea;\nconst Button = styled.button`\n      padding: 10px;\n      margin-top: 10px;\n      cursor: pointer;\n      background-color: #3b82f6;\n      color: white;\n      border: none;\n      border-radius: 4px;\n    `;\n_c24 = Button;\nexport default UserTasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24;\n$RefreshReg$(_c, \"UserTasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Sidebar\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"FilterMenu\");\n$RefreshReg$(_c6, \"FilterButton\");\n$RefreshReg$(_c7, \"Content\");\n$RefreshReg$(_c8, \"TaskGrid\");\n$RefreshReg$(_c9, \"TaskCard\");\n$RefreshReg$(_c10, \"CheckIcon\");\n$RefreshReg$(_c11, \"CardHeader\");\n$RefreshReg$(_c12, \"TaskName\");\n$RefreshReg$(_c13, \"MenuIcon\");\n$RefreshReg$(_c14, \"DropdownMenu\");\n$RefreshReg$(_c15, \"DropdownItem\");\n$RefreshReg$(_c16, \"TaskDescription\");\n$RefreshReg$(_c17, \"TaskDate\");\n$RefreshReg$(_c18, \"NoTasks\");\n$RefreshReg$(_c19, \"Modal\");\n$RefreshReg$(_c20, \"ModalContent\");\n$RefreshReg$(_c21, \"Form\");\n$RefreshReg$(_c22, \"Input\");\n$RefreshReg$(_c23, \"TextArea\");\n$RefreshReg$(_c24, \"Button\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","useNavigate","jwtDecode","FaEllipsisV","FaCheck","useAuth","jsxDEV","_jsxDEV","UserTasksPage","_s","user","isAuthenticated","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","selectedTask","setSelectedTask","modalOpen","setModalOpen","menuOpen","setMenuOpen","menuRef","newTaskTitle","setNewTaskTitle","newTaskDescription","setNewTaskDescription","navigate","fetchTasks","token","localStorage","getItem","response","fetch","headers","Authorization","ok","data","json","filterTasks","console","error","statusText","length","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","capitalizeFirstLetter","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","handleFilterChange","newFilter","task","taskStatus","sort","a","b","createdAt","handleCompleteTask","taskId","method","updatedTasks","map","id","handleCloseModal","handleEditClick","handleUpdateTask","updatedTask","body","JSON","stringify","updatedTaskData","prevTasks","handleDeleteTask","toggleMenu","prev","handleAddTask","trim","alert","newTask","title","description","userTask","Container","children","Sidebar","Header","firstName","fileName","_jsxFileName","lineNumber","columnNumber","FilterMenu","FilterButton","onClick","active","Content","Modal","ModalContent","Form","onSubmit","e","preventDefault","Input","type","value","onChange","placeholder","required","TextArea","Button","TaskGrid","TaskCard","disabled","CardHeader","TaskName","taskTitle","MenuIcon","CheckIcon","visible","DropdownMenu","ref","DropdownItem","TaskDescription","taskDescription","TaskDate","NoTasks","_c","div","_c2","_c3","h1","_c4","_c5","button","props","_c6","_c7","_c8","_c9","_c10","_c11","h3","_c12","_c13","_c14","_c15","p","_c16","span","_c17","_c18","_c19","_c20","form","_c21","input","_c22","textarea","_c23","_c24","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["  import React, { useEffect, useState, useRef } from 'react';\n  import styled from 'styled-components';\n  import { useNavigate } from 'react-router-dom';\n  import { jwtDecode } from 'jwt-decode';\n  import { FaEllipsisV } from 'react-icons/fa';\n  import { FaCheck } from 'react-icons/fa';\n  import { useAuth } from '../hooks/useAuth';\n\n  const UserTasksPage = () => {\n    const { user, isAuthenticated } = useAuth(); // Obtém usuário e autenticação do useAuth\n    const [tasks, setTasks] = useState([]);\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    const [filter, setFilter] = useState('recent');\n    const [selectedTask, setSelectedTask] = useState(null);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [menuOpen, setMenuOpen] = useState(null);\n    const menuRef = useRef(null);\n    const [newTaskTitle, setNewTaskTitle] = useState('');\n    const [newTaskDescription, setNewTaskDescription] = useState('');\n  \n    const navigate = useNavigate();\n  \n    useEffect(() => {\n      if (!isAuthenticated) {\n        navigate('/login');\n        return;\n      }\n  \n      const fetchTasks = async () => {\n        try {\n          const token = localStorage.getItem('token');\n          const response = await fetch('http://localhost:5000/api/tasks/', {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n  \n          if (response.ok) {\n            const data = await response.json();\n            setTasks(data);\n            filterTasks(data, filter);\n          } else {\n            console.error('Erro ao carregar tarefas:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Erro ao carregar tarefas:', error);\n        }\n      };\n  \n      fetchTasks();\n    }, [isAuthenticated, navigate, filter]);\n\n    useEffect(() => {\n      if (tasks.length) {\n        filterTasks(tasks, filter);\n      }\n    }, [tasks, filter]);\n\n    useEffect(() => {\n      const handleClickOutside = (event) => {\n        if (menuRef.current && !menuRef.current.contains(event.target)) {\n          setMenuOpen(null); // Fecha o menu ao clicar fora\n        }\n      };\n\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    const capitalizeFirstLetter = (string) => {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    };\n\n    const formatDate = (dateString) => {\n      if (!dateString) return 'Data não disponível.';\n      const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    };\n\n    const handleFilterChange = (newFilter) => {\n      setFilter(newFilter);\n      filterTasks(tasks, newFilter);\n    };\n\n    const filterTasks = (tasks, filter) => {\n      switch (filter) {\n        case 'recent':\n          setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n          break;\n        case 'completed':\n          setFilteredTasks(tasks.filter(task => task.taskStatus));\n          break;\n        case 'pending':\n          setFilteredTasks(tasks.filter(task => !task.taskStatus));\n          break;\n        case 'all':\n          setFilteredTasks(tasks);\n          break;\n        default:\n          setFilteredTasks(tasks);\n      }\n    };\n    \n\n    const handleCompleteTask = async (taskId) => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n    \n        if (response.ok) {\n          // Atualiza a lista de tarefas no estado\n          const updatedTasks = tasks.map(task =>\n            task.id === taskId ? { ...task, taskStatus: true } : task\n          );\n          setTasks(updatedTasks);\n          filterTasks(updatedTasks, filter); // Reaplica o filtro\n    \n          // Fecha o menu e modal\n          handleCloseModal();\n        } else {\n          console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao marcar tarefa como concluída:', error);\n      }\n    };\n    \n\n    const handleEditClick = (task) => {\n      setSelectedTask(task);\n      setModalOpen(true);\n      setMenuOpen(null); // Fecha o menu ao clicar em editar\n    };\n\n    const handleCloseModal = () => {\n      setModalOpen(false);\n      setSelectedTask(null);\n    };\n\n    const handleUpdateTask = async (updatedTask) => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n          body: JSON.stringify(updatedTask),\n        });\n\n        if (response.ok) {\n          const updatedTaskData = await response.json();\n          setTasks(prevTasks => {\n            const updatedTasks = prevTasks.map(task =>\n              task.id === updatedTaskData.id ? updatedTaskData : task\n            );\n            filterTasks(updatedTasks, filter);\n            return updatedTasks;\n          });\n          handleCloseModal();\n        } else {\n          console.error('Erro ao atualizar tarefa:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao atualizar tarefa:', error);\n      }\n    };\n\n    const handleDeleteTask = async (taskId) => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n\n        if (response.ok) {\n          setTasks(prevTasks => {\n            const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n            filterTasks(updatedTasks, filter);\n            return updatedTasks;\n          });\n          handleCloseModal();\n        } else {\n          console.error('Erro ao excluir tarefa:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao excluir tarefa:', error);\n      }\n    };\n\n    const toggleMenu = (taskId) => {\n      setMenuOpen((prev) => (prev === taskId ? null : taskId));\n    };\n\n    const handleAddTask = async () => {\n      if (!newTaskTitle.trim()) {\n        alert(\"O título da tarefa não pode estar vazio.\");\n        return;\n      }\n    \n      const newTask = {\n        title: newTaskTitle,       // Enviar como \"title\"\n        description: newTaskDescription  // Enviar como \"description\"\n      };\n    \n      try {\n        const response = await fetch('http://localhost:5000/api/tasks/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n          body: JSON.stringify(newTask),\n        });\n    \n        if (response.ok) {\n          const data = await response.json();\n          setTasks(prevTasks => [data.userTask, ...prevTasks]);\n          filterTasks([data.userTask, ...tasks], filter);\n          handleCloseModal();\n        } else {\n          console.error('Erro ao criar tarefa:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao criar tarefa:', error);\n      }\n    };\n    \n    return (\n      <Container>\n        <Sidebar>\n          <Header>Tarefas de {user.firstName}</Header>\n          <FilterMenu>\n  <FilterButton onClick={() => handleFilterChange('recent')} active={filter === 'recent'}>Recentes</FilterButton>\n  <FilterButton onClick={() => handleFilterChange('completed')} active={filter === 'completed'}>Concluídas</FilterButton>\n  <FilterButton onClick={() => handleFilterChange('pending')} active={filter === 'pending'}>Pendentes</FilterButton>\n  <FilterButton onClick={() => handleFilterChange('all')} active={filter === 'all'}>Todas</FilterButton>\n  <FilterButton onClick={() => setModalOpen(true)}>Criar Tarefa</FilterButton> {/* Novo botão */}\n</FilterMenu>\n\n        </Sidebar>\n        <Content>\n        {modalOpen && !selectedTask && (\n  <Modal>\n    <ModalContent>\n      <h2>Criar Tarefa</h2>\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleAddTask();\n        }}\n      >\n        <Input\n          type=\"text\"\n          value={newTaskTitle}\n          onChange={(e) => setNewTaskTitle(e.target.value)}\n          placeholder=\"Título da tarefa\"\n          required\n        />\n        <TextArea\n          value={newTaskDescription}\n          onChange={(e) => setNewTaskDescription(e.target.value)}\n          placeholder=\"Descrição da tarefa\"\n          required\n        />\n        <Button type=\"submit\">Criar</Button>\n        <Button type=\"button\" onClick={handleCloseModal}>Fechar</Button>\n      </Form>\n    </ModalContent>\n  </Modal>\n)}\n\n          <TaskGrid>\n            {filteredTasks.length ? (\n              filteredTasks.map((task) => (\n                <TaskCard key={task.id} disabled={task.taskStatus}>\n                  <CardHeader>\n                    <TaskName>{task.taskTitle}</TaskName>\n                    <MenuIcon onClick={() => toggleMenu(task.id)} disabled={task.taskStatus}>\n                      <FaEllipsisV />\n                    </MenuIcon>\n                    <CheckIcon visible={task.taskStatus}>\n                      <FaCheck />\n                    </CheckIcon>\n                    {menuOpen === task.id && !task.taskStatus && (\n                      <DropdownMenu ref={menuRef}>\n                        <DropdownItem onClick={() => handleEditClick(task)}>Editar</DropdownItem>\n                        {!task.taskStatus && (\n                          <DropdownItem onClick={() => handleCompleteTask(task.id)}>Concluir</DropdownItem>\n                        )}\n                      </DropdownMenu>\n                    )}\n                  </CardHeader>\n                  <TaskDescription>{task.taskDescription}</TaskDescription>\n                  <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n                </TaskCard>\n              ))\n            ) : (\n              <NoTasks>Nenhuma tarefa encontrada.</NoTasks>\n            )}\n          </TaskGrid>\n        </Content>\n        {modalOpen && selectedTask && (\n          <Modal>\n            <ModalContent>\n              <h2>Editar Tarefa</h2>\n              <Form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  handleUpdateTask(selectedTask);\n                }}\n              >\n                <Input\n                  type=\"text\"\n                  value={selectedTask.taskTitle}\n                  onChange={(e) => setSelectedTask({ ...selectedTask, taskTitle: e.target.value })}\n                  placeholder=\"Título da tarefa\"\n                  required\n                  disabled={selectedTask.taskStatus}\n                />\n                <TextArea\n                  value={selectedTask.taskDescription}\n                  onChange={(e) => setSelectedTask({ ...selectedTask, taskDescription: e.target.value })}\n                  placeholder=\"Descrição da tarefa\"\n                  required\n                  disabled={selectedTask.taskStatus}\n                />\n                <Button type=\"submit\" disabled={selectedTask.taskStatus}>Salvar</Button>\n                <Button type=\"button\" onClick={() => handleDeleteTask(selectedTask.id)} disabled={selectedTask.taskStatus}>Excluir</Button>\n                <Button type=\"button\" onClick={handleCloseModal}>Fechar</Button>\n              </Form>\n            </ModalContent>\n          </Modal>\n        )}\n      </Container>\n    );\n  };\n\n    \n    const Container = styled.div`\n      display: flex;\n      min-height: 100vh;\n      background-color: #000;\n    `;\n    \n    const Sidebar = styled.div`\n      width: 20%;\n      padding: 20px;\n      border-right: 2px solid #333; /* Linha lateral direita */\n    `;\n    \n    const Header = styled.h1`\n      font-size: 24px;\n      margin-bottom: 2rem;\n      margin-top: 5rem;\n      color: #fff;\n    `;\n    \n    const FilterMenu = styled.div`\n      display: flex;\n      flex-direction: column;\n    `;\n    \n    const FilterButton = styled.button`\n    font-weight: bold;\n    background-color: ${(props) => (props.active ? '#000000' : '#ffffff')}; /* Preto quando ativo, branco quando inativo */\n    color: ${(props) => (props.active ? '#ffffff' : '#000000')}; /* Branco quando ativo, preto quando inativo */\n    border: 1px solid #eaeaea; /* Borda leve */\n    padding: 8px 16px;\n    margin-bottom: 10px;\n    cursor: pointer;\n    border-radius: 5px; /* Bordas levemente arredondadas */\n    transition: background-color 0.2s ease, color 0.2s ease, border 0.2s ease; /* Transições suaves */\n    \n    &:hover {\n      background-color: #333333; /* Cinza claro no hover */\n      border-color: #d0d0d0; /* Ajuste sutil na borda no hover */\n      color: #fff;\n    }\n\n    &:focus {\n      outline: none; /* Remove outline padrão */\n      box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1); /* Sombra leve no foco */\n    }\n\n    &:active {\n      background-color: #333333; /* Tom mais escuro quando pressionado */\n      border-color: #333333; /* Borda alinhada com o background */\n    }\n  `;\n\n    const Content = styled.div`\n      flex: 1;\n      padding: 20px;\n    `;\n    \n    const TaskGrid = styled.div`\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 20px;\n      margin-top: 5rem;\n    `;\n    \n    const TaskCard = styled.div`\n    background-color: #ffffff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    opacity: ${(props) => (props.disabled ? 0.6 : 1)};\n    pointer-events: ${(props) => (props.disabled ? 'none' : 'auto')};\n  `;\n    \n  const CheckIcon = styled.div`\n    display: ${(props) => (props.visible ? 'block' : 'none')};\n    color: green;\n    font-size: 20px;\n  `;\n\n    const CardHeader = styled.div`\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    `;\n    \n    const TaskName = styled.h3`\n      margin: 0;\n    `;\n    \n    const MenuIcon = styled.div`\n    cursor: pointer;\n  `;\n\n  const DropdownMenu = styled.div`\n    position: relative; /* Posiciona o menu em relação ao MenuWrapper */\n    top: 100%; /* Coloca o menu diretamente abaixo do ícone */\n    right: 0;\n    background-color: white;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    z-index: 1000;\n    min-width: 120px; /* Define uma largura mínima para o menu */\n  `;\n\n  const DropdownItem = styled.div`\n    padding: 8px 16px;\n    cursor: pointer;\n    &:hover {\n      background-color: #f0f0f0;\n    }\n  `;\n\n    \n    const TaskDescription = styled.p`\n      font-size: 14px;\n      margin: 10px 0;\n    `;\n    \n    const TaskDate = styled.span`\n      font-size: 12px;\n      color: #777;\n    `;\n    \n    const NoTasks = styled.div`\n      text-align: center;\n      color: #777;\n      padding: 20px;\n    `;\n    \n    const Modal = styled.div`\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.6);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    `;\n    \n    const ModalContent = styled.div`\n      background: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      width: 400px;\n      max-width: 80%;\n    `;\n    \n    const Form = styled.form`\n      display: flex;\n      flex-direction: column;\n    `;\n    \n    const Input = styled.input`\n      margin-bottom: 10px;\n      padding: 10px;\n      font-size: 16px;\n    `;\n    \n    const TextArea = styled.textarea`\n      margin-bottom: 10px;\n      padding: 10px;\n      font-size: 16px;\n    `;\n    \n    const Button = styled.button`\n      padding: 10px;\n      margin-top: 10px;\n      cursor: pointer;\n      background-color: #3b82f6;\n      color: white;\n      border: none;\n      border-radius: 4px;\n    `;\n    \n    export default UserTasksPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}