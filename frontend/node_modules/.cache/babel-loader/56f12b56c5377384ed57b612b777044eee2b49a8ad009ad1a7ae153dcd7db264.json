{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/TasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport jwtDecode from 'jwt-decode'; // Corrigindo a importação\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nconst TasksPage = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: ''\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    console.log('Token:', token);\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        if (username !== firstName) {\n          navigate(`/tasks/${encodeURIComponent(firstName)}`);\n        }\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n        setIsAuthenticated(false); // Adicionando lógica para deslogar se o token for inválido\n      }\n    } else {\n      const fetchUserInfo = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/users/user/${encodeURIComponent(username)}`);\n          if (response.ok) {\n            const data = await response.json();\n            setUser({\n              firstName: capitalizeFirstLetter(data.name),\n              email: data.email\n            });\n          } else {\n            console.error('Erro ao carregar informações do usuário:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Erro ao carregar informações do usuário:', error);\n        }\n      };\n      fetchUserInfo();\n    }\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/tasks/${encodeURIComponent(username)}`, {\n          headers: {\n            'Content-Type': 'application/json',\n            // Adicionando Content-Type\n            Authorization: token ? `Bearer ${token}` : '' // Corrigindo a lógica de autenticação\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data); // Atribuindo tarefas ao estado\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      }\n    };\n    fetchTasks();\n  }, [navigate, username]);\n  const handleAction = () => {\n    if (!isAuthenticated) {\n      alert('Você precisa estar logado para realizar essa ação.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(WidgetsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(UserWidget, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Informa\\xE7\\xF5es de \", user.firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n          children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nome:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), \" \", user.firstName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), \" \", user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TasksWidget, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Tarefas de \", user.firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskGrid, {\n          children: tasks.length > 0 ? tasks.slice(0, 6).map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n              onClick: handleAction,\n              disabled: !isAuthenticated,\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nenhuma tarefa encontrada.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this) // Adicionando fallback se não houver tarefas\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n// Estilos mantidos conforme o original...\n_s(TasksPage, \"KWTTpDQN/X9bOLfbbevD+Jo+9A4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","styled","jwtDecode","jsxDEV","_jsxDEV","capitalizeFirstLetter","string","charAt","toUpperCase","slice","TasksPage","_s","username","tasks","setTasks","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","navigate","token","localStorage","getItem","console","log","decodedToken","fullName","name","split","encodeURIComponent","error","fetchUserInfo","response","fetch","ok","data","json","statusText","fetchTasks","headers","Authorization","handleAction","alert","Container","children","WidgetsContainer","UserWidget","fileName","_jsxFileName","lineNumber","columnNumber","UserInfo","InfoItem","TasksWidget","TaskGrid","length","map","task","TaskItem","TaskName","ActionButton","onClick","disabled","id","_c","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/TasksPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport jwtDecode from 'jwt-decode'; // Corrigindo a importação\n\nconst capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst TasksPage = () => {\n  const { username } = useParams(); \n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({ firstName: '', email: '' });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    console.log('Token:', token);\n\n    if (token) {\n      setIsAuthenticated(true);\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível',\n        });\n\n        if (username !== firstName) {\n          navigate(`/tasks/${encodeURIComponent(firstName)}`);\n        }\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n        setIsAuthenticated(false); // Adicionando lógica para deslogar se o token for inválido\n      }\n    } else {\n      const fetchUserInfo = async () => {\n        try {\n          const response = await fetch(\n            `http://localhost:5000/api/users/user/${encodeURIComponent(username)}`\n          );\n          if (response.ok) {\n            const data = await response.json();\n            setUser({\n              firstName: capitalizeFirstLetter(data.name),\n              email: data.email,\n            });\n          } else {\n            console.error(\n              'Erro ao carregar informações do usuário:',\n              response.statusText\n            );\n          }\n        } catch (error) {\n          console.error('Erro ao carregar informações do usuário:', error);\n        }\n      };\n\n      fetchUserInfo();\n    }\n\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5000/api/tasks/${encodeURIComponent(username)}`,\n          {\n            headers: {\n              'Content-Type': 'application/json', // Adicionando Content-Type\n              Authorization: token ? `Bearer ${token}` : '', // Corrigindo a lógica de autenticação\n            },\n          }\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data); // Atribuindo tarefas ao estado\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      }\n    };\n\n    fetchTasks();\n  }, [navigate, username]);\n\n  const handleAction = () => {\n    if (!isAuthenticated) {\n      alert('Você precisa estar logado para realizar essa ação.');\n    }\n  };\n\n  return (\n    <Container>\n      <WidgetsContainer>\n        <UserWidget>\n          <h2>Informações de {user.firstName}</h2>\n          <UserInfo>\n            <InfoItem>\n              <strong>Nome:</strong> {user.firstName}\n            </InfoItem>\n            <InfoItem>\n              <strong>Email:</strong> {user.email}\n            </InfoItem>\n          </UserInfo>\n        </UserWidget>\n        <TasksWidget>\n          <h2>Tarefas de {user.firstName}</h2>\n          <TaskGrid>\n            {tasks.length > 0 ? (\n              tasks.slice(0, 6).map((task) => (\n                <TaskItem key={task.id}>\n                  <TaskName>{task.name}</TaskName>\n                  <ActionButton\n                    onClick={handleAction}\n                    disabled={!isAuthenticated}\n                  >\n                    Editar\n                  </ActionButton>\n                </TaskItem>\n              ))\n            ) : (\n              <p>Nenhuma tarefa encontrada.</p> // Adicionando fallback se não houver tarefas\n            )}\n          </TaskGrid>\n        </TasksWidget>\n      </WidgetsContainer>\n    </Container>\n  );\n};\n\n// Estilos mantidos conforme o original...\n\nexport default TasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}