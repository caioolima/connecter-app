{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/TasksHome/TaskWidget.js\";\n// components/TaskWidget.js\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskWidget = ({\n  tasks,\n  onViewTask\n}) => {\n  return /*#__PURE__*/_jsxDEV(TasksWidget, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskGrid, {\n      children: tasks.slice(0, 6).map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        children: [/*#__PURE__*/_jsxDEV(TaskName, {\n          children: task.taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n          children: formatDate(task.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n          onClick: () => onViewTask(task),\n          children: \"Detalhes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskWidget;\nconst TasksWidget = styled.div`\nflex: 2;\nmax-width: 750px;\nbackground: rgba(0, 0, 0, 0.7);\n\nh2 {\n  color: #f70073; /* Cor rosa para o título */\n  font-weight: bold;\n  font-size: 1.8rem;\n  margin-bottom: 1rem;\n}\n`;\n_c2 = TasksWidget;\nconst TaskGrid = styled.div`\ndisplay: grid;\ngap: 1rem;\ngrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n`;\n_c3 = TaskGrid;\nconst TaskItem = styled.div`\nbackground: rgba(0, 0, 0, 0.8); /* Fundo preto semitransparente */\nborder-radius: 8px;\npadding: 1rem;\ntext-align: center;\ncolor: #dcdcdc;\n`;\n_c4 = TaskItem;\nconst TaskName = styled.h3`\nfont-size: 1.2rem;\nmargin-bottom: 0.5rem;\n`;\n_c5 = TaskName;\nconst TaskDate = styled.p`\n  font-size: 0.9rem;\n  color: #bbb;\n`;\n_c6 = TaskDate;\nconst ActionButton = styled.button`\nbackground: #ea4f97; /* Cor rosa para o botão */\nborder: none;\nborder-radius: 5px;\ncolor: white;\npadding: 0.5rem 1rem;\ncursor: pointer;\nfont-size: 1rem;\nmargin-top: 0.5rem;\nfont-weight: bold;\ntransition: background 0.3s ease;\n\n&:hover {\n  background: #f70073; /* Cor rosa mais escura para hover */\n}\n\n&:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}\n`;\n_c7 = ActionButton;\nconst formatDate = dateString => {\n  if (!dateString) return 'Data não disponível.';\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\nexport default TaskWidget;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"TaskWidget\");\n$RefreshReg$(_c2, \"TasksWidget\");\n$RefreshReg$(_c3, \"TaskGrid\");\n$RefreshReg$(_c4, \"TaskItem\");\n$RefreshReg$(_c5, \"TaskName\");\n$RefreshReg$(_c6, \"TaskDate\");\n$RefreshReg$(_c7, \"ActionButton\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","TaskWidget","tasks","onViewTask","TasksWidget","children","fileName","_jsxFileName","lineNumber","columnNumber","TaskGrid","slice","map","task","TaskItem","TaskName","taskTitle","TaskDate","formatDate","createdAt","ActionButton","onClick","id","_c","div","_c2","_c3","_c4","h3","_c5","p","_c6","button","_c7","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/TasksHome/TaskWidget.js"],"sourcesContent":["// components/TaskWidget.js\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst TaskWidget = ({ tasks, onViewTask }) => {\n  return (\n    <TasksWidget>\n      <h2>Tarefas</h2>\n      <TaskGrid>\n        {tasks.slice(0, 6).map((task) => (\n          <TaskItem key={task.id}>\n            <TaskName>{task.taskTitle}</TaskName>\n            <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n            <ActionButton onClick={() => onViewTask(task)}>Detalhes</ActionButton>\n          </TaskItem>\n        ))}\n      </TaskGrid>\n    </TasksWidget>\n  );\n};\n\nconst TasksWidget = styled.div`\nflex: 2;\nmax-width: 750px;\nbackground: rgba(0, 0, 0, 0.7);\n\nh2 {\n  color: #f70073; /* Cor rosa para o título */\n  font-weight: bold;\n  font-size: 1.8rem;\n  margin-bottom: 1rem;\n}\n`;\n\nconst TaskGrid = styled.div`\ndisplay: grid;\ngap: 1rem;\ngrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n`;\n\nconst TaskItem = styled.div`\nbackground: rgba(0, 0, 0, 0.8); /* Fundo preto semitransparente */\nborder-radius: 8px;\npadding: 1rem;\ntext-align: center;\ncolor: #dcdcdc;\n`;\n\nconst TaskName = styled.h3`\nfont-size: 1.2rem;\nmargin-bottom: 0.5rem;\n`;\n\nconst TaskDate = styled.p`\n  font-size: 0.9rem;\n  color: #bbb;\n`;\n\nconst ActionButton = styled.button`\nbackground: #ea4f97; /* Cor rosa para o botão */\nborder: none;\nborder-radius: 5px;\ncolor: white;\npadding: 0.5rem 1rem;\ncursor: pointer;\nfont-size: 1rem;\nmargin-top: 0.5rem;\nfont-weight: bold;\ntransition: background 0.3s ease;\n\n&:hover {\n  background: #f70073; /* Cor rosa mais escura para hover */\n}\n\n&:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}\n`;\n\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Data não disponível.'; \n  const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\nexport default TaskWidget;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}