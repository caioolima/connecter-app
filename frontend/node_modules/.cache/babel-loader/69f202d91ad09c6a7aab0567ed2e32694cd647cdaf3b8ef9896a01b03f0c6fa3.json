{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/TasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { useAuth } from '../hooks/useAuth'; // Importando o hook useAuth\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nconst formatDate = dateString => {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\nconst TasksPage = () => {\n  _s();\n  const {\n    username\n  } = useParams(); // Obtém o nome de usuário da URL\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const navigate = useNavigate();\n  const {\n    token,\n    userInfo\n  } = useAuth(); // Utilize useAuth para obter informações do usuário\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        if (token) {\n          const decodedToken = jwtDecode(token);\n          const firstName = capitalizeFirstLetter(decodedToken.username || 'Usuário');\n\n          // Redirecionar se o nome de usuário da URL não corresponder ao nome do usuário autenticado\n          if (username !== firstName) {\n            navigate(`/tasks/${encodeURIComponent(firstName)}`);\n            return;\n          }\n        } else {\n          const response = await fetch(`http://localhost:5000/api/users/user/${encodeURIComponent(username)}`);\n          if (response.ok) {\n            const data = await response.json();\n            // Se você precisar atualizar o estado com as informações do usuário, adicione aqui\n          } else {\n            console.error('Erro ao carregar informações do usuário:', response.statusText);\n          }\n        }\n      } catch (error) {\n        console.error('Erro ao carregar informações do usuário:', error);\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const apiUrl = token ? `http://localhost:5000/api/tasks/user/${encodeURIComponent(userInfo.username)}` : `http://localhost:5000/api/tasks/user/${encodeURIComponent(username)}`; // Correção para usar o username da URL\n\n        const response = await fetch(apiUrl, {\n          headers: token ? {\n            Authorization: `Bearer ${token}`\n          } : {}\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      }\n    };\n    fetchUserInfo();\n    fetchTasks();\n  }, [navigate, username, token, userInfo.username]);\n  const handleViewTask = task => {\n    if (token) {\n      setSelectedTask(task);\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n  const handleCloseModal = () => {\n    setSelectedTask(null);\n  };\n  const handleCloseLoginModal = () => {\n    setShowLoginModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(WidgetsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(UserWidget, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Informa\\xE7\\xF5es de \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(UserInfo, {\n          children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nome:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), \" \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Data de Cria\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TasksWidget, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Tarefas de \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(TaskGrid, {\n          children: tasks.slice(0, 6).map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n              children: formatDate(task.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n              onClick: () => handleViewTask(task),\n              children: \"Detalhes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskModal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: handleCloseModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedTask.taskTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalDate, {\n            children: formatDate(selectedTask.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Descri\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 18\n            }, this), \" \", selectedTask.taskDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 18\n            }, this), \" \", selectedTask.taskStatus ? 'Concluído' : 'Pendente']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), showLoginModal && /*#__PURE__*/_jsxDEV(LoginModal, {\n      children: /*#__PURE__*/_jsxDEV(LoginModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: handleCloseLoginModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Voc\\xEA precisa estar logado para ver esta tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n          onClick: () => navigate('/login'),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"41ZSKBluw10RTzBN7GacYSq1tOk=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = TasksPage;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  background: #000; /* Preto */\n  padding: 2rem;\n  min-height: 85vh;\n  align-items: flex-start;\n  color: #fff; /* Branco */\n`;\n_c2 = Container;\nconst WidgetsContainer = styled.div`\n  display: flex;\n  gap: 2rem;\n  width: 100%;\n  margin-top: 5rem;\n  max-width: 1200px;\n  justify-content: center;\n`;\n_c3 = WidgetsContainer;\nconst Widget = styled.div`\n  background: #111; /* Preto muito escuro */\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1), inset 0 -2px 4px rgba(255, 255, 255, 0.05);\n  padding: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  animation: ${fadeIn} 0.6s ease-in-out;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 6px 12px rgba(255, 255, 255, 0.2), inset 0 -2px 4px rgba(255, 255, 255, 0.1);\n  }\n`;\nconst TasksWidget = styled(Widget)`\n  flex: 2;\n  max-width: 750px;\n\n  h2 {\n    color: #fff; /* Branco */\n    font-weight: bold;\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n`;\n_c4 = TasksWidget;\nconst UserWidget = styled(Widget)`\n  flex: 1;\n  max-width: 350px;\n  height: auto;\n\n  h2 {\n    color: #fff; /* Branco */\n    font-weight: bold;\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n`;\n_c5 = UserWidget;\nconst UserInfo = styled.div`\n  margin-top: 1rem;\n`;\n_c6 = UserInfo;\nconst InfoItem = styled.div`\n  margin-bottom: 0.5rem;\n  color: #ccc; /* Cinza claro */\n`;\n_c7 = InfoItem;\nconst TaskGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n`;\n_c8 = TaskGrid;\nconst TaskItem = styled.div`\n  background: #222; /* Preto com um pouco de cor */\n  border-radius: 8px;\n  padding: 1rem;\n  color: #ddd; /* Cinza claro */\n  transition: background 0.3s ease, transform 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    background: #333; /* Preto mais claro */\n    transform: scale(1.02);\n  }\n`;\n_c9 = TaskItem;\nconst TaskName = styled.h3`\n  font-size: 1.2rem;\n  color: #fff; /* Branco */\n  margin: 0 0 0.5rem 0;\n`;\n_c10 = TaskName;\nconst TaskDate = styled.p`\n  font-size: 0.9rem;\n  color: #888; /* Cinza escuro */\n`;\n_c11 = TaskDate;\nconst ActionButton = styled.button`\n  background: #ea4f97; /* Cor principal */\n  border: none;\n  color: #fff; /* Branco */\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #d43a80; /* Cor de hover */\n  }\n`;\n_c12 = ActionButton;\nconst TaskModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n_c13 = TaskModal;\nconst ModalContent = styled.div`\n  background: #fff; /* Branco */\n  border-radius: 10px;\n  padding: 2rem;\n  width: 90%;\n  max-width: 500px;\n  position: relative;\n`;\n_c14 = ModalContent;\nconst ModalHeader = styled.div`\n  margin-bottom: 1rem;\n`;\n_c15 = ModalHeader;\nconst ModalDate = styled.p`\n  font-size: 0.9rem;\n  color: #777; /* Cinza escuro */\n`;\n_c16 = ModalDate;\nconst ModalBody = styled.div`\n  p {\n    margin: 0.5rem 0;\n  }\n`;\n_c17 = ModalBody;\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: transparent;\n  border: none;\n  font-size: 1.5rem;\n  color: #333; /* Preto */\n  cursor: pointer;\n`;\n_c18 = CloseButton;\nconst LoginModal = styled(TaskModal)``;\n_c19 = LoginModal;\nconst LoginModalContent = styled(ModalContent)`\n  text-align: center;\n`;\n_c20 = LoginModalContent;\nconst LoginButton = styled(ActionButton)`\n  background: #4bc5f5; /* Cor do botão de login */\n  margin-top: 1rem;\n`;\n_c21 = LoginButton;\nexport default TasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n$RefreshReg$(_c, \"TasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"WidgetsContainer\");\n$RefreshReg$(_c4, \"TasksWidget\");\n$RefreshReg$(_c5, \"UserWidget\");\n$RefreshReg$(_c6, \"UserInfo\");\n$RefreshReg$(_c7, \"InfoItem\");\n$RefreshReg$(_c8, \"TaskGrid\");\n$RefreshReg$(_c9, \"TaskItem\");\n$RefreshReg$(_c10, \"TaskName\");\n$RefreshReg$(_c11, \"TaskDate\");\n$RefreshReg$(_c12, \"ActionButton\");\n$RefreshReg$(_c13, \"TaskModal\");\n$RefreshReg$(_c14, \"ModalContent\");\n$RefreshReg$(_c15, \"ModalHeader\");\n$RefreshReg$(_c16, \"ModalDate\");\n$RefreshReg$(_c17, \"ModalBody\");\n$RefreshReg$(_c18, \"CloseButton\");\n$RefreshReg$(_c19, \"LoginModal\");\n$RefreshReg$(_c20, \"LoginModalContent\");\n$RefreshReg$(_c21, \"LoginButton\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","styled","keyframes","useAuth","jwtDecode","jsxDEV","_jsxDEV","capitalizeFirstLetter","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","fadeIn","TasksPage","_s","username","tasks","setTasks","selectedTask","setSelectedTask","showLoginModal","setShowLoginModal","navigate","token","userInfo","fetchUserInfo","decodedToken","firstName","encodeURIComponent","response","fetch","ok","data","json","console","error","statusText","fetchTasks","apiUrl","headers","Authorization","handleViewTask","task","handleCloseModal","handleCloseLoginModal","Container","children","WidgetsContainer","UserWidget","name","fileName","_jsxFileName","lineNumber","columnNumber","UserInfo","InfoItem","TasksWidget","TaskGrid","map","TaskItem","TaskName","taskTitle","TaskDate","createdAt","ActionButton","onClick","id","TaskModal","ModalContent","CloseButton","ModalHeader","ModalDate","ModalBody","taskDescription","taskStatus","LoginModal","LoginModalContent","LoginButton","_c","div","_c2","_c3","Widget","_c4","_c5","_c6","_c7","_c8","_c9","h3","_c10","p","_c11","button","_c12","_c13","_c14","_c15","_c16","_c17","_c18","_c19","_c20","_c21","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/TasksPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { useAuth } from '../hooks/useAuth'; // Importando o hook useAuth\nimport { jwtDecode } from 'jwt-decode';\n\nconst capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst formatDate = (dateString) => {\n  const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst TasksPage = () => {\n  const { username } = useParams(); // Obtém o nome de usuário da URL\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const navigate = useNavigate();\n\n  const { token, userInfo } = useAuth(); // Utilize useAuth para obter informações do usuário\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        if (token) {\n          const decodedToken = jwtDecode(token);\n          const firstName = capitalizeFirstLetter(decodedToken.username || 'Usuário');\n\n          // Redirecionar se o nome de usuário da URL não corresponder ao nome do usuário autenticado\n          if (username !== firstName) {\n            navigate(`/tasks/${encodeURIComponent(firstName)}`);\n            return;\n          }\n        } else {\n          const response = await fetch(`http://localhost:5000/api/users/user/${encodeURIComponent(username)}`);\n          if (response.ok) {\n            const data = await response.json();\n            // Se você precisar atualizar o estado com as informações do usuário, adicione aqui\n          } else {\n            console.error('Erro ao carregar informações do usuário:', response.statusText);\n          }\n        }\n      } catch (error) {\n        console.error('Erro ao carregar informações do usuário:', error);\n      }\n    };\n\n    const fetchTasks = async () => {\n      try {\n        const apiUrl = token\n          ? `http://localhost:5000/api/tasks/user/${encodeURIComponent(userInfo.username)}`\n          : `http://localhost:5000/api/tasks/user/${encodeURIComponent(username)}`; // Correção para usar o username da URL\n\n        const response = await fetch(apiUrl, {\n          headers: token ? { Authorization: `Bearer ${token}` } : {},\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      }\n    };\n\n    fetchUserInfo();\n    fetchTasks();\n  }, [navigate, username, token, userInfo.username]);\n\n  const handleViewTask = (task) => {\n    if (token) {\n      setSelectedTask(task);\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTask(null);\n  };\n\n  const handleCloseLoginModal = () => {\n    setShowLoginModal(false);\n  };\n\n\n  return (\n    <Container>\n      <WidgetsContainer>\n        <UserWidget>\n          <h2>Informações de {name}</h2> {/* Exibe o nome do usuário do token */}\n          <UserInfo>\n            <InfoItem>\n              <strong>Nome:</strong> {name}\n            </InfoItem>\n            <InfoItem>\n              <strong>Email:</strong> {/* Exibir email, se disponível */}\n            </InfoItem>\n            <InfoItem>\n              <strong>Data de Criação:</strong> {/* Exibir data de criação, se disponível */}\n            </InfoItem>\n          </UserInfo>\n        </UserWidget>\n        <TasksWidget>\n          <h2>Tarefas de {name}</h2> {/* Exibe o nome do usuário do token */}\n          <TaskGrid>\n            {tasks.slice(0, 6).map((task) => (\n              <TaskItem key={task.id}>\n                <TaskName>{task.taskTitle}</TaskName>\n                <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n                <ActionButton\n                  onClick={() => handleViewTask(task)}\n                >\n                  Detalhes\n                </ActionButton>\n              </TaskItem>\n            ))}\n          </TaskGrid>\n        </TasksWidget>\n      </WidgetsContainer>\n\n      {selectedTask && (\n        <TaskModal>\n          <ModalContent>\n            <CloseButton onClick={handleCloseModal}>×</CloseButton>\n            <ModalHeader>\n              <h3>{selectedTask.taskTitle}</h3>\n              <ModalDate>{formatDate(selectedTask.createdAt)}</ModalDate>\n            </ModalHeader>\n            <ModalBody>\n              <p><strong>Descrição:</strong> {selectedTask.taskDescription}</p>\n              <p><strong>Status:</strong> {selectedTask.taskStatus ? 'Concluído' : 'Pendente'}</p>\n            </ModalBody>\n          </ModalContent>\n        </TaskModal>\n      )}\n\n      {showLoginModal && (\n        <LoginModal>\n          <LoginModalContent>\n            <CloseButton onClick={handleCloseLoginModal}>×</CloseButton>\n            <h2>Você precisa estar logado para ver esta tarefa</h2>\n            <LoginButton onClick={() => navigate('/login')}>Login</LoginButton>\n          </LoginModalContent>\n        </LoginModal>\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  background: #000; /* Preto */\n  padding: 2rem;\n  min-height: 85vh;\n  align-items: flex-start;\n  color: #fff; /* Branco */\n`;\n\nconst WidgetsContainer = styled.div`\n  display: flex;\n  gap: 2rem;\n  width: 100%;\n  margin-top: 5rem;\n  max-width: 1200px;\n  justify-content: center;\n`;\n\nconst Widget = styled.div`\n  background: #111; /* Preto muito escuro */\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1), inset 0 -2px 4px rgba(255, 255, 255, 0.05);\n  padding: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  animation: ${fadeIn} 0.6s ease-in-out;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 6px 12px rgba(255, 255, 255, 0.2), inset 0 -2px 4px rgba(255, 255, 255, 0.1);\n  }\n`;\n\nconst TasksWidget = styled(Widget)`\n  flex: 2;\n  max-width: 750px;\n\n  h2 {\n    color: #fff; /* Branco */\n    font-weight: bold;\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst UserWidget = styled(Widget)`\n  flex: 1;\n  max-width: 350px;\n  height: auto;\n\n  h2 {\n    color: #fff; /* Branco */\n    font-weight: bold;\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst UserInfo = styled.div`\n  margin-top: 1rem;\n`;\n\nconst InfoItem = styled.div`\n  margin-bottom: 0.5rem;\n  color: #ccc; /* Cinza claro */\n`;\n\nconst TaskGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n`;\n\nconst TaskItem = styled.div`\n  background: #222; /* Preto com um pouco de cor */\n  border-radius: 8px;\n  padding: 1rem;\n  color: #ddd; /* Cinza claro */\n  transition: background 0.3s ease, transform 0.3s ease;\n  cursor: pointer;\n\n  &:hover {\n    background: #333; /* Preto mais claro */\n    transform: scale(1.02);\n  }\n`;\n\nconst TaskName = styled.h3`\n  font-size: 1.2rem;\n  color: #fff; /* Branco */\n  margin: 0 0 0.5rem 0;\n`;\n\nconst TaskDate = styled.p`\n  font-size: 0.9rem;\n  color: #888; /* Cinza escuro */\n`;\n\nconst ActionButton = styled.button`\n  background: #ea4f97; /* Cor principal */\n  border: none;\n  color: #fff; /* Branco */\n  padding: 0.5rem 1rem;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #d43a80; /* Cor de hover */\n  }\n`;\n\nconst TaskModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background: #fff; /* Branco */\n  border-radius: 10px;\n  padding: 2rem;\n  width: 90%;\n  max-width: 500px;\n  position: relative;\n`;\n\nconst ModalHeader = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst ModalDate = styled.p`\n  font-size: 0.9rem;\n  color: #777; /* Cinza escuro */\n`;\n\nconst ModalBody = styled.div`\n  p {\n    margin: 0.5rem 0;\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: transparent;\n  border: none;\n  font-size: 1.5rem;\n  color: #333; /* Preto */\n  cursor: pointer;\n`;\n\nconst LoginModal = styled(TaskModal)``;\n\nconst LoginModalContent = styled(ModalContent)`\n  text-align: center;\n`;\n\nconst LoginButton = styled(ActionButton)`\n  background: #4bc5f5; /* Cor do botão de login */\n  margin-top: 1rem;\n`;\n\nexport default TasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}