{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../../Context/AuthContext';\nconst useTasks = username => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(null);\n  const {\n    token,\n    userInfo\n  } = useAuth();\n  useEffect(() => {\n    if (!username) {\n      setError('Username não fornecido.');\n      return;\n    }\n    const fetchTasks = async () => {\n      try {\n        let apiUrl;\n        if (token) {\n          apiUrl = `http://localhost:5000/api/manager/tasks/${encodeURIComponent(username)}`;\n        } else {\n          apiUrl = `http://localhost:5000/api/manager/public/tasks/${encodeURIComponent(username)}`;\n        }\n        const response = await fetch(apiUrl, {\n          headers: token ? {\n            Authorization: `Bearer ${token}`\n          } : {}\n        });\n        if (response.ok) {\n          const data = await response.json();\n          console.log('Dados recebidos:', data); // Adicione este log\n          const sortedTasks = data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n          const recentTasks = sortedTasks.slice(0, 9);\n          setTasks(recentTasks);\n        } else {\n          setError('Erro ao carregar tarefas');\n        }\n      } catch (error) {\n        setError(error.message || 'Erro ao carregar tarefas');\n      }\n    };\n    fetchTasks();\n  }, [username, token, userInfo.username]);\n  return {\n    tasks,\n    error\n  };\n};\n_s(useTasks, \"IX1c5AWncP5zlJ5K6u2UFWsofec=\", false, function () {\n  return [useAuth];\n});\nexport default useTasks;","map":{"version":3,"names":["useState","useEffect","useAuth","useTasks","username","_s","tasks","setTasks","error","setError","token","userInfo","fetchTasks","apiUrl","encodeURIComponent","response","fetch","headers","Authorization","ok","data","json","console","log","sortedTasks","sort","a","b","Date","createdAt","recentTasks","slice","message"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/hooks/Tasks/useTasks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuth } from '../../Context/AuthContext';\n\nconst useTasks = (username) => {\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(null);\n  const { token, userInfo } = useAuth();\n\n  useEffect(() => {\n    if (!username) {\n      setError('Username não fornecido.');\n      return;\n    }\n  \n    const fetchTasks = async () => {\n      try {\n        let apiUrl;\n  \n        if (token) {\n          apiUrl = `http://localhost:5000/api/manager/tasks/${encodeURIComponent(username)}`;\n        } else {\n          apiUrl = `http://localhost:5000/api/manager/public/tasks/${encodeURIComponent(username)}`;\n        }\n  \n        const response = await fetch(apiUrl, {\n          headers: token ? { Authorization: `Bearer ${token}` } : {},\n        });\n  \n        if (response.ok) {\n          const data = await response.json();\n          console.log('Dados recebidos:', data); // Adicione este log\n          const sortedTasks = data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n          const recentTasks = sortedTasks.slice(0, 9);\n          setTasks(recentTasks);\n        } else {\n          setError('Erro ao carregar tarefas');\n        }\n      } catch (error) {\n        setError(error.message || 'Erro ao carregar tarefas');\n      }\n    };\n  \n    fetchTasks();\n  }, [username, token, userInfo.username]);\n  \n\n  return { tasks, error };\n};\n\nexport default useTasks;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,2BAA2B;AAEnD,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEU,KAAK;IAAEC;EAAS,CAAC,GAAGT,OAAO,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACG,QAAQ,EAAE;MACbK,QAAQ,CAAC,yBAAyB,CAAC;MACnC;IACF;IAEA,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,IAAIC,MAAM;QAEV,IAAIH,KAAK,EAAE;UACTG,MAAM,GAAG,2CAA2CC,kBAAkB,CAACV,QAAQ,CAAC,EAAE;QACpF,CAAC,MAAM;UACLS,MAAM,GAAG,kDAAkDC,kBAAkB,CAACV,QAAQ,CAAC,EAAE;QAC3F;QAEA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACH,MAAM,EAAE;UACnCI,OAAO,EAAEP,KAAK,GAAG;YAAEQ,aAAa,EAAE,UAAUR,KAAK;UAAG,CAAC,GAAG,CAAC;QAC3D,CAAC,CAAC;QAEF,IAAIK,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,IAAI,CAAC,CAAC,CAAC;UACvC,MAAMI,WAAW,GAAGJ,IAAI,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC;UACtF,MAAMC,WAAW,GAAGN,WAAW,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAC3CxB,QAAQ,CAACuB,WAAW,CAAC;QACvB,CAAC,MAAM;UACLrB,QAAQ,CAAC,0BAA0B,CAAC;QACtC;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACwB,OAAO,IAAI,0BAA0B,CAAC;MACvD;IACF,CAAC;IAEDpB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACR,QAAQ,EAAEM,KAAK,EAAEC,QAAQ,CAACP,QAAQ,CAAC,CAAC;EAGxC,OAAO;IAAEE,KAAK;IAAEE;EAAM,CAAC;AACzB,CAAC;AAACH,EAAA,CA5CIF,QAAQ;EAAA,QAGgBD,OAAO;AAAA;AA2CrC,eAAeC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}