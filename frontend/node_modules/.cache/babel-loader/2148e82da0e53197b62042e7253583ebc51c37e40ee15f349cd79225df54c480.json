{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: ''\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null); // Fecha o menu ao clicar fora\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleFilterChange = newFilter => {\n    setFilter(newFilter);\n    filterTasks(tasks, newFilter);\n  };\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      case 'all':\n        setFilteredTasks(tasks);\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        // Atualiza a lista de tarefas no estado\n        const updatedTasks = tasks.map(task => task.id === taskId ? {\n          ...task,\n          taskStatus: true\n        } : task);\n        setTasks(updatedTasks);\n        filterTasks(updatedTasks, filter); // Reaplica o filtro\n\n        // Fecha o menu e modal\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  const handleEditClick = task => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  const toggleMenu = taskId => {\n    setMenuOpen(prev => prev === taskId ? null : taskId);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [\"Tarefas de \", user.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterMenu, {\n        children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('recent'),\n          active: filter === 'recent',\n          children: \"Recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('completed'),\n          active: filter === 'completed',\n          children: \"Conclu\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('pending'),\n          active: filter === 'pending',\n          children: \"Pendentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(TaskGrid, {\n        children: filteredTasks.length ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {\n              onClick: () => toggleMenu(task.id),\n              children: /*#__PURE__*/_jsxDEV(FaEllipsisV, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), menuOpen === task.id && /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleEditClick(task),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this), !task.taskStatus && /*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleCompleteTask(task.id),\n                children: \"Concluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDescription, {\n            children: task.taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n            children: formatDate(task.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTasks, {\n          children: \"Nenhuma tarefa encontrada.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), modalOpen && selectedTask && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Editar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            e.preventDefault();\n            handleUpdateTask(selectedTask);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: selectedTask.taskTitle,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskTitle: e.target.value\n            }),\n            placeholder: \"T\\xEDtulo da tarefa\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: selectedTask.taskDescription,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskDescription: e.target.value\n            }),\n            placeholder: \"Descri\\xE7\\xE3o da tarefa\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => handleDeleteTask(selectedTask.id),\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: handleCloseModal,\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTasksPage, \"Iqtr3TQhTv+GP6+V9lDm5mi+jOE=\", false, function () {\n  return [useNavigate];\n});\n_c = UserTasksPage;\nconst Container = styled.div`\n    display: flex;\n    min-height: 100vh;\n    background-color: #000;\n  `;\n_c2 = Container;\nconst Sidebar = styled.div`\n    width: 20%;\n    padding: 20px;\n    border-right: 2px solid #333; /* Linha lateral direita */\n  `;\n_c3 = Sidebar;\nconst Header = styled.h1`\n    font-size: 24px;\n    margin-bottom: 2rem;\n    margin-top: 5rem;\n    color: #fff;\n  `;\n_c4 = Header;\nconst FilterMenu = styled.div`\n    display: flex;\n    flex-direction: column;\n  `;\n_c5 = FilterMenu;\nconst FilterButton = styled.button`\n  font-weight: bold;\n  background-color: ${props => props.active ? '#000000' : '#ffffff'}; /* Preto quando ativo, branco quando inativo */\n  color: ${props => props.active ? '#ffffff' : '#000000'}; /* Branco quando ativo, preto quando inativo */\n  border: 1px solid #eaeaea; /* Borda leve */\n  padding: 8px 16px;\n  margin-bottom: 10px;\n  cursor: pointer;\n  border-radius: 5px; /* Bordas levemente arredondadas */\n  transition: background-color 0.2s ease, color 0.2s ease, border 0.2s ease; /* Transições suaves */\n  \n  &:hover {\n    background-color: #333333; /* Cinza claro no hover */\n    border-color: #d0d0d0; /* Ajuste sutil na borda no hover */\n    color: #fff;\n  }\n\n  &:focus {\n    outline: none; /* Remove outline padrão */\n    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1); /* Sombra leve no foco */\n  }\n\n  &:active {\n    background-color: #333333; /* Tom mais escuro quando pressionado */\n    border-color: #333333; /* Borda alinhada com o background */\n  }\n`;\n_c6 = FilterButton;\nconst Content = styled.div`\n    flex: 1;\n    padding: 20px;\n  `;\n_c7 = Content;\nconst TaskGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 20px;\n    margin-top: 5rem;\n  `;\n_c8 = TaskGrid;\nconst TaskCard = styled.div`\n  background-color: #ffffff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  opacity: ${props => props.disabled ? 0.6 : 1};\n  pointer-events: ${props => props.disabled ? 'none' : 'auto'};\n`;\n_c9 = TaskCard;\nconst CardHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `;\n_c10 = CardHeader;\nconst TaskName = styled.h3`\n    margin: 0;\n  `;\n_c11 = TaskName;\nconst MenuIcon = styled.div`\n  cursor: pointer;\n`;\n_c12 = MenuIcon;\nconst DropdownMenu = styled.div`\n  position: relative; /* Posiciona o menu em relação ao MenuWrapper */\n  top: 100%; /* Coloca o menu diretamente abaixo do ícone */\n  right: 0;\n  background-color: white;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  z-index: 1000;\n  min-width: 120px; /* Define uma largura mínima para o menu */\n`;\n_c13 = DropdownMenu;\nconst DropdownItem = styled.div`\n  padding: 8px 16px;\n  cursor: pointer;\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n_c14 = DropdownItem;\nconst TaskDescription = styled.p`\n    font-size: 14px;\n    margin: 10px 0;\n  `;\n_c15 = TaskDescription;\nconst TaskDate = styled.span`\n    font-size: 12px;\n    color: #777;\n  `;\n_c16 = TaskDate;\nconst NoTasks = styled.div`\n    text-align: center;\n    color: #777;\n    padding: 20px;\n  `;\n_c17 = NoTasks;\nconst Modal = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `;\n_c18 = Modal;\nconst ModalContent = styled.div`\n    background: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    width: 400px;\n    max-width: 80%;\n  `;\n_c19 = ModalContent;\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n  `;\n_c20 = Form;\nconst Input = styled.input`\n    margin-bottom: 10px;\n    padding: 10px;\n    font-size: 16px;\n  `;\n_c21 = Input;\nconst TextArea = styled.textarea`\n    margin-bottom: 10px;\n    padding: 10px;\n    font-size: 16px;\n  `;\n_c22 = TextArea;\nconst Button = styled.button`\n    padding: 10px;\n    margin-top: 10px;\n    cursor: pointer;\n    background-color: #3b82f6;\n    color: white;\n    border: none;\n    border-radius: 4px;\n  `;\n_c23 = Button;\nexport default UserTasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23;\n$RefreshReg$(_c, \"UserTasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Sidebar\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"FilterMenu\");\n$RefreshReg$(_c6, \"FilterButton\");\n$RefreshReg$(_c7, \"Content\");\n$RefreshReg$(_c8, \"TaskGrid\");\n$RefreshReg$(_c9, \"TaskCard\");\n$RefreshReg$(_c10, \"CardHeader\");\n$RefreshReg$(_c11, \"TaskName\");\n$RefreshReg$(_c12, \"MenuIcon\");\n$RefreshReg$(_c13, \"DropdownMenu\");\n$RefreshReg$(_c14, \"DropdownItem\");\n$RefreshReg$(_c15, \"TaskDescription\");\n$RefreshReg$(_c16, \"TaskDate\");\n$RefreshReg$(_c17, \"NoTasks\");\n$RefreshReg$(_c18, \"Modal\");\n$RefreshReg$(_c19, \"ModalContent\");\n$RefreshReg$(_c20, \"Form\");\n$RefreshReg$(_c21, \"Input\");\n$RefreshReg$(_c22, \"TextArea\");\n$RefreshReg$(_c23, \"Button\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","useNavigate","jwtDecode","FaEllipsisV","jsxDEV","_jsxDEV","UserTasksPage","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","selectedTask","setSelectedTask","modalOpen","setModalOpen","menuOpen","setMenuOpen","menuRef","navigate","token","localStorage","getItem","decodedToken","fullName","name","capitalizeFirstLetter","split","fetchTasks","response","fetch","headers","Authorization","ok","data","json","filterTasks","console","error","statusText","length","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","handleFilterChange","newFilter","task","taskStatus","sort","a","b","createdAt","handleCompleteTask","taskId","method","updatedTasks","map","id","handleCloseModal","handleEditClick","handleUpdateTask","updatedTask","body","JSON","stringify","updatedTaskData","prevTasks","handleDeleteTask","toggleMenu","prev","Container","children","Sidebar","Header","fileName","_jsxFileName","lineNumber","columnNumber","FilterMenu","FilterButton","onClick","active","Content","TaskGrid","TaskCard","CardHeader","TaskName","taskTitle","MenuIcon","DropdownMenu","ref","DropdownItem","TaskDescription","taskDescription","TaskDate","NoTasks","Modal","ModalContent","Form","onSubmit","e","preventDefault","Input","type","value","onChange","placeholder","required","TextArea","Button","_c","div","_c2","_c3","h1","_c4","_c5","button","props","_c6","_c7","_c8","disabled","_c9","_c10","h3","_c11","_c12","_c13","_c14","p","_c15","span","_c16","_c17","_c18","_c19","form","_c20","input","_c21","textarea","_c22","_c23","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { FaEllipsisV } from 'react-icons/fa';\n\nconst UserTasksPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({ firstName: '', email: '' });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setIsAuthenticated(true);\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível',\n        });\n\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: { Authorization: `Bearer ${token}` },\n            });\n\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null); // Fecha o menu ao clicar fora\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Data não disponível.';\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const handleFilterChange = (newFilter) => {\n    setFilter(newFilter);\n    filterTasks(tasks, newFilter);\n  };\n\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      case 'all':\n        setFilteredTasks(tasks);\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  \n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n  \n      if (response.ok) {\n        // Atualiza a lista de tarefas no estado\n        const updatedTasks = tasks.map(task =>\n          task.id === taskId ? { ...task, taskStatus: true } : task\n        );\n        setTasks(updatedTasks);\n        filterTasks(updatedTasks, filter); // Reaplica o filtro\n  \n        // Fecha o menu e modal\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  \n\n  const handleEditClick = (task) => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n\n  const handleUpdateTask = async (updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(updatedTask),\n      });\n\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task =>\n            task.id === updatedTaskData.id ? updatedTaskData : task\n          );\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n\n  const toggleMenu = (taskId) => {\n    setMenuOpen((prev) => (prev === taskId ? null : taskId));\n  };\n\n  return (\n    <Container>\n      <Sidebar>\n        <Header>Tarefas de {user.firstName}</Header>\n        <FilterMenu>\n          <FilterButton onClick={() => setFilter('recent')} active={filter === 'recent'}>Recentes</FilterButton>\n          <FilterButton onClick={() => setFilter('completed')} active={filter === 'completed'}>Concluídas</FilterButton>\n          <FilterButton onClick={() => setFilter('pending')} active={filter === 'pending'}>Pendentes</FilterButton>\n        </FilterMenu>\n      </Sidebar>\n      <Content>\n        <TaskGrid>\n          {filteredTasks.length ? (\n            filteredTasks.map((task) => (\n              <TaskCard key={task.id}>\n                <CardHeader>\n                  <TaskName>{task.taskTitle}</TaskName>\n                  <MenuIcon onClick={() => toggleMenu(task.id)}>\n                    <FaEllipsisV />\n                  </MenuIcon>\n                  {menuOpen === task.id && (\n                    <DropdownMenu ref={menuRef}>\n                      <DropdownItem onClick={() => handleEditClick(task)}>Editar</DropdownItem>\n                      {!task.taskStatus && (\n                        <DropdownItem onClick={() => handleCompleteTask(task.id)}>Concluir</DropdownItem>\n                      )}\n                    </DropdownMenu>\n                  )}\n                </CardHeader>\n                <TaskDescription>{task.taskDescription}</TaskDescription>\n                <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n              </TaskCard>\n            ))\n          ) : (\n            <NoTasks>Nenhuma tarefa encontrada.</NoTasks>\n          )}\n        </TaskGrid>\n      </Content>\n      {modalOpen && selectedTask && (\n        <Modal>\n          <ModalContent>\n            <h2>Editar Tarefa</h2>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                handleUpdateTask(selectedTask);\n              }}\n            >\n              <Input\n                type=\"text\"\n                value={selectedTask.taskTitle}\n                onChange={(e) => setSelectedTask({ ...selectedTask, taskTitle: e.target.value })}\n                placeholder=\"Título da tarefa\"\n                required\n              />\n              <TextArea\n                value={selectedTask.taskDescription}\n                onChange={(e) => setSelectedTask({ ...selectedTask, taskDescription: e.target.value })}\n                placeholder=\"Descrição da tarefa\"\n                required\n              />\n              <Button type=\"submit\">Salvar</Button>\n              <Button type=\"button\" onClick={() => handleDeleteTask(selectedTask.id)}>Excluir</Button>\n              <Button type=\"button\" onClick={handleCloseModal}>Fechar</Button>\n            </Form>\n          </ModalContent>\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\n  \n  const Container = styled.div`\n    display: flex;\n    min-height: 100vh;\n    background-color: #000;\n  `;\n  \n  const Sidebar = styled.div`\n    width: 20%;\n    padding: 20px;\n    border-right: 2px solid #333; /* Linha lateral direita */\n  `;\n  \n  const Header = styled.h1`\n    font-size: 24px;\n    margin-bottom: 2rem;\n    margin-top: 5rem;\n    color: #fff;\n  `;\n  \n  const FilterMenu = styled.div`\n    display: flex;\n    flex-direction: column;\n  `;\n  \n  const FilterButton = styled.button`\n  font-weight: bold;\n  background-color: ${(props) => (props.active ? '#000000' : '#ffffff')}; /* Preto quando ativo, branco quando inativo */\n  color: ${(props) => (props.active ? '#ffffff' : '#000000')}; /* Branco quando ativo, preto quando inativo */\n  border: 1px solid #eaeaea; /* Borda leve */\n  padding: 8px 16px;\n  margin-bottom: 10px;\n  cursor: pointer;\n  border-radius: 5px; /* Bordas levemente arredondadas */\n  transition: background-color 0.2s ease, color 0.2s ease, border 0.2s ease; /* Transições suaves */\n  \n  &:hover {\n    background-color: #333333; /* Cinza claro no hover */\n    border-color: #d0d0d0; /* Ajuste sutil na borda no hover */\n    color: #fff;\n  }\n\n  &:focus {\n    outline: none; /* Remove outline padrão */\n    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1); /* Sombra leve no foco */\n  }\n\n  &:active {\n    background-color: #333333; /* Tom mais escuro quando pressionado */\n    border-color: #333333; /* Borda alinhada com o background */\n  }\n`;\n\n  const Content = styled.div`\n    flex: 1;\n    padding: 20px;\n  `;\n  \n  const TaskGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 20px;\n    margin-top: 5rem;\n  `;\n  \n  const TaskCard = styled.div`\n  background-color: #ffffff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  opacity: ${(props) => (props.disabled ? 0.6 : 1)};\n  pointer-events: ${(props) => (props.disabled ? 'none' : 'auto')};\n`;\n  \n  const CardHeader = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  `;\n  \n  const TaskName = styled.h3`\n    margin: 0;\n  `;\n  \n  const MenuIcon = styled.div`\n  cursor: pointer;\n`;\n\nconst DropdownMenu = styled.div`\n  position: relative; /* Posiciona o menu em relação ao MenuWrapper */\n  top: 100%; /* Coloca o menu diretamente abaixo do ícone */\n  right: 0;\n  background-color: white;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  z-index: 1000;\n  min-width: 120px; /* Define uma largura mínima para o menu */\n`;\n\nconst DropdownItem = styled.div`\n  padding: 8px 16px;\n  cursor: pointer;\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n\n  \n  const TaskDescription = styled.p`\n    font-size: 14px;\n    margin: 10px 0;\n  `;\n  \n  const TaskDate = styled.span`\n    font-size: 12px;\n    color: #777;\n  `;\n  \n  const NoTasks = styled.div`\n    text-align: center;\n    color: #777;\n    padding: 20px;\n  `;\n  \n  const Modal = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `;\n  \n  const ModalContent = styled.div`\n    background: #fff;\n    padding: 20px;\n    border-radius: 8px;\n    width: 400px;\n    max-width: 80%;\n  `;\n  \n  const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n  `;\n  \n  const Input = styled.input`\n    margin-bottom: 10px;\n    padding: 10px;\n    font-size: 16px;\n  `;\n  \n  const TextArea = styled.textarea`\n    margin-bottom: 10px;\n    padding: 10px;\n    font-size: 16px;\n  `;\n  \n  const Button = styled.button`\n    padding: 10px;\n    margin-top: 10px;\n    cursor: pointer;\n    background-color: #3b82f6;\n    color: white;\n    border: none;\n    border-radius: 4px;\n  `;\n  \n  export default UserTasksPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}