{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\n// src/pages/UserTasksPage.js\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Corrigido a importação de jwt-decode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: ''\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  const handleEditClick = task => {\n    setSelectedTask(task);\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task));\n        filterTasks(tasks, filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        const updatedTask = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n        filterTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.id !== taskId));\n        filterTasks(tasks.filter(task => task.id !== taskId), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [\"Tarefas de \", user.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterMenu, {\n        children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('recent'),\n          active: filter === 'recent',\n          children: \"Recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('completed'),\n          active: filter === 'completed',\n          children: \"Conclu\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('pending'),\n          active: filter === 'pending',\n          children: \"Pendentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(TaskGrid, {\n        children: filteredTasks.length ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n              children: formatDate(task.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDescription, {\n            children: task.taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n            children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n              onClick: () => handleEditClick(task),\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), !task.taskStatus && /*#__PURE__*/_jsxDEV(ActionButton, {\n              onClick: () => handleCompleteTask(task.id),\n              children: \"Concluir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTasks, {\n          children: \"Nenhuma tarefa encontrada.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), modalOpen && selectedTask && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Editar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            e.preventDefault();\n            handleUpdateTask(selectedTask);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: selectedTask.taskTitle,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskTitle: e.target.value\n            }),\n            placeholder: \"T\\xEDtulo da tarefa\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: selectedTask.taskDescription,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskDescription: e.target.value\n            }),\n            placeholder: \"Descri\\xE7\\xE3o da tarefa\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => handleDeleteTask(selectedTask.id),\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: handleCloseModal,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTasksPage, \"NA007+Bj5Rw1kZo6t5ZZMHmCtt4=\", false, function () {\n  return [useNavigate];\n});\n_c = UserTasksPage;\nconst Container = styled.div`\n  display: flex;\n  height: 100vh; /* Altura total da viewport */\n  background: #ffffff; /* Fundo branco */\n  color: #000000; /* Texto preto */\n  font-family: 'Roboto', sans-serif;\n`;\n_c2 = Container;\nconst Sidebar = styled.div`\n  width: 250px;\n  height: 100vh; /* Altura total da viewport */\n  background: #000000; /* Fundo preto */\n  color: #ffffff; /* Texto branco */\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c3 = Sidebar;\nconst Header = styled.h1`\n  font-size: 1.5rem;\n  margin: 5rem;\n  margin-bottom: 2rem;\n`;\n_c4 = Header;\nconst FilterMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n_c5 = FilterMenu;\nconst FilterButton = styled.button`\n  background: ${props => props.active ? '#444444' : '#333333'}; /* Cor de fundo ativa ou não */\n  color: #ffffff;\n  border: none;\n  padding: 1rem;\n  margin: 0.5rem 0;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 1rem;\n  text-align: center;\n  width: 100%;\n`;\n_c6 = FilterButton;\nconst Content = styled.div`\n  flex: 1; /* Ocupa o espaço restante da página */\n  padding: 2rem;\n  background: #f4f4f4; /* Fundo cinza claro */\n`;\n_c7 = Content;\nconst TaskGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n`;\n_c8 = TaskGrid;\nconst TaskCard = styled.div`\n  background: #ffffff; /* Fundo branco */\n  border: 1px solid #cccccc; /* Borda cinza claro */\n  border-radius: 5px;\n  padding: 1rem;\n  width: calc(33% - 1rem);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n`;\n_c9 = TaskCard;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n_c10 = CardHeader;\nconst TaskName = styled.h2`\n  font-size: 1.2rem;\n`;\n_c11 = TaskName;\nconst TaskDate = styled.p`\n  font-size: 0.8rem;\n  color: #666666;\n`;\n_c12 = TaskDate;\nconst TaskDescription = styled.p`\n  font-size: 1rem;\n  margin-bottom: 1rem;\n`;\n_c13 = TaskDescription;\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 1rem;\n`;\n_c14 = ActionButtons;\nconst ActionButton = styled.button`\n  background: #007bff; /* Cor primária */\n  color: #ffffff;\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 0.9rem;\n  &:hover {\n    background: #0056b3; /* Cor primária ao passar o mouse */\n  }\n`;\n_c15 = ActionButton;\nconst NoTasks = styled.p`\n  text-align: center;\n  color: #333333;\n`;\n_c16 = NoTasks;\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.5);\n`;\n_c17 = Modal;\nconst ModalContent = styled.div`\n  background: #ffffff; /* Fundo branco */\n  border-radius: 5px;\n  padding: 2rem;\n  width: 500px;\n  max-width: 90%;\n`;\n_c18 = ModalContent;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c19 = Form;\nconst Input = styled.input`\n  padding: 0.5rem;\n  border: 1px solid #cccccc;\n  border-radius: 5px;\n`;\n_c20 = Input;\nconst TextArea = styled.textarea`\n  padding: 0.5rem;\n  border: 1px solid #cccccc;\n  border-radius: 5px;\n  height: 150px;\n`;\n_c21 = TextArea;\nconst Button = styled.button`\n  background: #007bff; /* Cor primária */\n  color: #ffffff;\n  border: none;\n  padding: 0.5rem;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 1rem;\n  &:hover {\n    background: #0056b3; /* Cor primária ao passar o mouse */\n  }\n`;\n_c22 = Button;\nexport default UserTasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22;\n$RefreshReg$(_c, \"UserTasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Sidebar\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"FilterMenu\");\n$RefreshReg$(_c6, \"FilterButton\");\n$RefreshReg$(_c7, \"Content\");\n$RefreshReg$(_c8, \"TaskGrid\");\n$RefreshReg$(_c9, \"TaskCard\");\n$RefreshReg$(_c10, \"CardHeader\");\n$RefreshReg$(_c11, \"TaskName\");\n$RefreshReg$(_c12, \"TaskDate\");\n$RefreshReg$(_c13, \"TaskDescription\");\n$RefreshReg$(_c14, \"ActionButtons\");\n$RefreshReg$(_c15, \"ActionButton\");\n$RefreshReg$(_c16, \"NoTasks\");\n$RefreshReg$(_c17, \"Modal\");\n$RefreshReg$(_c18, \"ModalContent\");\n$RefreshReg$(_c19, \"Form\");\n$RefreshReg$(_c20, \"Input\");\n$RefreshReg$(_c21, \"TextArea\");\n$RefreshReg$(_c22, \"Button\");","map":{"version":3,"names":["React","useEffect","useState","styled","useNavigate","jwtDecode","jsxDEV","_jsxDEV","UserTasksPage","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","selectedTask","setSelectedTask","modalOpen","setModalOpen","navigate","token","localStorage","getItem","decodedToken","fullName","name","capitalizeFirstLetter","split","fetchTasks","response","fetch","headers","Authorization","ok","data","json","filterTasks","console","error","statusText","length","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","sort","a","b","createdAt","task","taskStatus","handleEditClick","handleCloseModal","handleUpdateTask","updatedTask","id","method","body","JSON","stringify","updatedTaskData","map","handleCompleteTask","taskId","handleDeleteTask","Container","children","Sidebar","Header","fileName","_jsxFileName","lineNumber","columnNumber","FilterMenu","FilterButton","onClick","active","Content","TaskGrid","TaskCard","CardHeader","TaskName","taskTitle","TaskDate","TaskDescription","taskDescription","ActionButtons","ActionButton","NoTasks","Modal","ModalContent","Form","onSubmit","e","preventDefault","Input","type","value","onChange","target","placeholder","required","TextArea","Button","_c","div","_c2","_c3","h1","_c4","_c5","button","props","_c6","_c7","_c8","_c9","_c10","h2","_c11","p","_c12","_c13","_c14","_c15","_c16","_c17","_c18","form","_c19","input","_c20","textarea","_c21","_c22","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["// src/pages/UserTasksPage.js\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Corrigido a importação de jwt-decode\n\nconst UserTasksPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({ firstName: '', email: '' });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setIsAuthenticated(true);\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível',\n        });\n\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: { Authorization: `Bearer ${token}` },\n            });\n\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Data não disponível.';\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n\n  const handleEditClick = (task) => {\n    setSelectedTask(task);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n\n  const handleUpdateTask = async (updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(updatedTask),\n      });\n\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task));\n        filterTasks(tasks, filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        const updatedTask = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n        filterTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.id !== taskId));\n        filterTasks(tasks.filter(task => task.id !== taskId), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n\n  return (\n    <Container>\n      <Sidebar>\n        <Header>Tarefas de {user.firstName}</Header>\n        <FilterMenu>\n          <FilterButton onClick={() => setFilter('recent')} active={filter === 'recent'}>Recentes</FilterButton>\n          <FilterButton onClick={() => setFilter('completed')} active={filter === 'completed'}>Concluídas</FilterButton>\n          <FilterButton onClick={() => setFilter('pending')} active={filter === 'pending'}>Pendentes</FilterButton>\n        </FilterMenu>\n      </Sidebar>\n      <Content>\n        <TaskGrid>\n          {filteredTasks.length ? (\n            filteredTasks.map((task) => (\n              <TaskCard key={task.id}>\n                <CardHeader>\n                  <TaskName>{task.taskTitle}</TaskName>\n                  <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n                </CardHeader>\n                <TaskDescription>{task.taskDescription}</TaskDescription>\n                <ActionButtons>\n                  <ActionButton onClick={() => handleEditClick(task)}>Editar</ActionButton>\n                  {!task.taskStatus && (\n                    <ActionButton onClick={() => handleCompleteTask(task.id)}>Concluir</ActionButton>\n                  )}\n                </ActionButtons>\n              </TaskCard>\n            ))\n          ) : (\n            <NoTasks>Nenhuma tarefa encontrada.</NoTasks>\n          )}\n        </TaskGrid>\n      </Content>\n      {modalOpen && selectedTask && (\n        <Modal>\n          <ModalContent>\n            <h2>Editar Tarefa</h2>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                handleUpdateTask(selectedTask);\n              }}\n            >\n              <Input\n                type=\"text\"\n                value={selectedTask.taskTitle}\n                onChange={(e) => setSelectedTask({ ...selectedTask, taskTitle: e.target.value })}\n                placeholder=\"Título da tarefa\"\n                required\n              />\n              <TextArea\n                value={selectedTask.taskDescription}\n                onChange={(e) => setSelectedTask({ ...selectedTask, taskDescription: e.target.value })}\n                placeholder=\"Descrição da tarefa\"\n                required\n              />\n              <Button type=\"submit\">Salvar</Button>\n              <Button type=\"button\" onClick={() => handleDeleteTask(selectedTask.id)}>Excluir</Button>\n              <Button type=\"button\" onClick={handleCloseModal}>Cancelar</Button>\n            </Form>\n          </ModalContent>\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  height: 100vh; /* Altura total da viewport */\n  background: #ffffff; /* Fundo branco */\n  color: #000000; /* Texto preto */\n  font-family: 'Roboto', sans-serif;\n`;\n\nconst Sidebar = styled.div`\n  width: 250px;\n  height: 100vh; /* Altura total da viewport */\n  background: #000000; /* Fundo preto */\n  color: #ffffff; /* Texto branco */\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Header = styled.h1`\n  font-size: 1.5rem;\n  margin: 5rem;\n  margin-bottom: 2rem;\n`;\n\nconst FilterMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst FilterButton = styled.button`\n  background: ${props => props.active ? '#444444' : '#333333'}; /* Cor de fundo ativa ou não */\n  color: #ffffff;\n  border: none;\n  padding: 1rem;\n  margin: 0.5rem 0;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 1rem;\n  text-align: center;\n  width: 100%;\n`;\n\nconst Content = styled.div`\n  flex: 1; /* Ocupa o espaço restante da página */\n  padding: 2rem;\n  background: #f4f4f4; /* Fundo cinza claro */\n`;\n\nconst TaskGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n`;\n\nconst TaskCard = styled.div`\n  background: #ffffff; /* Fundo branco */\n  border: 1px solid #cccccc; /* Borda cinza claro */\n  border-radius: 5px;\n  padding: 1rem;\n  width: calc(33% - 1rem);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst TaskName = styled.h2`\n  font-size: 1.2rem;\n`;\n\nconst TaskDate = styled.p`\n  font-size: 0.8rem;\n  color: #666666;\n`;\n\nconst TaskDescription = styled.p`\n  font-size: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 1rem;\n`;\n\nconst ActionButton = styled.button`\n  background: #007bff; /* Cor primária */\n  color: #ffffff;\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 0.9rem;\n  &:hover {\n    background: #0056b3; /* Cor primária ao passar o mouse */\n  }\n`;\n\nconst NoTasks = styled.p`\n  text-align: center;\n  color: #333333;\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.5);\n`;\n\nconst ModalContent = styled.div`\n  background: #ffffff; /* Fundo branco */\n  border-radius: 5px;\n  padding: 2rem;\n  width: 500px;\n  max-width: 90%;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst Input = styled.input`\n  padding: 0.5rem;\n  border: 1px solid #cccccc;\n  border-radius: 5px;\n`;\n\nconst TextArea = styled.textarea`\n  padding: 0.5rem;\n  border: 1px solid #cccccc;\n  border-radius: 5px;\n  height: 150px;\n`;\n\nconst Button = styled.button`\n  background: #007bff; /* Cor primária */\n  color: #ffffff;\n  border: none;\n  padding: 0.5rem;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 1rem;\n  &:hover {\n    background: #0056b3; /* Cor primária ao passar o mouse */\n  }\n`;\n\nexport default UserTasksPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,QAAQ,CAAC;EAC9C,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC;IAAEkB,SAAS,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC9D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMwB,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,MAAM0B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACTV,kBAAkB,CAAC,IAAI,CAAC;MAExB,IAAI;QACF,MAAMa,YAAY,GAAGzB,SAAS,CAACsB,KAAK,CAAC;QACrC,MAAMI,QAAQ,GAAGD,YAAY,CAACE,IAAI,IAAI,qBAAqB;QAC3D,MAAMZ,SAAS,GAAGa,qBAAqB,CAACF,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/Df,OAAO,CAAC;UACNC,SAAS;UACTC,KAAK,EAAES,YAAY,CAACT,KAAK,IAAI;QAC/B,CAAC,CAAC;QAEF,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;UAC7B,IAAI;YACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;cAC/DC,OAAO,EAAE;gBAAEC,aAAa,EAAE,UAAUZ,KAAK;cAAG;YAC9C,CAAC,CAAC;YAEF,IAAIS,QAAQ,CAACI,EAAE,EAAE;cACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;cAClC/B,QAAQ,CAAC8B,IAAI,CAAC;cACdE,WAAW,CAACF,IAAI,EAAE3B,MAAM,CAAC;YAC3B,CAAC,MAAM;cACL8B,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAET,QAAQ,CAACU,UAAU,CAAC;YACjE;UACF,CAAC,CAAC,OAAOD,KAAK,EAAE;YACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;UACnD;QACF,CAAC;QAEDV,UAAU,CAAC,CAAC;MACd,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC,MAAM;MACLnB,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEZ,MAAM,CAAC,CAAC;EAEtBb,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,CAACqC,MAAM,EAAE;MAChBJ,WAAW,CAACjC,KAAK,EAAEI,MAAM,CAAC;IAC5B;EACF,CAAC,EAAE,CAACJ,KAAK,EAAEI,MAAM,CAAC,CAAC;EAEnB,MAAMmB,qBAAqB,GAAIe,MAAM,IAAK;IACxC,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,MAAMC,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,sBAAsB;IAC9C,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC;IACtG,OAAO,IAAIC,IAAI,CAACP,UAAU,CAAC,CAACQ,kBAAkB,CAACC,SAAS,EAAER,OAAO,CAAC;EACpE,CAAC;EAED,MAAMX,WAAW,GAAGA,CAACjC,KAAK,EAAEI,MAAM,KAAK;IACrC,QAAQA,MAAM;MACZ,KAAK,QAAQ;QACXD,gBAAgB,CAAC,CAAC,GAAGH,KAAK,CAAC,CAACqD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIL,IAAI,CAACK,CAAC,CAACC,SAAS,CAAC,GAAG,IAAIN,IAAI,CAACI,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC;QAC1F;MACF,KAAK,WAAW;QACdrD,gBAAgB,CAACH,KAAK,CAACI,MAAM,CAACqD,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,CAAC;QACvD;MACF,KAAK,SAAS;QACZvD,gBAAgB,CAACH,KAAK,CAACI,MAAM,CAACqD,IAAI,IAAI,CAACA,IAAI,CAACC,UAAU,CAAC,CAAC;QACxD;MACF;QACEvD,gBAAgB,CAACH,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,MAAM2D,eAAe,GAAIF,IAAI,IAAK;IAChC5C,eAAe,CAAC4C,IAAI,CAAC;IACrB1C,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM6C,gBAAgB,GAAGA,CAAA,KAAM;IAC7B7C,YAAY,CAAC,KAAK,CAAC;IACnBF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMgD,gBAAgB,GAAG,MAAOC,WAAW,IAAK;IAC9C,IAAI;MACF,MAAMpC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCmC,WAAW,CAACC,EAAE,EAAE,EAAE;QAChFC,MAAM,EAAE,KAAK;QACbpC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD,CAAC;QACD8C,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;MAClC,CAAC,CAAC;MAEF,IAAIpC,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMsC,eAAe,GAAG,MAAM1C,QAAQ,CAACM,IAAI,CAAC,CAAC;QAC7C/B,QAAQ,CAACD,KAAK,CAACqE,GAAG,CAACZ,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKK,eAAe,CAACL,EAAE,GAAGK,eAAe,GAAGX,IAAI,CAAC,CAAC;QACpFxB,WAAW,CAACjC,KAAK,EAAEI,MAAM,CAAC;QAC1BwD,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM;QACL1B,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAET,QAAQ,CAACU,UAAU,CAAC;MACjE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMmC,kBAAkB,GAAG,MAAOC,MAAM,IAAK;IAC3C,IAAI;MACF,MAAM7C,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC4C,MAAM,WAAW,EAAE;QACjFP,MAAM,EAAE,OAAO;QACfpC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMgC,WAAW,GAAG,MAAMpC,QAAQ,CAACM,IAAI,CAAC,CAAC;QACzC/B,QAAQ,CAACD,KAAK,CAACqE,GAAG,CAACZ,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKD,WAAW,CAACC,EAAE,GAAGD,WAAW,GAAGL,IAAI,CAAC,CAAC;QAC5ExB,WAAW,CAACjC,KAAK,CAACqE,GAAG,CAACZ,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKD,WAAW,CAACC,EAAE,GAAGD,WAAW,GAAGL,IAAI,CAAC,EAAErD,MAAM,CAAC;QACvFwD,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM;QACL1B,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAET,QAAQ,CAACU,UAAU,CAAC;MAC7E;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;EAED,MAAMqC,gBAAgB,GAAG,MAAOD,MAAM,IAAK;IACzC,IAAI;MACF,MAAM7C,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC4C,MAAM,EAAE,EAAE;QACxEP,MAAM,EAAE,QAAQ;QAChBpC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACI,EAAE,EAAE;QACf7B,QAAQ,CAACD,KAAK,CAACI,MAAM,CAACqD,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKQ,MAAM,CAAC,CAAC;QAClDtC,WAAW,CAACjC,KAAK,CAACI,MAAM,CAACqD,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKQ,MAAM,CAAC,EAAEnE,MAAM,CAAC;QAC7DwD,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM;QACL1B,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAET,QAAQ,CAACU,UAAU,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEtC,OAAA,CAAC4E,SAAS;IAAAC,QAAA,gBACR7E,OAAA,CAAC8E,OAAO;MAAAD,QAAA,gBACN7E,OAAA,CAAC+E,MAAM;QAAAF,QAAA,GAAC,aAAW,EAAClE,IAAI,CAACE,SAAS;MAAA;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC5CnF,OAAA,CAACoF,UAAU;QAAAP,QAAA,gBACT7E,OAAA,CAACqF,YAAY;UAACC,OAAO,EAAEA,CAAA,KAAM9E,SAAS,CAAC,QAAQ,CAAE;UAAC+E,MAAM,EAAEhF,MAAM,KAAK,QAAS;UAAAsE,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eACtGnF,OAAA,CAACqF,YAAY;UAACC,OAAO,EAAEA,CAAA,KAAM9E,SAAS,CAAC,WAAW,CAAE;UAAC+E,MAAM,EAAEhF,MAAM,KAAK,WAAY;UAAAsE,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eAC9GnF,OAAA,CAACqF,YAAY;UAACC,OAAO,EAAEA,CAAA,KAAM9E,SAAS,CAAC,SAAS,CAAE;UAAC+E,MAAM,EAAEhF,MAAM,KAAK,SAAU;UAAAsE,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACVnF,OAAA,CAACwF,OAAO;MAAAX,QAAA,eACN7E,OAAA,CAACyF,QAAQ;QAAAZ,QAAA,EACNxE,aAAa,CAACmC,MAAM,GACnBnC,aAAa,CAACmE,GAAG,CAAEZ,IAAI,iBACrB5D,OAAA,CAAC0F,QAAQ;UAAAb,QAAA,gBACP7E,OAAA,CAAC2F,UAAU;YAAAd,QAAA,gBACT7E,OAAA,CAAC4F,QAAQ;cAAAf,QAAA,EAAEjB,IAAI,CAACiC;YAAS;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACrCnF,OAAA,CAAC8F,QAAQ;cAAAjB,QAAA,EAAEhC,UAAU,CAACe,IAAI,CAACD,SAAS;YAAC;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACbnF,OAAA,CAAC+F,eAAe;YAAAlB,QAAA,EAAEjB,IAAI,CAACoC;UAAe;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CAAC,eACzDnF,OAAA,CAACiG,aAAa;YAAApB,QAAA,gBACZ7E,OAAA,CAACkG,YAAY;cAACZ,OAAO,EAAEA,CAAA,KAAMxB,eAAe,CAACF,IAAI,CAAE;cAAAiB,QAAA,EAAC;YAAM;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC,EACxE,CAACvB,IAAI,CAACC,UAAU,iBACf7D,OAAA,CAACkG,YAAY;cAACZ,OAAO,EAAEA,CAAA,KAAMb,kBAAkB,CAACb,IAAI,CAACM,EAAE,CAAE;cAAAW,QAAA,EAAC;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CACjF;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACY,CAAC;QAAA,GAXHvB,IAAI,CAACM,EAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYZ,CACX,CAAC,gBAEFnF,OAAA,CAACmG,OAAO;UAAAtB,QAAA,EAAC;QAA0B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAC7C;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACTlE,SAAS,IAAIF,YAAY,iBACxBf,OAAA,CAACoG,KAAK;MAAAvB,QAAA,eACJ7E,OAAA,CAACqG,YAAY;QAAAxB,QAAA,gBACX7E,OAAA;UAAA6E,QAAA,EAAI;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBnF,OAAA,CAACsG,IAAI;UACHC,QAAQ,EAAGC,CAAC,IAAK;YACfA,CAAC,CAACC,cAAc,CAAC,CAAC;YAClBzC,gBAAgB,CAACjD,YAAY,CAAC;UAChC,CAAE;UAAA8D,QAAA,gBAEF7E,OAAA,CAAC0G,KAAK;YACJC,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE7F,YAAY,CAAC8E,SAAU;YAC9BgB,QAAQ,EAAGL,CAAC,IAAKxF,eAAe,CAAC;cAAE,GAAGD,YAAY;cAAE8E,SAAS,EAAEW,CAAC,CAACM,MAAM,CAACF;YAAM,CAAC,CAAE;YACjFG,WAAW,EAAC,qBAAkB;YAC9BC,QAAQ;UAAA;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFnF,OAAA,CAACiH,QAAQ;YACPL,KAAK,EAAE7F,YAAY,CAACiF,eAAgB;YACpCa,QAAQ,EAAGL,CAAC,IAAKxF,eAAe,CAAC;cAAE,GAAGD,YAAY;cAAEiF,eAAe,EAAEQ,CAAC,CAACM,MAAM,CAACF;YAAM,CAAC,CAAE;YACvFG,WAAW,EAAC,2BAAqB;YACjCC,QAAQ;UAAA;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFnF,OAAA,CAACkH,MAAM;YAACP,IAAI,EAAC,QAAQ;YAAA9B,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrCnF,OAAA,CAACkH,MAAM;YAACP,IAAI,EAAC,QAAQ;YAACrB,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC5D,YAAY,CAACmD,EAAE,CAAE;YAAAW,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxFnF,OAAA,CAACkH,MAAM;YAACP,IAAI,EAAC,QAAQ;YAACrB,OAAO,EAAEvB,gBAAiB;YAAAc,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAACjF,EAAA,CApOID,aAAa;EAAA,QAQAJ,WAAW;AAAA;AAAAsH,EAAA,GARxBlH,aAAa;AAsOnB,MAAM2E,SAAS,GAAGhF,MAAM,CAACwH,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIzC,SAAS;AAQf,MAAME,OAAO,GAAGlF,MAAM,CAACwH,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GATIxC,OAAO;AAWb,MAAMC,MAAM,GAAGnF,MAAM,CAAC2H,EAAE;AACxB;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIzC,MAAM;AAMZ,MAAMK,UAAU,GAAGxF,MAAM,CAACwH,GAAG;AAC7B;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAJIrC,UAAU;AAMhB,MAAMC,YAAY,GAAGzF,MAAM,CAAC8H,MAAM;AAClC,gBAAgBC,KAAK,IAAIA,KAAK,CAACpC,MAAM,GAAG,SAAS,GAAG,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqC,GAAA,GAXIvC,YAAY;AAalB,MAAMG,OAAO,GAAG5F,MAAM,CAACwH,GAAG;AAC1B;AACA;AACA;AACA,CAAC;AAACS,GAAA,GAJIrC,OAAO;AAMb,MAAMC,QAAQ,GAAG7F,MAAM,CAACwH,GAAG;AAC3B;AACA;AACA;AACA,CAAC;AAACU,GAAA,GAJIrC,QAAQ;AAMd,MAAMC,QAAQ,GAAG9F,MAAM,CAACwH,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAPIrC,QAAQ;AASd,MAAMC,UAAU,GAAG/F,MAAM,CAACwH,GAAG;AAC7B;AACA;AACA,CAAC;AAACY,IAAA,GAHIrC,UAAU;AAKhB,MAAMC,QAAQ,GAAGhG,MAAM,CAACqI,EAAE;AAC1B;AACA,CAAC;AAACC,IAAA,GAFItC,QAAQ;AAId,MAAME,QAAQ,GAAGlG,MAAM,CAACuI,CAAC;AACzB;AACA;AACA,CAAC;AAACC,IAAA,GAHItC,QAAQ;AAKd,MAAMC,eAAe,GAAGnG,MAAM,CAACuI,CAAC;AAChC;AACA;AACA,CAAC;AAACE,IAAA,GAHItC,eAAe;AAKrB,MAAME,aAAa,GAAGrG,MAAM,CAACwH,GAAG;AAChC;AACA;AACA,CAAC;AAACkB,IAAA,GAHIrC,aAAa;AAKnB,MAAMC,YAAY,GAAGtG,MAAM,CAAC8H,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACa,IAAA,GAXIrC,YAAY;AAalB,MAAMC,OAAO,GAAGvG,MAAM,CAACuI,CAAC;AACxB;AACA;AACA,CAAC;AAACK,IAAA,GAHIrC,OAAO;AAKb,MAAMC,KAAK,GAAGxG,MAAM,CAACwH,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,IAAA,GAVIrC,KAAK;AAYX,MAAMC,YAAY,GAAGzG,MAAM,CAACwH,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACsB,IAAA,GANIrC,YAAY;AAQlB,MAAMC,IAAI,GAAG1G,MAAM,CAAC+I,IAAI;AACxB;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAJItC,IAAI;AAMV,MAAMI,KAAK,GAAG9G,MAAM,CAACiJ,KAAK;AAC1B;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAJIpC,KAAK;AAMX,MAAMO,QAAQ,GAAGrH,MAAM,CAACmJ,QAAQ;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALI/B,QAAQ;AAOd,MAAMC,MAAM,GAAGtH,MAAM,CAAC8H,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACuB,IAAA,GAXI/B,MAAM;AAaZ,eAAejH,aAAa;AAAC,IAAAkH,EAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAG,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAC,IAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAnB,GAAA;AAAAmB,YAAA,CAAAlB,IAAA;AAAAkB,YAAA,CAAAhB,IAAA;AAAAgB,YAAA,CAAAd,IAAA;AAAAc,YAAA,CAAAb,IAAA;AAAAa,YAAA,CAAAZ,IAAA;AAAAY,YAAA,CAAAX,IAAA;AAAAW,YAAA,CAAAV,IAAA;AAAAU,YAAA,CAAAT,IAAA;AAAAS,YAAA,CAAAR,IAAA;AAAAQ,YAAA,CAAAN,IAAA;AAAAM,YAAA,CAAAJ,IAAA;AAAAI,YAAA,CAAAF,IAAA;AAAAE,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}