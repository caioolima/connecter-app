{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { FaEllipsisV, FaCheck } from 'react-icons/fa';\nimport CreateTaskModal from '../components/CreateTaskModal'; // Certifique-se de que o caminho está correto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: ''\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null); // Fecha o menu ao clicar fora\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleFilterChange = newFilter => {\n    setFilter(newFilter);\n    filterTasks(tasks, newFilter);\n  };\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      case 'all':\n        setFilteredTasks(tasks);\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        // Atualiza a lista de tarefas no estado\n        const updatedTasks = tasks.map(task => task.id === taskId ? {\n          ...task,\n          taskStatus: true\n        } : task);\n        setTasks(updatedTasks);\n        filterTasks(updatedTasks, filter); // Reaplica o filtro\n\n        // Fecha o menu e modal\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  const handleEditClick = task => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  const handleCreateTask = newTask => {\n    setTasks(prevTasks => {\n      const updatedTasks = [newTask, ...prevTasks];\n      filterTasks(updatedTasks, filter);\n      return updatedTasks;\n    });\n    handleCloseModal();\n  };\n  const toggleMenu = taskId => {\n    setMenuOpen(prev => prev === taskId ? null : taskId);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [\"Tarefas de \", user.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterMenu, {\n        children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('recent'),\n          active: filter === 'recent',\n          children: \"Recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('completed'),\n          active: filter === 'completed',\n          children: \"Conclu\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('pending'),\n          active: filter === 'pending',\n          children: \"Pendentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('all'),\n          active: filter === 'all',\n          children: \"Todas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskButton, {\n        onClick: () => setModalOpen(true),\n        children: \"Criar Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(TaskGrid, {\n        children: filteredTasks.length ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          disabled: task.taskStatus,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {\n              onClick: () => toggleMenu(task.id),\n              visible: !task.taskStatus // Exibir apenas se a tarefa não estiver concluída\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CheckIcon, {\n              visible: task.taskStatus,\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), menuOpen === task.id && /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: () => handleEditClick(task),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: () => handleDeleteTask(task.id),\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDescription, {\n            children: task.taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n            children: formatDate(task.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this), !task.taskStatus && /*#__PURE__*/_jsxDEV(CompleteButton, {\n            onClick: () => handleCompleteTask(task.id),\n            children: \"Marcar como conclu\\xEDda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTasksMessage, {\n          children: \"Nenhuma tarefa encontrada.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(CreateTaskModal, {\n      isOpen: modalOpen,\n      onClose: handleCloseModal,\n      onCreate: handleCreateTask,\n      token: localStorage.getItem('token')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTasksPage, \"Iqtr3TQhTv+GP6+V9lDm5mi+jOE=\", false, function () {\n  return [useNavigate];\n});\n_c = UserTasksPage;\nconst Container = styled.div`\n  display: flex;\n`;\n_c2 = Container;\nconst Sidebar = styled.div`\n  width: 250px;\n  padding: 20px;\n  background-color: #f4f4f4;\n`;\n_c3 = Sidebar;\nconst Header = styled.h1`\n  font-size: 1.5rem;\n`;\n_c4 = Header;\nconst FilterMenu = styled.div`\n  margin: 20px 0;\n`;\n_c5 = FilterMenu;\nconst FilterButton = styled.button`\n  background: ${props => props.active ? '#007bff' : '#fff'};\n  color: ${props => props.active ? '#fff' : '#000'};\n  border: 1px solid #ddd;\n  padding: 10px;\n  margin: 5px;\n  cursor: pointer;\n  border-radius: 4px;\n  &:hover {\n    background: ${props => props.active ? '#0056b3' : '#f8f9fa'};\n  }\n`;\n_c6 = FilterButton;\nconst CreateTaskButton = styled.button`\n  background: #007bff;\n  color: #fff;\n  border: none;\n  padding: 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n  &:hover {\n    background: #0056b3;\n  }\n`;\n_c7 = CreateTaskButton;\nconst Content = styled.div`\n  flex: 1;\n  padding: 20px;\n`;\n_c8 = Content;\nconst TaskGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n_c9 = TaskGrid;\nconst TaskCard = styled.div`\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 20px;\n  width: calc(33.333% - 40px);\n  box-sizing: border-box;\n  position: relative;\n  opacity: ${props => props.disabled ? 0.5 : 1};\n`;\n_c10 = TaskCard;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c11 = CardHeader;\nconst TaskName = styled.h3`\n  font-size: 1.2rem;\n  margin: 0;\n`;\n_c12 = TaskName;\nconst MenuIcon = styled.div`\n  cursor: pointer;\n  visibility: ${props => props.visible ? 'visible' : 'hidden'};\n`;\n_c13 = MenuIcon;\nconst CheckIcon = styled.div`\n  color: green;\n  visibility: ${props => props.visible ? 'visible' : 'hidden'};\n`;\n_c14 = CheckIcon;\nconst DropdownMenu = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 0;\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n`;\n_c15 = DropdownMenu;\nconst MenuItem = styled.div`\n  padding: 10px;\n  cursor: pointer;\n  &:hover {\n    background: #f0f0f0;\n  }\n`;\n_c16 = MenuItem;\nconst TaskDescription = styled.p`\n  margin: 10px 0;\n`;\n_c17 = TaskDescription;\nconst TaskDate = styled.div`\n  font-size: 0.875rem;\n  color: #666;\n`;\n_c18 = TaskDate;\nconst CompleteButton = styled.button`\n  background: #28a745;\n  color: #fff;\n  border: none;\n  padding: 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n  &:hover {\n    background: #218838;\n  }\n`;\n_c19 = CompleteButton;\nconst NoTasksMessage = styled.div`\n  text-align: center;\n  color: #666;\n`;\n_c20 = NoTasksMessage;\nexport default UserTasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"UserTasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Sidebar\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"FilterMenu\");\n$RefreshReg$(_c6, \"FilterButton\");\n$RefreshReg$(_c7, \"CreateTaskButton\");\n$RefreshReg$(_c8, \"Content\");\n$RefreshReg$(_c9, \"TaskGrid\");\n$RefreshReg$(_c10, \"TaskCard\");\n$RefreshReg$(_c11, \"CardHeader\");\n$RefreshReg$(_c12, \"TaskName\");\n$RefreshReg$(_c13, \"MenuIcon\");\n$RefreshReg$(_c14, \"CheckIcon\");\n$RefreshReg$(_c15, \"DropdownMenu\");\n$RefreshReg$(_c16, \"MenuItem\");\n$RefreshReg$(_c17, \"TaskDescription\");\n$RefreshReg$(_c18, \"TaskDate\");\n$RefreshReg$(_c19, \"CompleteButton\");\n$RefreshReg$(_c20, \"NoTasksMessage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","useNavigate","jwtDecode","FaEllipsisV","FaCheck","CreateTaskModal","jsxDEV","_jsxDEV","UserTasksPage","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","selectedTask","setSelectedTask","modalOpen","setModalOpen","menuOpen","setMenuOpen","menuRef","navigate","token","localStorage","getItem","decodedToken","fullName","name","capitalizeFirstLetter","split","fetchTasks","response","fetch","headers","Authorization","ok","data","json","filterTasks","console","error","statusText","length","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","handleFilterChange","newFilter","task","taskStatus","sort","a","b","createdAt","handleCompleteTask","taskId","method","updatedTasks","map","id","handleCloseModal","handleEditClick","handleUpdateTask","updatedTask","body","JSON","stringify","updatedTaskData","prevTasks","handleDeleteTask","handleCreateTask","newTask","toggleMenu","prev","Container","children","Sidebar","Header","fileName","_jsxFileName","lineNumber","columnNumber","FilterMenu","FilterButton","onClick","active","CreateTaskButton","Content","TaskGrid","TaskCard","disabled","CardHeader","TaskName","taskTitle","MenuIcon","visible","CheckIcon","DropdownMenu","ref","MenuItem","TaskDescription","taskDescription","TaskDate","CompleteButton","NoTasksMessage","isOpen","onClose","onCreate","_c","div","_c2","_c3","h1","_c4","_c5","button","props","_c6","_c7","_c8","_c9","_c10","_c11","h3","_c12","_c13","_c14","_c15","_c16","p","_c17","_c18","_c19","_c20","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { FaEllipsisV, FaCheck } from 'react-icons/fa';\nimport CreateTaskModal from '../components/CreateTaskModal'; // Certifique-se de que o caminho está correto\n\nconst UserTasksPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({ firstName: '', email: '' });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setIsAuthenticated(true);\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível',\n        });\n\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: { Authorization: `Bearer ${token}` },\n            });\n\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null); // Fecha o menu ao clicar fora\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Data não disponível.';\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const handleFilterChange = (newFilter) => {\n    setFilter(newFilter);\n    filterTasks(tasks, newFilter);\n  };\n\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      case 'all':\n        setFilteredTasks(tasks);\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        // Atualiza a lista de tarefas no estado\n        const updatedTasks = tasks.map(task =>\n          task.id === taskId ? { ...task, taskStatus: true } : task\n        );\n        setTasks(updatedTasks);\n        filterTasks(updatedTasks, filter); // Reaplica o filtro\n\n        // Fecha o menu e modal\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n\n  const handleEditClick = (task) => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n\n  const handleUpdateTask = async (updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(updatedTask),\n      });\n\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task =>\n            task.id === updatedTaskData.id ? updatedTaskData : task\n          );\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n\n  const handleCreateTask = (newTask) => {\n    setTasks(prevTasks => {\n      const updatedTasks = [newTask, ...prevTasks];\n      filterTasks(updatedTasks, filter);\n      return updatedTasks;\n    });\n    handleCloseModal();\n  };\n\n  const toggleMenu = (taskId) => {\n    setMenuOpen((prev) => (prev === taskId ? null : taskId));\n  };\n\n  return (\n    <Container>\n      <Sidebar>\n        <Header>Tarefas de {user.firstName}</Header>\n        <FilterMenu>\n          <FilterButton onClick={() => handleFilterChange('recent')} active={filter === 'recent'}>Recentes</FilterButton>\n          <FilterButton onClick={() => handleFilterChange('completed')} active={filter === 'completed'}>Concluídas</FilterButton>\n          <FilterButton onClick={() => handleFilterChange('pending')} active={filter === 'pending'}>Pendentes</FilterButton>\n          <FilterButton onClick={() => handleFilterChange('all')} active={filter === 'all'}>Todas</FilterButton>\n        </FilterMenu>\n        <CreateTaskButton onClick={() => setModalOpen(true)}>Criar Tarefa</CreateTaskButton>\n      </Sidebar>\n      <Content>\n        <TaskGrid>\n          {filteredTasks.length ? (\n            filteredTasks.map((task) => (\n              <TaskCard key={task.id} disabled={task.taskStatus}>\n                <CardHeader>\n                  <TaskName>{task.taskTitle}</TaskName>\n                  <MenuIcon\n                    onClick={() => toggleMenu(task.id)}\n                    visible={!task.taskStatus} // Exibir apenas se a tarefa não estiver concluída\n                  ></MenuIcon>\n                  <CheckIcon visible={task.taskStatus}>\n                    <FaCheck />\n                  </CheckIcon>\n                  {menuOpen === task.id && (\n                    <DropdownMenu ref={menuRef}>\n                      <MenuItem onClick={() => handleEditClick(task)}>Editar</MenuItem>\n                      <MenuItem onClick={() => handleDeleteTask(task.id)}>Excluir</MenuItem>\n                    </DropdownMenu>\n                  )}\n                </CardHeader>\n                <TaskDescription>{task.taskDescription}</TaskDescription>\n                <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n                {!task.taskStatus && (\n                  <CompleteButton onClick={() => handleCompleteTask(task.id)}>Marcar como concluída</CompleteButton>\n                )}\n              </TaskCard>\n            ))\n          ) : (\n            <NoTasksMessage>Nenhuma tarefa encontrada.</NoTasksMessage>\n          )}\n        </TaskGrid>\n      </Content>\n      {modalOpen && (\n        <CreateTaskModal\n          isOpen={modalOpen}\n          onClose={handleCloseModal}\n          onCreate={handleCreateTask}\n          token={localStorage.getItem('token')}\n        />\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst Sidebar = styled.div`\n  width: 250px;\n  padding: 20px;\n  background-color: #f4f4f4;\n`;\n\nconst Header = styled.h1`\n  font-size: 1.5rem;\n`;\n\nconst FilterMenu = styled.div`\n  margin: 20px 0;\n`;\n\nconst FilterButton = styled.button`\n  background: ${(props) => (props.active ? '#007bff' : '#fff')};\n  color: ${(props) => (props.active ? '#fff' : '#000')};\n  border: 1px solid #ddd;\n  padding: 10px;\n  margin: 5px;\n  cursor: pointer;\n  border-radius: 4px;\n  &:hover {\n    background: ${(props) => (props.active ? '#0056b3' : '#f8f9fa')};\n  }\n`;\n\nconst CreateTaskButton = styled.button`\n  background: #007bff;\n  color: #fff;\n  border: none;\n  padding: 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n  &:hover {\n    background: #0056b3;\n  }\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 20px;\n`;\n\nconst TaskGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nconst TaskCard = styled.div`\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 20px;\n  width: calc(33.333% - 40px);\n  box-sizing: border-box;\n  position: relative;\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst TaskName = styled.h3`\n  font-size: 1.2rem;\n  margin: 0;\n`;\n\nconst MenuIcon = styled.div`\n  cursor: pointer;\n  visibility: ${(props) => (props.visible ? 'visible' : 'hidden')};\n`;\n\nconst CheckIcon = styled.div`\n  color: green;\n  visibility: ${(props) => (props.visible ? 'visible' : 'hidden')};\n`;\n\nconst DropdownMenu = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 0;\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n`;\n\nconst MenuItem = styled.div`\n  padding: 10px;\n  cursor: pointer;\n  &:hover {\n    background: #f0f0f0;\n  }\n`;\n\nconst TaskDescription = styled.p`\n  margin: 10px 0;\n`;\n\nconst TaskDate = styled.div`\n  font-size: 0.875rem;\n  color: #666;\n`;\n\nconst CompleteButton = styled.button`\n  background: #28a745;\n  color: #fff;\n  border: none;\n  padding: 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 100%;\n  &:hover {\n    background: #218838;\n  }\n`;\n\nconst NoTasksMessage = styled.div`\n  text-align: center;\n  color: #666;\n`;\n\nexport default UserTasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}