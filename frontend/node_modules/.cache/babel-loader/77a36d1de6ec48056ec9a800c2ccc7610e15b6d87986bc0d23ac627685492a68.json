{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Tasks Home/TaskCard.js\";\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Componente TaskCard que exibe informações de uma tarefa\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  task,\n  onViewTask\n}) => /*#__PURE__*/_jsxDEV(Card, {\n  children: [/*#__PURE__*/_jsxDEV(TaskTitle, {\n    children: task.taskTitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TaskInfo, {\n    children: [\"Criada em: \", formatDate(task.createdAt)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ViewButton, {\n    onClick: onViewTask,\n    children: \"Ver Tarefa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n// Estilo para o cartão da tarefa\n_c = TaskCard;\nconst Card = styled.div`\n  background: linear-gradient(145deg, #2c2c2c, #1e1e1e); /* Gradiente de fundo escuro */\n  padding: 20px;\n  border-radius: 8px; /* Cantos arredondados */\n  position: relative;\n  transition: transform 0.3s, box-shadow 0.3s; /* Transições para transformação e sombra */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Sombra padrão */\n\n  &:hover {\n    transform: translateY(-5px); /* Levanta o cartão ao passar o mouse */\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4); /* Aumenta a sombra no hover */\n  }\n\n  @media (max-width: 768px) {\n    padding: 15px; /* Reduz o padding em telas menores */\n  }\n`;\n\n// Estilo para o título da tarefa\n_c2 = Card;\nconst TaskTitle = styled.h3`\n  margin: 0;\n  color: #fff; /* Branco para o texto */\n  font-size: 1.25rem; /* Tamanho da fonte */\n  white-space: nowrap;  /* Evita a quebra de linha */\n  overflow: hidden;     /* Esconde o texto que ultrapassa os limites */\n  text-overflow: ellipsis;  /* Adiciona reticências ao final do texto quando for muito longo */\n`;\n\n// Estilo para as informações da tarefa\n_c3 = TaskTitle;\nconst TaskInfo = styled.p`\n  color: #aaa; /* Cinza claro para o texto */\n  font-size: 0.9rem; /* Tamanho da fonte */\n  margin-top: 5px; /* Margem superior */\n  margin-bottom: 3rem; /* Margem inferior */\n`;\n\n// Estilo para o botão de visualização da tarefa\n_c4 = TaskInfo;\nconst ViewButton = styled.button`\n  background-color: #ea4f97; /* Cor de fundo rosa */\n  color: #fff; /* Cor do texto em branco */\n  border: none;\n  padding: 10px 15px; /* Espaçamento interno */\n  border-radius: 5px; /* Cantos arredondados */\n  cursor: pointer;\n  font-size: 0.9rem; /* Tamanho da fonte */\n  position: absolute;\n  bottom: 10px; /* Posiciona o botão no fundo do cartão */\n  left: 10px; /* Posiciona o botão à esquerda */\n  transition: background-color 0.3s; /* Transição suave para a cor de fundo */\n\n  &:hover {\n    background-color: #f291be; /* Cor de fundo rosa mais claro no hover */\n  }\n`;\n\n// Função auxiliar para formatar a data no formato DD/MM/AAAA\n_c5 = ViewButton;\nconst formatDate = dateString => {\n  const options = {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric'\n  };\n  return new Date(dateString).toLocaleDateString('pt-BR', options);\n};\nexport default TaskCard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TaskCard\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"TaskTitle\");\n$RefreshReg$(_c4, \"TaskInfo\");\n$RefreshReg$(_c5, \"ViewButton\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","TaskCard","task","onViewTask","Card","children","TaskTitle","taskTitle","fileName","_jsxFileName","lineNumber","columnNumber","TaskInfo","formatDate","createdAt","ViewButton","onClick","_c","div","_c2","h3","_c3","p","_c4","button","_c5","dateString","options","day","month","year","Date","toLocaleDateString","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Tasks Home/TaskCard.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\n// Componente TaskCard que exibe informações de uma tarefa\nconst TaskCard = ({ task, onViewTask }) => (\n  <Card>\n    <TaskTitle>{task.taskTitle}</TaskTitle>\n    <TaskInfo>Criada em: {formatDate(task.createdAt)}</TaskInfo>\n    <ViewButton onClick={onViewTask}>Ver Tarefa</ViewButton>\n  </Card>\n);\n\n// Estilo para o cartão da tarefa\nconst Card = styled.div`\n  background: linear-gradient(145deg, #2c2c2c, #1e1e1e); /* Gradiente de fundo escuro */\n  padding: 20px;\n  border-radius: 8px; /* Cantos arredondados */\n  position: relative;\n  transition: transform 0.3s, box-shadow 0.3s; /* Transições para transformação e sombra */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Sombra padrão */\n\n  &:hover {\n    transform: translateY(-5px); /* Levanta o cartão ao passar o mouse */\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4); /* Aumenta a sombra no hover */\n  }\n\n  @media (max-width: 768px) {\n    padding: 15px; /* Reduz o padding em telas menores */\n  }\n`;\n\n// Estilo para o título da tarefa\nconst TaskTitle = styled.h3`\n  margin: 0;\n  color: #fff; /* Branco para o texto */\n  font-size: 1.25rem; /* Tamanho da fonte */\n  white-space: nowrap;  /* Evita a quebra de linha */\n  overflow: hidden;     /* Esconde o texto que ultrapassa os limites */\n  text-overflow: ellipsis;  /* Adiciona reticências ao final do texto quando for muito longo */\n`;\n\n// Estilo para as informações da tarefa\nconst TaskInfo = styled.p`\n  color: #aaa; /* Cinza claro para o texto */\n  font-size: 0.9rem; /* Tamanho da fonte */\n  margin-top: 5px; /* Margem superior */\n  margin-bottom: 3rem; /* Margem inferior */\n`;\n\n// Estilo para o botão de visualização da tarefa\nconst ViewButton = styled.button`\n  background-color: #ea4f97; /* Cor de fundo rosa */\n  color: #fff; /* Cor do texto em branco */\n  border: none;\n  padding: 10px 15px; /* Espaçamento interno */\n  border-radius: 5px; /* Cantos arredondados */\n  cursor: pointer;\n  font-size: 0.9rem; /* Tamanho da fonte */\n  position: absolute;\n  bottom: 10px; /* Posiciona o botão no fundo do cartão */\n  left: 10px; /* Posiciona o botão à esquerda */\n  transition: background-color 0.3s; /* Transição suave para a cor de fundo */\n\n  &:hover {\n    background-color: #f291be; /* Cor de fundo rosa mais claro no hover */\n  }\n`;\n\n// Função auxiliar para formatar a data no formato DD/MM/AAAA\nconst formatDate = (dateString) => {\n  const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\n  return new Date(dateString).toLocaleDateString('pt-BR', options);\n};\n\nexport default TaskCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,kBACpCH,OAAA,CAACI,IAAI;EAAAC,QAAA,gBACHL,OAAA,CAACM,SAAS;IAAAD,QAAA,EAAEH,IAAI,CAACK;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC,eACvCX,OAAA,CAACY,QAAQ;IAAAP,QAAA,GAAC,aAAW,EAACQ,UAAU,CAACX,IAAI,CAACY,SAAS,CAAC;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC,eAC5DX,OAAA,CAACe,UAAU;IAACC,OAAO,EAAEb,UAAW;IAAAE,QAAA,EAAC;EAAU;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACpD,CACP;;AAED;AAAAM,EAAA,GARMhB,QAAQ;AASd,MAAMG,IAAI,GAAGN,MAAM,CAACoB,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAlBMf,IAAI;AAmBV,MAAME,SAAS,GAAGR,MAAM,CAACsB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GATMf,SAAS;AAUf,MAAMM,QAAQ,GAAGd,MAAM,CAACwB,CAAC;AACzB;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAPMX,QAAQ;AAQd,MAAMG,UAAU,GAAGjB,MAAM,CAAC0B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAlBMV,UAAU;AAmBhB,MAAMF,UAAU,GAAIa,UAAU,IAAK;EACjC,MAAMC,OAAO,GAAG;IAAEC,GAAG,EAAE,SAAS;IAAEC,KAAK,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAU,CAAC;EACrE,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAAC,OAAO,EAAEL,OAAO,CAAC;AAClE,CAAC;AAED,eAAe1B,QAAQ;AAAC,IAAAgB,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAQ,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAR,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}