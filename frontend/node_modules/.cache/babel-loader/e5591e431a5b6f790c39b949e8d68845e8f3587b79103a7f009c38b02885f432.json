{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Header/TaskMenu.js\";\n// TaskMenu.js\nimport React, { Component, createRef } from 'react';\nimport styled from 'styled-components';\nimport { FaTasks } from 'react-icons/fa'; // Ícone adicionado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TaskMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClickOutside = event => {\n      if (this.menuRef.current && !this.menuRef.current.contains(event.target)) {\n        this.props.onClose(); // Chama a função onClose passada como prop\n      }\n    };\n    this.menuRef = /*#__PURE__*/createRef(); // Criação da referência para o menu\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  render() {\n    const {\n      onViewTasks\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(TaskMenuContainer, {\n      ref: this.menuRef,\n      children: /*#__PURE__*/_jsxDEV(TaskLink, {\n        onClick: onViewTasks,\n        children: [/*#__PURE__*/_jsxDEV(TaskIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), \"Gerenciar Tarefas\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst TaskMenuContainer = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background-color: #1e1e1e; /* Cor de fundo mais suave */\n  border-radius: 10px; /* Bordas arredondadas mais acentuadas */\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.4); /* Sombra mais suave */\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  z-index: 1000;\n  min-width: 200px; /* Largura mínima um pouco maior */\n`;\n_c = TaskMenuContainer;\nconst TaskLink = styled.div`\n  color: #f0f0f0; /* Cor do texto mais clara */\n  text-decoration: none;\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n  border-radius: 8px; /* Bordas arredondadas para um toque mais suave */\n  display: flex;\n  align-items: center; /* Alinhamento vertical do texto e ícone */\n\n  &:hover {\n    background-color: #2c2c2c; /* Cor de fundo do hover mais clara */\n    transform: translateX(8px); /* Movimento mais suave */\n  }\n\n  &:focus {\n    outline: 3px solid #1e90ff; /* Destaque de foco mais visível */\n    outline-offset: 4px;\n  }\n`;\n_c2 = TaskLink;\nconst TaskIcon = styled(FaTasks)`\n  margin-right: 0.5rem; /* Espaçamento entre ícone e texto */\n  color: #ffdd57; /* Cor do ícone mais atraente */\n`;\n_c3 = TaskIcon;\nexport default TaskMenu;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TaskMenuContainer\");\n$RefreshReg$(_c2, \"TaskLink\");\n$RefreshReg$(_c3, \"TaskIcon\");","map":{"version":3,"names":["React","Component","createRef","styled","FaTasks","jsxDEV","_jsxDEV","TaskMenu","constructor","props","handleClickOutside","event","menuRef","current","contains","target","onClose","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","onViewTasks","TaskMenuContainer","ref","children","TaskLink","onClick","TaskIcon","fileName","_jsxFileName","lineNumber","columnNumber","div","_c","_c2","_c3","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Header/TaskMenu.js"],"sourcesContent":["// TaskMenu.js\nimport React, { Component, createRef } from 'react';\nimport styled from 'styled-components';\nimport { FaTasks } from 'react-icons/fa'; // Ícone adicionado\n\nclass TaskMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.menuRef = createRef(); // Criação da referência para o menu\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside = (event) => {\n    if (this.menuRef.current && !this.menuRef.current.contains(event.target)) {\n      this.props.onClose(); // Chama a função onClose passada como prop\n    }\n  };\n\n  render() {\n    const { onViewTasks } = this.props;\n    return (\n      <TaskMenuContainer ref={this.menuRef}>\n        <TaskLink onClick={onViewTasks}>\n          <TaskIcon />\n          Gerenciar Tarefas\n        </TaskLink>\n      </TaskMenuContainer>\n    );\n  }\n}\n\nconst TaskMenuContainer = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background-color: #1e1e1e; /* Cor de fundo mais suave */\n  border-radius: 10px; /* Bordas arredondadas mais acentuadas */\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.4); /* Sombra mais suave */\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  z-index: 1000;\n  min-width: 200px; /* Largura mínima um pouco maior */\n`;\n\nconst TaskLink = styled.div`\n  color: #f0f0f0; /* Cor do texto mais clara */\n  text-decoration: none;\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n  border-radius: 8px; /* Bordas arredondadas para um toque mais suave */\n  display: flex;\n  align-items: center; /* Alinhamento vertical do texto e ícone */\n\n  &:hover {\n    background-color: #2c2c2c; /* Cor de fundo do hover mais clara */\n    transform: translateX(8px); /* Movimento mais suave */\n  }\n\n  &:focus {\n    outline: 3px solid #1e90ff; /* Destaque de foco mais visível */\n    outline-offset: 4px;\n  }\n`;\n\nconst TaskIcon = styled(FaTasks)`\n  margin-right: 0.5rem; /* Espaçamento entre ícone e texto */\n  color: #ffdd57; /* Cor do ícone mais atraente */\n`;\n\nexport default TaskMenu;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,OAAO,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,SAASN,SAAS,CAAC;EAC/BO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAYfC,kBAAkB,GAAIC,KAAK,IAAK;MAC9B,IAAI,IAAI,CAACC,OAAO,CAACC,OAAO,IAAI,CAAC,IAAI,CAACD,OAAO,CAACC,OAAO,CAACC,QAAQ,CAACH,KAAK,CAACI,MAAM,CAAC,EAAE;QACxE,IAAI,CAACN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC,CAAC;MACxB;IACF,CAAC;IAfC,IAAI,CAACJ,OAAO,gBAAGV,SAAS,CAAC,CAAC,CAAC,CAAC;EAC9B;EAEAe,iBAAiBA,CAAA,EAAG;IAClBC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACT,kBAAkB,CAAC;EACjE;EAEAU,oBAAoBA,CAAA,EAAG;IACrBF,QAAQ,CAACG,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACX,kBAAkB,CAAC;EACpE;EAQAY,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC;IAAY,CAAC,GAAG,IAAI,CAACd,KAAK;IAClC,oBACEH,OAAA,CAACkB,iBAAiB;MAACC,GAAG,EAAE,IAAI,CAACb,OAAQ;MAAAc,QAAA,eACnCpB,OAAA,CAACqB,QAAQ;QAACC,OAAO,EAAEL,WAAY;QAAAG,QAAA,gBAC7BpB,OAAA,CAACuB,QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,qBAEd;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAExB;AACF;AAEA,MAAMT,iBAAiB,GAAGrB,MAAM,CAAC+B,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAbIX,iBAAiB;AAevB,MAAMG,QAAQ,GAAGxB,MAAM,CAAC+B,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GApBIT,QAAQ;AAsBd,MAAME,QAAQ,GAAG1B,MAAM,CAACC,OAAO,CAAC;AAChC;AACA;AACA,CAAC;AAACiC,GAAA,GAHIR,QAAQ;AAKd,eAAetB,QAAQ;AAAC,IAAA4B,EAAA,EAAAC,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}