{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../Context/AuthContext';\nimport Navbar from '../components/Manager/Navbar';\nimport TaskModal from '../components/Manager/TaskModal';\nimport TaskList from '../components/Manager/TaskList';\nimport LoadingMessage from '../components/Manager/LoadingMessage';\nimport NoTasksMessage from '../components/Manager/NoTasksMessage';\nimport styles from '../components/Manager/TaskManager.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [loading, setLoading] = useState(true); // Estado para controlar o carregamento\n  const {\n    token,\n    userInfo\n  } = useAuth();\n\n  // Função para buscar as tarefas\n  const fetchTasks = async () => {\n    if (!token || !(userInfo !== null && userInfo !== void 0 && userInfo.username)) return;\n    setLoading(true); // Inicia o carregamento\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${userInfo.username}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao buscar tarefas');\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false); // Finaliza o carregamento\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [token, userInfo === null || userInfo === void 0 ? void 0 : userInfo.username]);\n  const handleAddTaskClick = () => {\n    setCurrentTask(null);\n    setModalOpen(true);\n  };\n  const handleSaveTask = async task => {\n    try {\n      const method = currentTask ? 'PUT' : 'POST';\n      const url = currentTask ? `https://connecter-app-production.up.railway.app/api/manager/tasks/${currentTask.id}` : 'https://connecter-app-production.up.railway.app/api/manager/tasks';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(task)\n      });\n      if (!response.ok) throw new Error('Erro ao salvar tarefa');\n      await response.json();\n      fetchTasks(); // Atualize a lista de tarefas\n      setModalOpen(false); // Feche o modal e limpe a tarefa atual\n      setCurrentTask(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluída');\n      await response.json();\n      fetchTasks(); // Atualize a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao excluir tarefa');\n      fetchTasks(); // Atualize a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.taskStatus;\n    if (filter === 'pending') return !task.taskStatus;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onAddTaskClick: handleAddTaskClick,\n      onFilterChange: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.taskWrapper,\n      children: loading ? /*#__PURE__*/_jsxDEV(LoadingMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : filteredTasks.length > 0 ? /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: filteredTasks,\n        onEdit: task => {\n          setCurrentTask(task);\n          setModalOpen(true);\n        },\n        onDelete: handleDeleteTask,\n        onComplete: handleCompleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(NoTasksMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n      isOpen: modalOpen,\n      onClose: () => setModalOpen(false),\n      onSave: handleSaveTask,\n      task: currentTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"sDiTn2xAoRp1ZxlCPLBB2w1qnXg=\", false, function () {\n  return [useAuth];\n});\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","Navbar","TaskModal","TaskList","LoadingMessage","NoTasksMessage","styles","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","filter","setFilter","modalOpen","setModalOpen","currentTask","setCurrentTask","loading","setLoading","token","userInfo","fetchTasks","username","response","fetch","headers","Authorization","ok","Error","data","json","error","console","handleAddTaskClick","handleSaveTask","task","method","url","id","body","JSON","stringify","handleCompleteTask","taskId","handleDeleteTask","filteredTasks","taskStatus","className","container","children","onAddTaskClick","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","taskWrapper","length","onEdit","onDelete","onComplete","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../Context/AuthContext';\nimport Navbar from '../components/Manager/Navbar';\nimport TaskModal from '../components/Manager/TaskModal';\nimport TaskList from '../components/Manager/TaskList';\nimport LoadingMessage from '../components/Manager/LoadingMessage';\nimport NoTasksMessage from '../components/Manager/NoTasksMessage';\nimport styles from '../components/Manager/TaskManager.module.css';\n\nconst TaskManager = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [loading, setLoading] = useState(true); // Estado para controlar o carregamento\n  const { token, userInfo } = useAuth();\n\n  // Função para buscar as tarefas\n  const fetchTasks = async () => {\n    if (!token || !userInfo?.username) return;\n    setLoading(true); // Inicia o carregamento\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${userInfo.username}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (!response.ok) throw new Error('Erro ao buscar tarefas');\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false); // Finaliza o carregamento\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, [token, userInfo?.username]);\n\n  const handleAddTaskClick = () => {\n    setCurrentTask(null);\n    setModalOpen(true);\n  };\n\n  const handleSaveTask = async (task) => {\n    try {\n      const method = currentTask ? 'PUT' : 'POST';\n      const url = currentTask\n        ? `https://connecter-app-production.up.railway.app/api/manager/tasks/${currentTask.id}`\n        : 'https://connecter-app-production.up.railway.app/api/manager/tasks';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(task),\n      });\n\n      if (!response.ok) throw new Error('Erro ao salvar tarefa');\n      await response.json();\n      \n      fetchTasks(); // Atualize a lista de tarefas\n      setModalOpen(false); // Feche o modal e limpe a tarefa atual\n      setCurrentTask(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluída');\n      await response.json();\n      \n      fetchTasks(); // Atualize a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao excluir tarefa');\n      fetchTasks(); // Atualize a lista de tarefas\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.taskStatus;\n    if (filter === 'pending') return !task.taskStatus;\n    return true;\n  });\n\n  return (\n    <div className={styles.container}>\n      <Navbar onAddTaskClick={handleAddTaskClick} onFilterChange={setFilter} />\n      <div className={styles.taskWrapper}>\n        {loading ? (\n          <LoadingMessage />\n        ) : filteredTasks.length > 0 ? (\n          <TaskList \n            tasks={filteredTasks} \n            onEdit={(task) => {\n              setCurrentTask(task);\n              setModalOpen(true);\n            }}\n            onDelete={handleDeleteTask}\n            onComplete={handleCompleteTask}\n          />\n        ) : (\n          <NoTasksMessage />\n        )}\n      </div>\n      <TaskModal \n        isOpen={modalOpen} \n        onClose={() => setModalOpen(false)} \n        onSave={handleSaveTask} \n        task={currentTask} \n      />\n    </div>\n  );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}