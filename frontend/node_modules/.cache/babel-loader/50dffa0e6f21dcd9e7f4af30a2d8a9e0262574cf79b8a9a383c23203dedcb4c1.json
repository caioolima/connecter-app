{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport { FaCheck } from 'react-icons/fa';\nimport CreateTaskModal from '../components/CreateTaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: ''\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n  const [createModalOpen, setCreateModalOpen] = useState(false); // Adicione esta linha\n  const openCreateTaskModal = () => setCreateModalOpen(true); // Adicione esta função\n  const closeCreateTaskModal = () => setCreateModalOpen(false); // Adicione esta função\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null); // Fecha o menu ao clicar fora\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleFilterChange = newFilter => {\n    setFilter(newFilter);\n    filterTasks(tasks, newFilter);\n  };\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      case 'all':\n        setFilteredTasks(tasks);\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        // Atualiza a lista de tarefas no estado\n        const updatedTasks = tasks.map(task => task.id === taskId ? {\n          ...task,\n          taskStatus: true\n        } : task);\n        setTasks(updatedTasks);\n        filterTasks(updatedTasks, filter); // Reaplica o filtro\n\n        // Fecha o menu e modal\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  const handleEditClick = task => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n          filterTasks(updatedTasks, filter);\n          return updatedTasks;\n        });\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  const toggleMenu = taskId => {\n    setMenuOpen(prev => prev === taskId ? null : taskId);\n  };\n  const handleCreateTask = task => {\n    // Adiciona a nova tarefa ao início da lista de tarefas\n    const newTask = {\n      ...task,\n      id: Date.now(),\n      // Adiciona um ID único temporário (ou você pode usar o ID fornecido pelo backend)\n      createdAt: new Date().toISOString(),\n      // Define a data de criação\n      taskStatus: false // Define o status da tarefa como pendente\n    };\n\n    // Atualiza o estado das tarefas\n    setTasks(prevTasks => [newTask, ...prevTasks]);\n\n    // Atualiza as tarefas filtradas\n    filterTasks([newTask, ...tasks], filter);\n\n    // Fecha o modal de criação\n    closeCreateTaskModal();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [\"Tarefas de \", user.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FilterMenu, {\n        children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('recent'),\n          active: filter === 'recent',\n          children: \"Recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('completed'),\n          active: filter === 'completed',\n          children: \"Conclu\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('pending'),\n          active: filter === 'pending',\n          children: \"Pendentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => handleFilterChange('all'),\n          active: filter === 'all',\n          children: \"Todas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openCreateTaskModal,\n          children: \"Criar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), \" // Adicione esta linha onde deseja exibir o bot\\xE3o\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(CreateTaskModal, {\n        isOpen: createModalOpen,\n        onClose: closeCreateTaskModal,\n        onCreate: handleCreateTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskGrid, {\n        children: filteredTasks.length ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          disabled: task.taskStatus,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {\n              onClick: () => toggleMenu(task.id),\n              disabled: task.taskStatus,\n              children: /*#__PURE__*/_jsxDEV(FaEllipsisV, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CheckIcon, {\n              visible: task.taskStatus,\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this), menuOpen === task.id && !task.taskStatus && /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleEditClick(task),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 25\n              }, this), !task.taskStatus && /*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleCompleteTask(task.id),\n                children: \"Concluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TaskDescription, {\n            children: task.taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n            children: formatDate(task.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 19\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTasks, {\n          children: \"Nenhuma tarefa encontrada.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), modalOpen && selectedTask && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Editar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            e.preventDefault();\n            handleUpdateTask(selectedTask);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: selectedTask.taskTitle,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskTitle: e.target.value\n            }),\n            placeholder: \"T\\xEDtulo da tarefa\",\n            required: true,\n            disabled: selectedTask.taskStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: selectedTask.taskDescription,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskDescription: e.target.value\n            }),\n            placeholder: \"Descri\\xE7\\xE3o da tarefa\",\n            required: true,\n            disabled: selectedTask.taskStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: selectedTask.taskStatus,\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => handleDeleteTask(selectedTask.id),\n            disabled: selectedTask.taskStatus,\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: handleCloseModal,\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 7\n  }, this);\n};\n_s(UserTasksPage, \"o9mDrLLZaoQyO2XDPRe63SqH/cc=\", false, function () {\n  return [useNavigate];\n});\n_c = UserTasksPage;\nconst Container = styled.div`\n      display: flex;\n      min-height: 100vh;\n      background-color: #000;\n    `;\n_c2 = Container;\nconst Sidebar = styled.div`\n      width: 20%;\n      padding: 20px;\n      border-right: 2px solid #333; /* Linha lateral direita */\n    `;\n_c3 = Sidebar;\nconst Header = styled.h1`\n      font-size: 24px;\n      margin-bottom: 2rem;\n      margin-top: 5rem;\n      color: #fff;\n    `;\n_c4 = Header;\nconst FilterMenu = styled.div`\n      display: flex;\n      flex-direction: column;\n    `;\n_c5 = FilterMenu;\nconst FilterButton = styled.button`\n    font-weight: bold;\n    background-color: ${props => props.active ? '#000000' : '#ffffff'}; /* Preto quando ativo, branco quando inativo */\n    color: ${props => props.active ? '#ffffff' : '#000000'}; /* Branco quando ativo, preto quando inativo */\n    border: 1px solid #eaeaea; /* Borda leve */\n    padding: 8px 16px;\n    margin-bottom: 10px;\n    cursor: pointer;\n    border-radius: 5px; /* Bordas levemente arredondadas */\n    transition: background-color 0.2s ease, color 0.2s ease, border 0.2s ease; /* Transições suaves */\n    \n    &:hover {\n      background-color: #333333; /* Cinza claro no hover */\n      border-color: #d0d0d0; /* Ajuste sutil na borda no hover */\n      color: #fff;\n    }\n\n    &:focus {\n      outline: none; /* Remove outline padrão */\n      box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1); /* Sombra leve no foco */\n    }\n\n    &:active {\n      background-color: #333333; /* Tom mais escuro quando pressionado */\n      border-color: #333333; /* Borda alinhada com o background */\n    }\n  `;\n_c6 = FilterButton;\nconst Content = styled.div`\n      flex: 1;\n      padding: 20px;\n    `;\n_c7 = Content;\nconst TaskGrid = styled.div`\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 20px;\n      margin-top: 5rem;\n    `;\n_c8 = TaskGrid;\nconst TaskCard = styled.div`\n    background-color: #ffffff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    opacity: ${props => props.disabled ? 0.6 : 1};\n    pointer-events: ${props => props.disabled ? 'none' : 'auto'};\n  `;\n_c9 = TaskCard;\nconst CheckIcon = styled.div`\n    display: ${props => props.visible ? 'block' : 'none'};\n    color: green;\n    font-size: 20px;\n  `;\n_c10 = CheckIcon;\nconst CardHeader = styled.div`\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    `;\n_c11 = CardHeader;\nconst TaskName = styled.h3`\n      margin: 0;\n    `;\n_c12 = TaskName;\nconst MenuIcon = styled.div`\n    cursor: pointer;\n  `;\n_c13 = MenuIcon;\nconst DropdownMenu = styled.div`\n    position: relative; /* Posiciona o menu em relação ao MenuWrapper */\n    top: 100%; /* Coloca o menu diretamente abaixo do ícone */\n    right: 0;\n    background-color: white;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    z-index: 1000;\n    min-width: 120px; /* Define uma largura mínima para o menu */\n  `;\n_c14 = DropdownMenu;\nconst DropdownItem = styled.div`\n    padding: 8px 16px;\n    cursor: pointer;\n    &:hover {\n      background-color: #f0f0f0;\n    }\n  `;\n_c15 = DropdownItem;\nconst TaskDescription = styled.p`\n      font-size: 14px;\n      margin: 10px 0;\n    `;\n_c16 = TaskDescription;\nconst TaskDate = styled.span`\n      font-size: 12px;\n      color: #777;\n    `;\n_c17 = TaskDate;\nconst NoTasks = styled.div`\n      text-align: center;\n      color: #777;\n      padding: 20px;\n    `;\n_c18 = NoTasks;\nconst Modal = styled.div`\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.6);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    `;\n_c19 = Modal;\nconst ModalContent = styled.div`\n      background: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      width: 400px;\n      max-width: 80%;\n    `;\n_c20 = ModalContent;\nconst Form = styled.form`\n      display: flex;\n      flex-direction: column;\n    `;\n_c21 = Form;\nconst Input = styled.input`\n      margin-bottom: 10px;\n      padding: 10px;\n      font-size: 16px;\n    `;\n_c22 = Input;\nconst TextArea = styled.textarea`\n      margin-bottom: 10px;\n      padding: 10px;\n      font-size: 16px;\n    `;\n_c23 = TextArea;\nconst Button = styled.button`\n      padding: 10px;\n      margin-top: 10px;\n      cursor: pointer;\n      background-color: #3b82f6;\n      color: white;\n      border: none;\n      border-radius: 4px;\n    `;\n_c24 = Button;\nexport default UserTasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24;\n$RefreshReg$(_c, \"UserTasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Sidebar\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"FilterMenu\");\n$RefreshReg$(_c6, \"FilterButton\");\n$RefreshReg$(_c7, \"Content\");\n$RefreshReg$(_c8, \"TaskGrid\");\n$RefreshReg$(_c9, \"TaskCard\");\n$RefreshReg$(_c10, \"CheckIcon\");\n$RefreshReg$(_c11, \"CardHeader\");\n$RefreshReg$(_c12, \"TaskName\");\n$RefreshReg$(_c13, \"MenuIcon\");\n$RefreshReg$(_c14, \"DropdownMenu\");\n$RefreshReg$(_c15, \"DropdownItem\");\n$RefreshReg$(_c16, \"TaskDescription\");\n$RefreshReg$(_c17, \"TaskDate\");\n$RefreshReg$(_c18, \"NoTasks\");\n$RefreshReg$(_c19, \"Modal\");\n$RefreshReg$(_c20, \"ModalContent\");\n$RefreshReg$(_c21, \"Form\");\n$RefreshReg$(_c22, \"Input\");\n$RefreshReg$(_c23, \"TextArea\");\n$RefreshReg$(_c24, \"Button\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","useNavigate","jwtDecode","FaEllipsisV","FaCheck","CreateTaskModal","jsxDEV","_jsxDEV","UserTasksPage","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","selectedTask","setSelectedTask","modalOpen","setModalOpen","menuOpen","setMenuOpen","menuRef","createModalOpen","setCreateModalOpen","openCreateTaskModal","closeCreateTaskModal","navigate","token","localStorage","getItem","decodedToken","fullName","name","capitalizeFirstLetter","split","fetchTasks","response","fetch","headers","Authorization","ok","data","json","filterTasks","console","error","statusText","length","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","handleFilterChange","newFilter","task","taskStatus","sort","a","b","createdAt","handleCompleteTask","taskId","method","updatedTasks","map","id","handleCloseModal","handleEditClick","handleUpdateTask","updatedTask","body","JSON","stringify","updatedTaskData","prevTasks","handleDeleteTask","toggleMenu","prev","handleCreateTask","newTask","now","toISOString","Container","children","Sidebar","Header","fileName","_jsxFileName","lineNumber","columnNumber","FilterMenu","FilterButton","onClick","active","Content","isOpen","onClose","onCreate","TaskGrid","TaskCard","disabled","CardHeader","TaskName","taskTitle","MenuIcon","CheckIcon","visible","DropdownMenu","ref","DropdownItem","TaskDescription","taskDescription","TaskDate","NoTasks","Modal","ModalContent","Form","onSubmit","e","preventDefault","Input","type","value","onChange","placeholder","required","TextArea","Button","_c","div","_c2","_c3","h1","_c4","_c5","button","props","_c6","_c7","_c8","_c9","_c10","_c11","h3","_c12","_c13","_c14","_c15","p","_c16","span","_c17","_c18","_c19","_c20","form","_c21","input","_c22","textarea","_c23","_c24","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["  import React, { useEffect, useState, useRef } from 'react';\n  import styled from 'styled-components';\n  import { useNavigate } from 'react-router-dom';\n  import { jwtDecode } from 'jwt-decode';\n  import { FaEllipsisV } from 'react-icons/fa';\n  import { FaCheck } from 'react-icons/fa';\n  import CreateTaskModal from '../components/CreateTaskModal';\n\n  const UserTasksPage = () => {\n    const [tasks, setTasks] = useState([]);\n    const [filteredTasks, setFilteredTasks] = useState([]);\n    const [filter, setFilter] = useState('recent');\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [user, setUser] = useState({ firstName: '', email: '' });\n    const [selectedTask, setSelectedTask] = useState(null);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [menuOpen, setMenuOpen] = useState(null);\n    const menuRef = useRef(null);\n    const [createModalOpen, setCreateModalOpen] = useState(false); // Adicione esta linha\n    const openCreateTaskModal = () => setCreateModalOpen(true); // Adicione esta função\n    const closeCreateTaskModal = () => setCreateModalOpen(false); // Adicione esta função\n\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        setIsAuthenticated(true);\n\n        try {\n          const decodedToken = jwtDecode(token);\n          const fullName = decodedToken.name || 'Nome não disponível';\n          const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n          setUser({\n            firstName,\n            email: decodedToken.email || 'Email não disponível',\n          });\n\n          const fetchTasks = async () => {\n            try {\n              const response = await fetch('http://localhost:5000/api/tasks/', {\n                headers: { Authorization: `Bearer ${token}` },\n              });\n\n              if (response.ok) {\n                const data = await response.json();\n                setTasks(data);\n                filterTasks(data, filter);\n              } else {\n                console.error('Erro ao carregar tarefas:', response.statusText);\n              }\n            } catch (error) {\n              console.error('Erro ao carregar tarefas:', error);\n            }\n          };\n\n          fetchTasks();\n        } catch (error) {\n          console.error('Erro ao decodificar o token:', error);\n        }\n      } else {\n        navigate('/login');\n      }\n    }, [navigate, filter]);\n\n    useEffect(() => {\n      if (tasks.length) {\n        filterTasks(tasks, filter);\n      }\n    }, [tasks, filter]);\n\n    useEffect(() => {\n      const handleClickOutside = (event) => {\n        if (menuRef.current && !menuRef.current.contains(event.target)) {\n          setMenuOpen(null); // Fecha o menu ao clicar fora\n        }\n      };\n\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    const capitalizeFirstLetter = (string) => {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    };\n\n    const formatDate = (dateString) => {\n      if (!dateString) return 'Data não disponível.';\n      const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    };\n\n    const handleFilterChange = (newFilter) => {\n      setFilter(newFilter);\n      filterTasks(tasks, newFilter);\n    };\n\n    const filterTasks = (tasks, filter) => {\n      switch (filter) {\n        case 'recent':\n          setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n          break;\n        case 'completed':\n          setFilteredTasks(tasks.filter(task => task.taskStatus));\n          break;\n        case 'pending':\n          setFilteredTasks(tasks.filter(task => !task.taskStatus));\n          break;\n        case 'all':\n          setFilteredTasks(tasks);\n          break;\n        default:\n          setFilteredTasks(tasks);\n      }\n    };\n    \n\n    const handleCompleteTask = async (taskId) => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n    \n        if (response.ok) {\n          // Atualiza a lista de tarefas no estado\n          const updatedTasks = tasks.map(task =>\n            task.id === taskId ? { ...task, taskStatus: true } : task\n          );\n          setTasks(updatedTasks);\n          filterTasks(updatedTasks, filter); // Reaplica o filtro\n    \n          // Fecha o menu e modal\n          handleCloseModal();\n        } else {\n          console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao marcar tarefa como concluída:', error);\n      }\n    };\n    \n\n    const handleEditClick = (task) => {\n      setSelectedTask(task);\n      setModalOpen(true);\n      setMenuOpen(null); // Fecha o menu ao clicar em editar\n    };\n\n    const handleCloseModal = () => {\n      setModalOpen(false);\n      setSelectedTask(null);\n    };\n\n    const handleUpdateTask = async (updatedTask) => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n          body: JSON.stringify(updatedTask),\n        });\n\n        if (response.ok) {\n          const updatedTaskData = await response.json();\n          setTasks(prevTasks => {\n            const updatedTasks = prevTasks.map(task =>\n              task.id === updatedTaskData.id ? updatedTaskData : task\n            );\n            filterTasks(updatedTasks, filter);\n            return updatedTasks;\n          });\n          handleCloseModal();\n        } else {\n          console.error('Erro ao atualizar tarefa:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao atualizar tarefa:', error);\n      }\n    };\n\n    const handleDeleteTask = async (taskId) => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\n          },\n        });\n\n        if (response.ok) {\n          setTasks(prevTasks => {\n            const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n            filterTasks(updatedTasks, filter);\n            return updatedTasks;\n          });\n          handleCloseModal();\n        } else {\n          console.error('Erro ao excluir tarefa:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao excluir tarefa:', error);\n      }\n    };\n\n    const toggleMenu = (taskId) => {\n      setMenuOpen((prev) => (prev === taskId ? null : taskId));\n    };\n\n    const handleCreateTask = (task) => {\n      // Adiciona a nova tarefa ao início da lista de tarefas\n      const newTask = {\n        ...task,\n        id: Date.now(), // Adiciona um ID único temporário (ou você pode usar o ID fornecido pelo backend)\n        createdAt: new Date().toISOString(), // Define a data de criação\n        taskStatus: false, // Define o status da tarefa como pendente\n      };\n    \n      // Atualiza o estado das tarefas\n      setTasks((prevTasks) => [newTask, ...prevTasks]);\n    \n      // Atualiza as tarefas filtradas\n      filterTasks([newTask, ...tasks], filter);\n    \n      // Fecha o modal de criação\n      closeCreateTaskModal();\n    };\n    \n    \n\n    return (\n      <Container>\n        <Sidebar>\n          <Header>Tarefas de {user.firstName}</Header>\n          <FilterMenu>\n            <FilterButton onClick={() => handleFilterChange('recent')} active={filter === 'recent'}>Recentes</FilterButton>\n            <FilterButton onClick={() => handleFilterChange('completed')} active={filter === 'completed'}>Concluídas</FilterButton>\n            <FilterButton onClick={() => handleFilterChange('pending')} active={filter === 'pending'}>Pendentes</FilterButton>\n            <FilterButton onClick={() => handleFilterChange('all')} active={filter === 'all'}>Todas</FilterButton>\n            <button onClick={openCreateTaskModal}>Criar Tarefa</button> // Adicione esta linha onde deseja exibir o botão\n\n          </FilterMenu>\n        </Sidebar>\n        <Content>\n          \n        <CreateTaskModal\n  isOpen={createModalOpen}\n  onClose={closeCreateTaskModal}\n  onCreate={handleCreateTask}\n/>\n\n          <TaskGrid>\n            {filteredTasks.length ? (\n              filteredTasks.map((task) => (\n                <TaskCard key={task.id} disabled={task.taskStatus}>\n                  <CardHeader>\n                    <TaskName>{task.taskTitle}</TaskName>\n                    <MenuIcon onClick={() => toggleMenu(task.id)} disabled={task.taskStatus}>\n                      <FaEllipsisV />\n                    </MenuIcon>\n                    <CheckIcon visible={task.taskStatus}>\n                      <FaCheck />\n                    </CheckIcon>\n                    {menuOpen === task.id && !task.taskStatus && (\n                      <DropdownMenu ref={menuRef}>\n                        <DropdownItem onClick={() => handleEditClick(task)}>Editar</DropdownItem>\n                        {!task.taskStatus && (\n                          <DropdownItem onClick={() => handleCompleteTask(task.id)}>Concluir</DropdownItem>\n                        )}\n                      </DropdownMenu>\n                    )}\n                  </CardHeader>\n                  <TaskDescription>{task.taskDescription}</TaskDescription>\n                  <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n                </TaskCard>\n              ))\n            ) : (\n              <NoTasks>Nenhuma tarefa encontrada.</NoTasks>\n            )}\n          </TaskGrid>\n        </Content>\n        {modalOpen && selectedTask && (\n          <Modal>\n            <ModalContent>\n              <h2>Editar Tarefa</h2>\n              <Form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  handleUpdateTask(selectedTask);\n                }}\n              >\n                <Input\n                  type=\"text\"\n                  value={selectedTask.taskTitle}\n                  onChange={(e) => setSelectedTask({ ...selectedTask, taskTitle: e.target.value })}\n                  placeholder=\"Título da tarefa\"\n                  required\n                  disabled={selectedTask.taskStatus}\n                />\n                <TextArea\n                  value={selectedTask.taskDescription}\n                  onChange={(e) => setSelectedTask({ ...selectedTask, taskDescription: e.target.value })}\n                  placeholder=\"Descrição da tarefa\"\n                  required\n                  disabled={selectedTask.taskStatus}\n                />\n                <Button type=\"submit\" disabled={selectedTask.taskStatus}>Salvar</Button>\n                <Button type=\"button\" onClick={() => handleDeleteTask(selectedTask.id)} disabled={selectedTask.taskStatus}>Excluir</Button>\n                <Button type=\"button\" onClick={handleCloseModal}>Fechar</Button>\n              </Form>\n            </ModalContent>\n          </Modal>\n        )}\n      </Container>\n    );\n  };\n\n    \n    const Container = styled.div`\n      display: flex;\n      min-height: 100vh;\n      background-color: #000;\n    `;\n    \n    const Sidebar = styled.div`\n      width: 20%;\n      padding: 20px;\n      border-right: 2px solid #333; /* Linha lateral direita */\n    `;\n    \n    const Header = styled.h1`\n      font-size: 24px;\n      margin-bottom: 2rem;\n      margin-top: 5rem;\n      color: #fff;\n    `;\n    \n    const FilterMenu = styled.div`\n      display: flex;\n      flex-direction: column;\n    `;\n    \n    const FilterButton = styled.button`\n    font-weight: bold;\n    background-color: ${(props) => (props.active ? '#000000' : '#ffffff')}; /* Preto quando ativo, branco quando inativo */\n    color: ${(props) => (props.active ? '#ffffff' : '#000000')}; /* Branco quando ativo, preto quando inativo */\n    border: 1px solid #eaeaea; /* Borda leve */\n    padding: 8px 16px;\n    margin-bottom: 10px;\n    cursor: pointer;\n    border-radius: 5px; /* Bordas levemente arredondadas */\n    transition: background-color 0.2s ease, color 0.2s ease, border 0.2s ease; /* Transições suaves */\n    \n    &:hover {\n      background-color: #333333; /* Cinza claro no hover */\n      border-color: #d0d0d0; /* Ajuste sutil na borda no hover */\n      color: #fff;\n    }\n\n    &:focus {\n      outline: none; /* Remove outline padrão */\n      box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1); /* Sombra leve no foco */\n    }\n\n    &:active {\n      background-color: #333333; /* Tom mais escuro quando pressionado */\n      border-color: #333333; /* Borda alinhada com o background */\n    }\n  `;\n\n    const Content = styled.div`\n      flex: 1;\n      padding: 20px;\n    `;\n    \n    const TaskGrid = styled.div`\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 20px;\n      margin-top: 5rem;\n    `;\n    \n    const TaskCard = styled.div`\n    background-color: #ffffff;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    opacity: ${(props) => (props.disabled ? 0.6 : 1)};\n    pointer-events: ${(props) => (props.disabled ? 'none' : 'auto')};\n  `;\n    \n  const CheckIcon = styled.div`\n    display: ${(props) => (props.visible ? 'block' : 'none')};\n    color: green;\n    font-size: 20px;\n  `;\n\n    const CardHeader = styled.div`\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    `;\n    \n    const TaskName = styled.h3`\n      margin: 0;\n    `;\n    \n    const MenuIcon = styled.div`\n    cursor: pointer;\n  `;\n\n  const DropdownMenu = styled.div`\n    position: relative; /* Posiciona o menu em relação ao MenuWrapper */\n    top: 100%; /* Coloca o menu diretamente abaixo do ícone */\n    right: 0;\n    background-color: white;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    z-index: 1000;\n    min-width: 120px; /* Define uma largura mínima para o menu */\n  `;\n\n  const DropdownItem = styled.div`\n    padding: 8px 16px;\n    cursor: pointer;\n    &:hover {\n      background-color: #f0f0f0;\n    }\n  `;\n\n    \n    const TaskDescription = styled.p`\n      font-size: 14px;\n      margin: 10px 0;\n    `;\n    \n    const TaskDate = styled.span`\n      font-size: 12px;\n      color: #777;\n    `;\n    \n    const NoTasks = styled.div`\n      text-align: center;\n      color: #777;\n      padding: 20px;\n    `;\n    \n    const Modal = styled.div`\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.6);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    `;\n    \n    const ModalContent = styled.div`\n      background: #fff;\n      padding: 20px;\n      border-radius: 8px;\n      width: 400px;\n      max-width: 80%;\n    `;\n    \n    const Form = styled.form`\n      display: flex;\n      flex-direction: column;\n    `;\n    \n    const Input = styled.input`\n      margin-bottom: 10px;\n      padding: 10px;\n      font-size: 16px;\n    `;\n    \n    const TextArea = styled.textarea`\n      margin-bottom: 10px;\n      padding: 10px;\n      font-size: 16px;\n    `;\n    \n    const Button = styled.button`\n      padding: 10px;\n      margin-top: 10px;\n      cursor: pointer;\n      background-color: #3b82f6;\n      color: white;\n      border: none;\n      border-radius: 4px;\n    `;\n    \n    export default UserTasksPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}