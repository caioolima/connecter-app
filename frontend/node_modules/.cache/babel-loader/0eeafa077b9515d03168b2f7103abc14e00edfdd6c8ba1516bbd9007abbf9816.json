{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/TasksHome/TaskModal.js\";\n// components/TaskModal.js\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskModal = ({\n  task,\n  onClose\n}) => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalDate, {\n          children: formatDate(task.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Descri\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 14\n          }, this), \" \", task.taskDescription]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 14\n          }, this), \" \", task.taskStatus ? 'Concluído' : 'Pendente']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskModal;\nconst Modal = styled.div`\nposition: fixed;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground: rgba(0, 0, 0, 0.9); /* Fundo preto semitransparente */\ncolor: #dcdcdc;\nborder-radius: 10px;\npadding: 2rem;\nwidth: 80%;\nmax-width: 600px;\nbox-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);\n`;\n_c2 = Modal;\nconst ModalContent = styled.div`\n  // Estilos aqui\n`;\n_c3 = ModalContent;\nconst CloseButton = styled.button`\nposition: absolute;\ntop: 1rem;\nright: 1rem;\nbackground: transparent;\nborder: none;\ncolor: #dcdcdc;\nfont-size: 1.5rem;\ncursor: pointer;\ntransition: color 0.3s ease;\n\n&:hover {\n  color: #f70073; /* Cor rosa para hover */\n}\n`;\n_c4 = CloseButton;\nconst ModalHeader = styled.div`\nmargin-bottom: 1rem;\n`;\n_c5 = ModalHeader;\nconst ModalBody = styled.div`\nargin-bottom: 1rem;\n`;\n_c6 = ModalBody;\nconst ModalDate = styled.p`\nfont-size: 0.9rem;\ncolor: #bbb;\n`;\n_c7 = ModalDate;\nconst formatDate = dateString => {\n  if (!dateString) return 'Data não disponível.';\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\nexport default TaskModal;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"TaskModal\");\n$RefreshReg$(_c2, \"Modal\");\n$RefreshReg$(_c3, \"ModalContent\");\n$RefreshReg$(_c4, \"CloseButton\");\n$RefreshReg$(_c5, \"ModalHeader\");\n$RefreshReg$(_c6, \"ModalBody\");\n$RefreshReg$(_c7, \"ModalDate\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","TaskModal","task","onClose","Modal","children","ModalContent","CloseButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ModalHeader","taskTitle","ModalDate","formatDate","createdAt","ModalBody","taskDescription","taskStatus","_c","div","_c2","_c3","button","_c4","_c5","_c6","p","_c7","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/TasksHome/TaskModal.js"],"sourcesContent":["// components/TaskModal.js\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst TaskModal = ({ task, onClose }) => {\n  return (\n    <Modal>\n      <ModalContent>\n        <CloseButton onClick={onClose}>×</CloseButton>\n        <ModalHeader>\n          <h3>{task.taskTitle}</h3>\n          <ModalDate>{formatDate(task.createdAt)}</ModalDate>\n        </ModalHeader>\n        <ModalBody>\n          <p><strong>Descrição:</strong> {task.taskDescription}</p>\n          <p><strong>Status:</strong> {task.taskStatus ? 'Concluído' : 'Pendente'}</p>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nconst Modal = styled.div`\nposition: fixed;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nbackground: rgba(0, 0, 0, 0.9); /* Fundo preto semitransparente */\ncolor: #dcdcdc;\nborder-radius: 10px;\npadding: 2rem;\nwidth: 80%;\nmax-width: 600px;\nbox-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);\n`;\n\nconst ModalContent = styled.div`\n  // Estilos aqui\n`;\n\nconst CloseButton = styled.button`\nposition: absolute;\ntop: 1rem;\nright: 1rem;\nbackground: transparent;\nborder: none;\ncolor: #dcdcdc;\nfont-size: 1.5rem;\ncursor: pointer;\ntransition: color 0.3s ease;\n\n&:hover {\n  color: #f70073; /* Cor rosa para hover */\n}\n`;\n\nconst ModalHeader = styled.div`\nmargin-bottom: 1rem;\n`;\n\nconst ModalBody = styled.div`\nargin-bottom: 1rem;\n`;\n\nconst ModalDate = styled.p`\nfont-size: 0.9rem;\ncolor: #bbb;\n`;\n\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Data não disponível.'; \n  const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\nexport default TaskModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}