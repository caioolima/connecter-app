{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\n// src/pages/UserTasksPage.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Corrigido a importação de jwt-decode\nimport { FaEllipsisV } from 'react-icons/fa'; // Importa o ícone de menu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: ''\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null); // Estado para controlar qual menu está aberto\n  const menuRef = useRef(null); // Referência para o menu\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  const handleEditClick = task => {\n    setSelectedTask(task);\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task));\n        filterTasks(tasks, filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        const updatedTask = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n        filterTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.id !== taskId));\n        filterTasks(tasks.filter(task => task.id !== taskId), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  const toggleMenu = taskId => {\n    setMenuOpen(menuOpen === taskId ? null : taskId); // Alterna o estado do menu aberto\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [\"Tarefas de \", user.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterMenu, {\n        children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('recent'),\n          active: filter === 'recent',\n          children: \"Recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('completed'),\n          active: filter === 'completed',\n          children: \"Conclu\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('pending'),\n          active: filter === 'pending',\n          children: \"Pendentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(TaskGrid, {\n        children: filteredTasks.length ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {\n              onClick: () => toggleMenu(task.id),\n              children: /*#__PURE__*/_jsxDEV(FaEllipsisV, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), menuOpen === task.id && /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleEditClick(task),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 23\n              }, this), !task.taskStatus && /*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleCompleteTask(task.id),\n                children: \"Concluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDescription, {\n            children: task.taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n            children: formatDate(task.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTasks, {\n          children: \"Nenhuma tarefa encontrada.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), modalOpen && selectedTask && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Editar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            e.preventDefault();\n            handleUpdateTask(selectedTask);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: selectedTask.taskTitle,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskTitle: e.target.value\n            }),\n            placeholder: \"T\\xEDtulo da tarefa\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: selectedTask.taskDescription,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskDescription: e.target.value\n            }),\n            placeholder: \"Descri\\xE7\\xE3o da tarefa\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => handleDeleteTask(selectedTask.id),\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: handleCloseModal,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n\n// Styled components\n_s(UserTasksPage, \"Iqtr3TQhTv+GP6+V9lDm5mi+jOE=\", false, function () {\n  return [useNavigate];\n});\n_c = UserTasksPage;\nconst Container = styled.div`\n  display: flex;\n`;\n_c2 = Container;\nconst Sidebar = styled.div`\n  width: 250px;\n  background: #f4f4f4;\n  padding: 20px;\n`;\n_c3 = Sidebar;\nconst Header = styled.h1`\n  font-size: 1.5em;\n  margin-bottom: 20px;\n`;\n_c4 = Header;\nconst FilterMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c5 = FilterMenu;\nconst FilterButton = styled.button`\n  background: ${({\n  active\n}) => active ? '#ddd' : 'transparent'};\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n  margin-bottom: 5px;\n  text-align: left;\n`;\n_c6 = FilterButton;\nconst Content = styled.div`\n  flex: 1;\n  padding: 20px;\n`;\n_c7 = Content;\nconst TaskGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n_c8 = TaskGrid;\nconst TaskCard = styled.div`\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 15px;\n  width: calc(33.333% - 20px);\n  position: relative;\n`;\n_c9 = TaskCard;\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n_c10 = CardHeader;\nconst TaskName = styled.h2`\n  font-size: 1.2em;\n`;\n_c11 = TaskName;\nconst MenuIcon = styled.div`\n  cursor: pointer;\n`;\n_c12 = MenuIcon;\nconst DropdownMenu = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 10px;\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  z-index: 10;\n`;\n_c13 = DropdownMenu;\nconst DropdownItem = styled.div`\n  padding: 10px;\n  cursor: pointer;\n  &:hover {\n    background: #f4f4f4;\n  }\n`;\n_c14 = DropdownItem;\nconst TaskDescription = styled.p`\n  margin: 0;\n`;\n_c15 = TaskDescription;\nconst TaskDate = styled.p`\n  color: #777;\n`;\n_c16 = TaskDate;\nconst NoTasks = styled.p`\n  text-align: center;\n  color: #777;\n`;\n_c17 = NoTasks;\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c18 = Modal;\nconst ModalContent = styled.div`\n  background: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  width: 500px;\n  position: relative;\n`;\n_c19 = ModalContent;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n_c20 = Form;\nconst Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n_c21 = Input;\nconst TextArea = styled.textarea`\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  height: 100px;\n`;\n_c22 = TextArea;\nconst Button = styled.button`\n  padding: 10px;\n  margin: 5px 0;\n  border: none;\n  border-radius: 4px;\n  background: #007bff;\n  color: #fff;\n  cursor: pointer;\n\n  &:hover {\n    background: #0056b3;\n  }\n`;\n_c23 = Button;\nexport default UserTasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23;\n$RefreshReg$(_c, \"UserTasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Sidebar\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"FilterMenu\");\n$RefreshReg$(_c6, \"FilterButton\");\n$RefreshReg$(_c7, \"Content\");\n$RefreshReg$(_c8, \"TaskGrid\");\n$RefreshReg$(_c9, \"TaskCard\");\n$RefreshReg$(_c10, \"CardHeader\");\n$RefreshReg$(_c11, \"TaskName\");\n$RefreshReg$(_c12, \"MenuIcon\");\n$RefreshReg$(_c13, \"DropdownMenu\");\n$RefreshReg$(_c14, \"DropdownItem\");\n$RefreshReg$(_c15, \"TaskDescription\");\n$RefreshReg$(_c16, \"TaskDate\");\n$RefreshReg$(_c17, \"NoTasks\");\n$RefreshReg$(_c18, \"Modal\");\n$RefreshReg$(_c19, \"ModalContent\");\n$RefreshReg$(_c20, \"Form\");\n$RefreshReg$(_c21, \"Input\");\n$RefreshReg$(_c22, \"TextArea\");\n$RefreshReg$(_c23, \"Button\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","useNavigate","jwtDecode","FaEllipsisV","jsxDEV","_jsxDEV","UserTasksPage","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","selectedTask","setSelectedTask","modalOpen","setModalOpen","menuOpen","setMenuOpen","menuRef","navigate","token","localStorage","getItem","decodedToken","fullName","name","capitalizeFirstLetter","split","fetchTasks","response","fetch","headers","Authorization","ok","data","json","filterTasks","console","error","statusText","length","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","sort","a","b","createdAt","task","taskStatus","handleEditClick","handleCloseModal","handleUpdateTask","updatedTask","id","method","body","JSON","stringify","updatedTaskData","map","handleCompleteTask","taskId","handleDeleteTask","toggleMenu","Container","children","Sidebar","Header","fileName","_jsxFileName","lineNumber","columnNumber","FilterMenu","FilterButton","onClick","active","Content","TaskGrid","TaskCard","CardHeader","TaskName","taskTitle","MenuIcon","DropdownMenu","ref","DropdownItem","TaskDescription","taskDescription","TaskDate","NoTasks","Modal","ModalContent","Form","onSubmit","e","preventDefault","Input","type","value","onChange","placeholder","required","TextArea","Button","_c","div","_c2","_c3","h1","_c4","_c5","button","_c6","_c7","_c8","_c9","_c10","h2","_c11","_c12","_c13","_c14","p","_c15","_c16","_c17","_c18","_c19","form","_c20","input","_c21","textarea","_c22","_c23","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["// src/pages/UserTasksPage.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Corrigido a importação de jwt-decode\nimport { FaEllipsisV } from 'react-icons/fa'; // Importa o ícone de menu\n\nconst UserTasksPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({ firstName: '', email: '' });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null); // Estado para controlar qual menu está aberto\n  const menuRef = useRef(null); // Referência para o menu\n  const navigate = useNavigate();\n  \n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setIsAuthenticated(true);\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível',\n        });\n\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: { Authorization: `Bearer ${token}` },\n            });\n\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Data não disponível.';\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n\n  const handleEditClick = (task) => {\n    setSelectedTask(task);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n\n  const handleUpdateTask = async (updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(updatedTask),\n      });\n\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task));\n        filterTasks(tasks, filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        const updatedTask = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n        filterTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.id !== taskId));\n        filterTasks(tasks.filter(task => task.id !== taskId), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n\n  const toggleMenu = (taskId) => {\n    setMenuOpen(menuOpen === taskId ? null : taskId); // Alterna o estado do menu aberto\n  };\n\n  return (\n    <Container>\n      <Sidebar>\n        <Header>Tarefas de {user.firstName}</Header>\n        <FilterMenu>\n          <FilterButton onClick={() => setFilter('recent')} active={filter === 'recent'}>Recentes</FilterButton>\n          <FilterButton onClick={() => setFilter('completed')} active={filter === 'completed'}>Concluídas</FilterButton>\n          <FilterButton onClick={() => setFilter('pending')} active={filter === 'pending'}>Pendentes</FilterButton>\n        </FilterMenu>\n      </Sidebar>\n      <Content>\n        <TaskGrid>\n          {filteredTasks.length ? (\n            filteredTasks.map((task) => (\n              <TaskCard key={task.id}>\n                <CardHeader>\n                  <TaskName>{task.taskTitle}</TaskName>\n                  <MenuIcon onClick={() => toggleMenu(task.id)}>\n                    <FaEllipsisV />\n                  </MenuIcon>\n                  {menuOpen === task.id && (\n                    <DropdownMenu ref={menuRef}>\n                      <DropdownItem onClick={() => handleEditClick(task)}>Editar</DropdownItem>\n                      {!task.taskStatus && (\n                        <DropdownItem onClick={() => handleCompleteTask(task.id)}>Concluir</DropdownItem>\n                      )}\n                    </DropdownMenu>\n                  )}\n                </CardHeader>\n                <TaskDescription>{task.taskDescription}</TaskDescription>\n                <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n              </TaskCard>\n            ))\n          ) : (\n            <NoTasks>Nenhuma tarefa encontrada.</NoTasks>\n          )}\n        </TaskGrid>\n      </Content>\n      {modalOpen && selectedTask && (\n        <Modal>\n          <ModalContent>\n            <h2>Editar Tarefa</h2>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                handleUpdateTask(selectedTask);\n              }}\n            >\n              <Input\n                type=\"text\"\n                value={selectedTask.taskTitle}\n                onChange={(e) => setSelectedTask({ ...selectedTask, taskTitle: e.target.value })}\n                placeholder=\"Título da tarefa\"\n                required\n              />\n              <TextArea\n                value={selectedTask.taskDescription}\n                onChange={(e) => setSelectedTask({ ...selectedTask, taskDescription: e.target.value })}\n                placeholder=\"Descrição da tarefa\"\n                required\n              />\n              <Button type=\"submit\">Salvar</Button>\n              <Button type=\"button\" onClick={() => handleDeleteTask(selectedTask.id)}>Excluir</Button>\n              <Button type=\"button\" onClick={handleCloseModal}>Cancelar</Button>\n            </Form>\n          </ModalContent>\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\n// Styled components\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst Sidebar = styled.div`\n  width: 250px;\n  background: #f4f4f4;\n  padding: 20px;\n`;\n\nconst Header = styled.h1`\n  font-size: 1.5em;\n  margin-bottom: 20px;\n`;\n\nconst FilterMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FilterButton = styled.button`\n  background: ${({ active }) => (active ? '#ddd' : 'transparent')};\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n  margin-bottom: 5px;\n  text-align: left;\n`;\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 20px;\n`;\n\nconst TaskGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nconst TaskCard = styled.div`\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 15px;\n  width: calc(33.333% - 20px);\n  position: relative;\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst TaskName = styled.h2`\n  font-size: 1.2em;\n`;\n\nconst MenuIcon = styled.div`\n  cursor: pointer;\n`;\n\nconst DropdownMenu = styled.div`\n  position: absolute;\n  top: 40px;\n  right: 10px;\n  background: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  z-index: 10;\n`;\n\nconst DropdownItem = styled.div`\n  padding: 10px;\n  cursor: pointer;\n  &:hover {\n    background: #f4f4f4;\n  }\n`;\n\nconst TaskDescription = styled.p`\n  margin: 0;\n`;\n\nconst TaskDate = styled.p`\n  color: #777;\n`;\n\nconst NoTasks = styled.p`\n  text-align: center;\n  color: #777;\n`;\n\nconst Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalContent = styled.div`\n  background: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  width: 500px;\n  position: relative;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n`;\n\nconst TextArea = styled.textarea`\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  height: 100px;\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  margin: 5px 0;\n  border: none;\n  border-radius: 4px;\n  background: #007bff;\n  color: #fff;\n  cursor: pointer;\n\n  &:hover {\n    background: #0056b3;\n  }\n`;\n\nexport default UserTasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}