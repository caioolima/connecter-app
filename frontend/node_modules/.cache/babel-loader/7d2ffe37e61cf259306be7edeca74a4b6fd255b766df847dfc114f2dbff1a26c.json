{"ast":null,"code":"var _s = $RefreshSig$();\n// useTasks.js\nimport { useState, useEffect, useRef } from 'react';\nimport { fetchTasks, completeTask, updateTask, deleteTask, createTask } from './api';\nexport const useTasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: ''\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        const loadTasks = async () => {\n          try {\n            const data = await fetchTasks();\n            setTasks(data);\n            filterTasks(data, filter);\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n        loadTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null); // Fecha o menu ao clicar fora\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleFilterChange = newFilter => {\n    setFilter(newFilter);\n    filterTasks(tasks, newFilter);\n  };\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      case 'all':\n        setFilteredTasks(tasks);\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      await completeTask(taskId);\n      const updatedTasks = tasks.map(task => task.id === taskId ? {\n        ...task,\n        taskStatus: true\n      } : task);\n      setTasks(updatedTasks);\n      filterTasks(updatedTasks, filter);\n      handleCloseModal();\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  const handleEditClick = task => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const updatedTaskData = await updateTask(updatedTask);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task);\n        filterTasks(updatedTasks, filter);\n        return updatedTasks;\n      });\n      handleCloseModal();\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n        filterTasks(updatedTasks, filter);\n        return updatedTasks;\n      });\n      handleCloseModal();\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  const handleAddTask = async () => {\n    if (!newTaskTitle.trim()) {\n      alert(\"O título da tarefa não pode estar vazio.\");\n      return;\n    }\n    const newTask = {\n      title: newTaskTitle,\n      description: newTaskDescription\n    };\n    try {\n      const {\n        userTask\n      } = await createTask(newTask);\n      setTasks(prevTasks => [userTask, ...prevTasks]);\n      filterTasks([userTask, ...tasks], filter);\n      handleCloseModal();\n    } catch (error) {\n      console.error('Erro ao criar tarefa:', error);\n    }\n  };\n  return {\n    tasks,\n    filteredTasks,\n    filter,\n    isAuthenticated,\n    user,\n    selectedTask,\n    modalOpen,\n    menuOpen,\n    menuRef,\n    newTaskTitle,\n    newTaskDescription,\n    setNewTaskTitle,\n    setNewTaskDescription,\n    handleFilterChange,\n    handleCompleteTask,\n    handleEditClick,\n    handleCloseModal,\n    handleUpdateTask,\n    handleDeleteTask,\n    handleAddTask\n  };\n};\n_s(useTasks, \"KIJrZdkXM9gIODDdLmY+mCoeji0=\");","map":{"version":3,"names":["useState","useEffect","useRef","fetchTasks","completeTask","updateTask","deleteTask","createTask","useTasks","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","selectedTask","setSelectedTask","modalOpen","setModalOpen","menuOpen","setMenuOpen","menuRef","newTaskTitle","setNewTaskTitle","newTaskDescription","setNewTaskDescription","token","localStorage","getItem","decodedToken","jwtDecode","fullName","name","capitalizeFirstLetter","split","loadTasks","data","filterTasks","error","console","navigate","length","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","handleFilterChange","newFilter","task","taskStatus","sort","a","b","createdAt","handleCompleteTask","taskId","updatedTasks","map","id","handleCloseModal","handleEditClick","handleUpdateTask","updatedTask","updatedTaskData","prevTasks","handleDeleteTask","handleAddTask","trim","alert","newTask","title","description","userTask"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Tasks/useTasks.js"],"sourcesContent":["// useTasks.js\nimport { useState, useEffect, useRef } from 'react';\nimport { fetchTasks, completeTask, updateTask, deleteTask, createTask } from './api';\n\nexport const useTasks = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({ firstName: '', email: '' });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setIsAuthenticated(true);\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível',\n        });\n\n        const loadTasks = async () => {\n          try {\n            const data = await fetchTasks();\n            setTasks(data);\n            filterTasks(data, filter);\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n\n        loadTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(null); // Fecha o menu ao clicar fora\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Data não disponível.';\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const handleFilterChange = (newFilter) => {\n    setFilter(newFilter);\n    filterTasks(tasks, newFilter);\n  };\n\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].filter(task => !task.taskStatus).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      case 'all':\n        setFilteredTasks(tasks);\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      await completeTask(taskId);\n      const updatedTasks = tasks.map(task =>\n        task.id === taskId ? { ...task, taskStatus: true } : task\n      );\n      setTasks(updatedTasks);\n      filterTasks(updatedTasks, filter);\n      handleCloseModal();\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n\n  const handleEditClick = (task) => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n\n  const handleUpdateTask = async (updatedTask) => {\n    try {\n      const updatedTaskData = await updateTask(updatedTask);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.map(task =>\n          task.id === updatedTaskData.id ? updatedTaskData : task\n        );\n        filterTasks(updatedTasks, filter);\n        return updatedTasks;\n      });\n      handleCloseModal();\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      await deleteTask(taskId);\n      setTasks(prevTasks => {\n        const updatedTasks = prevTasks.filter(task => task.id !== taskId);\n        filterTasks(updatedTasks, filter);\n        return updatedTasks;\n      });\n      handleCloseModal();\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n\n  const handleAddTask = async () => {\n    if (!newTaskTitle.trim()) {\n      alert(\"O título da tarefa não pode estar vazio.\");\n      return;\n    }\n\n    const newTask = {\n      title: newTaskTitle,\n      description: newTaskDescription,\n    };\n\n    try {\n      const { userTask } = await createTask(newTask);\n      setTasks(prevTasks => [userTask, ...prevTasks]);\n      filterTasks([userTask, ...tasks], filter);\n      handleCloseModal();\n    } catch (error) {\n      console.error('Erro ao criar tarefa:', error);\n    }\n  };\n\n  return {\n    tasks,\n    filteredTasks,\n    filter,\n    isAuthenticated,\n    user,\n    selectedTask,\n    modalOpen,\n    menuOpen,\n    menuRef,\n    newTaskTitle,\n    newTaskDescription,\n    setNewTaskTitle,\n    setNewTaskDescription,\n    handleFilterChange,\n    handleCompleteTask,\n    handleEditClick,\n    handleCloseModal,\n    handleUpdateTask,\n    handleDeleteTask,\n    handleAddTask,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}