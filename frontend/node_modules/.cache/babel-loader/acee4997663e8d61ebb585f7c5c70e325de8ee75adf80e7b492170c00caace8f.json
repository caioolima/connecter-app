{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: ''\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n  useEffect(() => {\n    if (menuOpen) {\n      setMenuOpen(null); // Fecha o menu ao atualizar a lista de tarefas\n    }\n  }, [tasks]);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Data não disponível.';\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n  const handleEditClick = task => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n  const handleUpdateTask = async updatedTask => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task));\n        filterTasks(tasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        const updatedTask = await response.json();\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task => task.id === updatedTask.id ? updatedTask : task);\n          filterTasks(updatedTasks, filter); // Atualiza a lista filtrada\n          return updatedTasks;\n        });\n        handleCloseModal();\n        setMenuOpen(null); // Fecha o menu\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.id !== taskId));\n        filterTasks(tasks.filter(task => task.id !== taskId), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(false); // Fecha o menu ao clicar fora\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const toggleMenu = taskId => {\n    setMenuOpen(prev => prev === taskId ? null : taskId);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [\"Tarefas de \", user.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterMenu, {\n        children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('recent'),\n          active: filter === 'recent',\n          children: \"Recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('completed'),\n          active: filter === 'completed',\n          children: \"Conclu\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n          onClick: () => setFilter('pending'),\n          active: filter === 'pending',\n          children: \"Pendentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(TaskGrid, {\n        children: filteredTasks.length ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuIcon, {\n              onClick: () => toggleMenu(task.id),\n              children: /*#__PURE__*/_jsxDEV(FaEllipsisV, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this), menuOpen === task.id && /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleEditClick(task),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 23\n              }, this), !task.taskStatus && /*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleCompleteTask(task.id),\n                children: \"Concluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDescription, {\n            children: task.taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n            children: formatDate(task.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(NoTasks, {\n          children: \"Nenhuma tarefa encontrada.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), modalOpen && selectedTask && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Editar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            e.preventDefault();\n            handleUpdateTask(selectedTask);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            value: selectedTask.taskTitle,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskTitle: e.target.value\n            }),\n            placeholder: \"T\\xEDtulo da tarefa\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            value: selectedTask.taskDescription,\n            onChange: e => setSelectedTask({\n              ...selectedTask,\n              taskDescription: e.target.value\n            }),\n            placeholder: \"Descri\\xE7\\xE3o da tarefa\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: () => handleDeleteTask(selectedTask.id),\n            children: \"Excluir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: handleCloseModal,\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(UserTasksPage, \"5XwjOab8MTqWsy+TVG6oVzyHTIA=\", false, function () {\n  return [useNavigate];\n});\n_c = UserTasksPage;\nexport default UserTasksPage;\nvar _c;\n$RefreshReg$(_c, \"UserTasksPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","useNavigate","jwtDecode","FaEllipsisV","jsxDEV","_jsxDEV","UserTasksPage","_s","tasks","setTasks","filteredTasks","setFilteredTasks","filter","setFilter","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","selectedTask","setSelectedTask","modalOpen","setModalOpen","menuOpen","setMenuOpen","menuRef","navigate","token","localStorage","getItem","decodedToken","fullName","name","capitalizeFirstLetter","split","fetchTasks","response","fetch","headers","Authorization","ok","data","json","filterTasks","console","error","statusText","length","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","sort","a","b","createdAt","task","taskStatus","handleEditClick","handleCloseModal","handleUpdateTask","updatedTask","id","method","body","JSON","stringify","updatedTaskData","map","handleCompleteTask","taskId","prevTasks","updatedTasks","handleDeleteTask","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","toggleMenu","prev","Container","children","Sidebar","Header","fileName","_jsxFileName","lineNumber","columnNumber","FilterMenu","FilterButton","onClick","active","Content","TaskGrid","TaskCard","CardHeader","TaskName","taskTitle","MenuIcon","DropdownMenu","ref","DropdownItem","TaskDescription","taskDescription","TaskDate","NoTasks","Modal","ModalContent","Form","onSubmit","e","preventDefault","Input","type","value","onChange","placeholder","required","TextArea","Button","_c","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { FaEllipsisV } from 'react-icons/fa';\n\nconst UserTasksPage = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [filter, setFilter] = useState('recent');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({ firstName: '', email: '' });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(null);\n  const menuRef = useRef(null);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setIsAuthenticated(true);\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível',\n        });\n\n        const fetchTasks = async () => {\n          try {\n            const response = await fetch('http://localhost:5000/api/tasks/', {\n              headers: { Authorization: `Bearer ${token}` },\n            });\n\n            if (response.ok) {\n              const data = await response.json();\n              setTasks(data);\n              filterTasks(data, filter);\n            } else {\n              console.error('Erro ao carregar tarefas:', response.statusText);\n            }\n          } catch (error) {\n            console.error('Erro ao carregar tarefas:', error);\n          }\n        };\n\n        fetchTasks();\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate, filter]);\n\n  useEffect(() => {\n    if (tasks.length) {\n      filterTasks(tasks, filter);\n    }\n  }, [tasks, filter]);\n\n  useEffect(() => {\n    if (menuOpen) {\n      setMenuOpen(null); // Fecha o menu ao atualizar a lista de tarefas\n    }\n  }, [tasks]);\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Data não disponível.';\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const filterTasks = (tasks, filter) => {\n    switch (filter) {\n      case 'recent':\n        setFilteredTasks([...tasks].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n        break;\n      case 'completed':\n        setFilteredTasks(tasks.filter(task => task.taskStatus));\n        break;\n      case 'pending':\n        setFilteredTasks(tasks.filter(task => !task.taskStatus));\n        break;\n      default:\n        setFilteredTasks(tasks);\n    }\n  };\n\n  const handleEditClick = (task) => {\n    setSelectedTask(task);\n    setModalOpen(true);\n    setMenuOpen(null); // Fecha o menu ao clicar em editar\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedTask(null);\n  };\n\n  const handleUpdateTask = async (updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${updatedTask.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(updatedTask),\n      });\n\n      if (response.ok) {\n        const updatedTaskData = await response.json();\n        setTasks(tasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task));\n        filterTasks(tasks.map(task => task.id === updatedTaskData.id ? updatedTaskData : task), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao atualizar tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        const updatedTask = await response.json();\n        setTasks(prevTasks => {\n          const updatedTasks = prevTasks.map(task =>\n            task.id === updatedTask.id ? updatedTask : task\n          );\n          filterTasks(updatedTasks, filter); // Atualiza a lista filtrada\n          return updatedTasks;\n        });\n        handleCloseModal();\n        setMenuOpen(null); // Fecha o menu\n      } else {\n        console.error('Erro ao marcar tarefa como concluída:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao marcar tarefa como concluída:', error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        setTasks(tasks.filter(task => task.id !== taskId));\n        filterTasks(tasks.filter(task => task.id !== taskId), filter);\n        handleCloseModal();\n      } else {\n        console.error('Erro ao excluir tarefa:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao excluir tarefa:', error);\n    }\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuOpen(false); // Fecha o menu ao clicar fora\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const toggleMenu = (taskId) => {\n    setMenuOpen((prev) => (prev === taskId ? null : taskId));\n  };\n\n  return (\n    <Container>\n      <Sidebar>\n        <Header>Tarefas de {user.firstName}</Header>\n        <FilterMenu>\n          <FilterButton onClick={() => setFilter('recent')} active={filter === 'recent'}>Recentes</FilterButton>\n          <FilterButton onClick={() => setFilter('completed')} active={filter === 'completed'}>Concluídas</FilterButton>\n          <FilterButton onClick={() => setFilter('pending')} active={filter === 'pending'}>Pendentes</FilterButton>\n        </FilterMenu>\n      </Sidebar>\n      <Content>\n        <TaskGrid>\n          {filteredTasks.length ? (\n            filteredTasks.map((task) => (\n              <TaskCard key={task.id}>\n                <CardHeader>\n                  <TaskName>{task.taskTitle}</TaskName>\n                  <MenuIcon onClick={() => toggleMenu(task.id)}>\n                    <FaEllipsisV />\n                  </MenuIcon>\n                  {menuOpen === task.id && (\n                    <DropdownMenu ref={menuRef}>\n                      <DropdownItem onClick={() => handleEditClick(task)}>Editar</DropdownItem>\n                      {!task.taskStatus && (\n                        <DropdownItem onClick={() => handleCompleteTask(task.id)}>Concluir</DropdownItem>\n                      )}\n                    </DropdownMenu>\n                  )}\n                </CardHeader>\n                <TaskDescription>{task.taskDescription}</TaskDescription>\n                <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n              </TaskCard>\n            ))\n          ) : (\n            <NoTasks>Nenhuma tarefa encontrada.</NoTasks>\n          )}\n        </TaskGrid>\n      </Content>\n      {modalOpen && selectedTask && (\n        <Modal>\n          <ModalContent>\n            <h2>Editar Tarefa</h2>\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                handleUpdateTask(selectedTask);\n              }}\n            >\n              <Input\n                type=\"text\"\n                value={selectedTask.taskTitle}\n                onChange={(e) => setSelectedTask({ ...selectedTask, taskTitle: e.target.value })}\n                placeholder=\"Título da tarefa\"\n                required\n              />\n              <TextArea\n                value={selectedTask.taskDescription}\n                onChange={(e) => setSelectedTask({ ...selectedTask, taskDescription: e.target.value })}\n                placeholder=\"Descrição da tarefa\"\n                required\n              />\n              <Button type=\"submit\">Salvar</Button>\n              <Button type=\"button\" onClick={() => handleDeleteTask(selectedTask.id)}>Excluir</Button>\n              <Button type=\"button\" onClick={handleCloseModal}>Fechar</Button>\n            </Form>\n          </ModalContent>\n        </Modal>\n      )}\n    </Container>\n  );\n};\n\nexport default UserTasksPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,QAAQ,CAAC;EAC9C,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC;IAAEoB,SAAS,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC9D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM4B,OAAO,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAM4B,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACd,MAAM+B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACTb,kBAAkB,CAAC,IAAI,CAAC;MAExB,IAAI;QACF,MAAMgB,YAAY,GAAG7B,SAAS,CAAC0B,KAAK,CAAC;QACrC,MAAMI,QAAQ,GAAGD,YAAY,CAACE,IAAI,IAAI,qBAAqB;QAC3D,MAAMf,SAAS,GAAGgB,qBAAqB,CAACF,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/DlB,OAAO,CAAC;UACNC,SAAS;UACTC,KAAK,EAAEY,YAAY,CAACZ,KAAK,IAAI;QAC/B,CAAC,CAAC;QAEF,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;UAC7B,IAAI;YACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;cAC/DC,OAAO,EAAE;gBAAEC,aAAa,EAAE,UAAUZ,KAAK;cAAG;YAC9C,CAAC,CAAC;YAEF,IAAIS,QAAQ,CAACI,EAAE,EAAE;cACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;cAClClC,QAAQ,CAACiC,IAAI,CAAC;cACdE,WAAW,CAACF,IAAI,EAAE9B,MAAM,CAAC;YAC3B,CAAC,MAAM;cACLiC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAET,QAAQ,CAACU,UAAU,CAAC;YACjE;UACF,CAAC,CAAC,OAAOD,KAAK,EAAE;YACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;UACnD;QACF,CAAC;QAEDV,UAAU,CAAC,CAAC;MACd,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC,MAAM;MACLnB,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEf,MAAM,CAAC,CAAC;EAEtBf,SAAS,CAAC,MAAM;IACd,IAAIW,KAAK,CAACwC,MAAM,EAAE;MAChBJ,WAAW,CAACpC,KAAK,EAAEI,MAAM,CAAC;IAC5B;EACF,CAAC,EAAE,CAACJ,KAAK,EAAEI,MAAM,CAAC,CAAC;EAEnBf,SAAS,CAAC,MAAM;IACd,IAAI2B,QAAQ,EAAE;MACZC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACjB,KAAK,CAAC,CAAC;EAEX,MAAM0B,qBAAqB,GAAIe,MAAM,IAAK;IACxC,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,MAAMC,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,sBAAsB;IAC9C,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC;IACtG,OAAO,IAAIC,IAAI,CAACP,UAAU,CAAC,CAACQ,kBAAkB,CAACC,SAAS,EAAER,OAAO,CAAC;EACpE,CAAC;EAED,MAAMX,WAAW,GAAGA,CAACpC,KAAK,EAAEI,MAAM,KAAK;IACrC,QAAQA,MAAM;MACZ,KAAK,QAAQ;QACXD,gBAAgB,CAAC,CAAC,GAAGH,KAAK,CAAC,CAACwD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIL,IAAI,CAACK,CAAC,CAACC,SAAS,CAAC,GAAG,IAAIN,IAAI,CAACI,CAAC,CAACE,SAAS,CAAC,CAAC,CAAC;QAC1F;MACF,KAAK,WAAW;QACdxD,gBAAgB,CAACH,KAAK,CAACI,MAAM,CAACwD,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,CAAC;QACvD;MACF,KAAK,SAAS;QACZ1D,gBAAgB,CAACH,KAAK,CAACI,MAAM,CAACwD,IAAI,IAAI,CAACA,IAAI,CAACC,UAAU,CAAC,CAAC;QACxD;MACF;QACE1D,gBAAgB,CAACH,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,MAAM8D,eAAe,GAAIF,IAAI,IAAK;IAChC/C,eAAe,CAAC+C,IAAI,CAAC;IACrB7C,YAAY,CAAC,IAAI,CAAC;IAClBE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAM8C,gBAAgB,GAAGA,CAAA,KAAM;IAC7BhD,YAAY,CAAC,KAAK,CAAC;IACnBF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMmD,gBAAgB,GAAG,MAAOC,WAAW,IAAK;IAC9C,IAAI;MACF,MAAMpC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCmC,WAAW,CAACC,EAAE,EAAE,EAAE;QAChFC,MAAM,EAAE,KAAK;QACbpC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD,CAAC;QACD8C,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;MAClC,CAAC,CAAC;MAEF,IAAIpC,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMsC,eAAe,GAAG,MAAM1C,QAAQ,CAACM,IAAI,CAAC,CAAC;QAC7ClC,QAAQ,CAACD,KAAK,CAACwE,GAAG,CAACZ,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKK,eAAe,CAACL,EAAE,GAAGK,eAAe,GAAGX,IAAI,CAAC,CAAC;QACpFxB,WAAW,CAACpC,KAAK,CAACwE,GAAG,CAACZ,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKK,eAAe,CAACL,EAAE,GAAGK,eAAe,GAAGX,IAAI,CAAC,EAAExD,MAAM,CAAC;QAC/F2D,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM;QACL1B,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAET,QAAQ,CAACU,UAAU,CAAC;MACjE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMmC,kBAAkB,GAAG,MAAOC,MAAM,IAAK;IAC3C,IAAI;MACF,MAAM7C,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC4C,MAAM,WAAW,EAAE;QACjFP,MAAM,EAAE,OAAO;QACfpC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACI,EAAE,EAAE;QACf,MAAMgC,WAAW,GAAG,MAAMpC,QAAQ,CAACM,IAAI,CAAC,CAAC;QACzClC,QAAQ,CAAC0E,SAAS,IAAI;UACpB,MAAMC,YAAY,GAAGD,SAAS,CAACH,GAAG,CAACZ,IAAI,IACrCA,IAAI,CAACM,EAAE,KAAKD,WAAW,CAACC,EAAE,GAAGD,WAAW,GAAGL,IAC7C,CAAC;UACDxB,WAAW,CAACwC,YAAY,EAAExE,MAAM,CAAC,CAAC,CAAC;UACnC,OAAOwE,YAAY;QACrB,CAAC,CAAC;QACFb,gBAAgB,CAAC,CAAC;QAClB9C,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACLoB,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAET,QAAQ,CAACU,UAAU,CAAC;MAC7E;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF,CAAC;EAED,MAAMuC,gBAAgB,GAAG,MAAOH,MAAM,IAAK;IACzC,IAAI;MACF,MAAM7C,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC4C,MAAM,EAAE,EAAE;QACxEP,MAAM,EAAE,QAAQ;QAChBpC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACI,EAAE,EAAE;QACfhC,QAAQ,CAACD,KAAK,CAACI,MAAM,CAACwD,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKQ,MAAM,CAAC,CAAC;QAClDtC,WAAW,CAACpC,KAAK,CAACI,MAAM,CAACwD,IAAI,IAAIA,IAAI,CAACM,EAAE,KAAKQ,MAAM,CAAC,EAAEtE,MAAM,CAAC;QAC7D2D,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM;QACL1B,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAET,QAAQ,CAACU,UAAU,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAEDjD,SAAS,CAAC,MAAM;IACd,MAAMyF,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAI7D,OAAO,CAAC8D,OAAO,IAAI,CAAC9D,OAAO,CAAC8D,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QAC9DjE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;MACtB;IACF,CAAC;IAEDkE,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAMK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,UAAU,GAAIZ,MAAM,IAAK;IAC7BzD,WAAW,CAAEsE,IAAI,IAAMA,IAAI,KAAKb,MAAM,GAAG,IAAI,GAAGA,MAAO,CAAC;EAC1D,CAAC;EAED,oBACE7E,OAAA,CAAC2F,SAAS;IAAAC,QAAA,gBACR5F,OAAA,CAAC6F,OAAO;MAAAD,QAAA,gBACN5F,OAAA,CAAC8F,MAAM;QAAAF,QAAA,GAAC,aAAW,EAACjF,IAAI,CAACE,SAAS;MAAA;QAAAkF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC5ClG,OAAA,CAACmG,UAAU;QAAAP,QAAA,gBACT5F,OAAA,CAACoG,YAAY;UAACC,OAAO,EAAEA,CAAA,KAAM7F,SAAS,CAAC,QAAQ,CAAE;UAAC8F,MAAM,EAAE/F,MAAM,KAAK,QAAS;UAAAqF,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eACtGlG,OAAA,CAACoG,YAAY;UAACC,OAAO,EAAEA,CAAA,KAAM7F,SAAS,CAAC,WAAW,CAAE;UAAC8F,MAAM,EAAE/F,MAAM,KAAK,WAAY;UAAAqF,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eAC9GlG,OAAA,CAACoG,YAAY;UAACC,OAAO,EAAEA,CAAA,KAAM7F,SAAS,CAAC,SAAS,CAAE;UAAC8F,MAAM,EAAE/F,MAAM,KAAK,SAAU;UAAAqF,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACVlG,OAAA,CAACuG,OAAO;MAAAX,QAAA,eACN5F,OAAA,CAACwG,QAAQ;QAAAZ,QAAA,EACNvF,aAAa,CAACsC,MAAM,GACnBtC,aAAa,CAACsE,GAAG,CAAEZ,IAAI,iBACrB/D,OAAA,CAACyG,QAAQ;UAAAb,QAAA,gBACP5F,OAAA,CAAC0G,UAAU;YAAAd,QAAA,gBACT5F,OAAA,CAAC2G,QAAQ;cAAAf,QAAA,EAAE7B,IAAI,CAAC6C;YAAS;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACrClG,OAAA,CAAC6G,QAAQ;cAACR,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAAC1B,IAAI,CAACM,EAAE,CAAE;cAAAuB,QAAA,eAC3C5F,OAAA,CAACF,WAAW;gBAAAiG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC,EACV/E,QAAQ,KAAK4C,IAAI,CAACM,EAAE,iBACnBrE,OAAA,CAAC8G,YAAY;cAACC,GAAG,EAAE1F,OAAQ;cAAAuE,QAAA,gBACzB5F,OAAA,CAACgH,YAAY;gBAACX,OAAO,EAAEA,CAAA,KAAMpC,eAAe,CAACF,IAAI,CAAE;gBAAA6B,QAAA,EAAC;cAAM;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAc,CAAC,EACxE,CAACnC,IAAI,CAACC,UAAU,iBACfhE,OAAA,CAACgH,YAAY;gBAACX,OAAO,EAAEA,CAAA,KAAMzB,kBAAkB,CAACb,IAAI,CAACM,EAAE,CAAE;gBAAAuB,QAAA,EAAC;cAAQ;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAc,CACjF;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACW,CACf;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACS,CAAC,eACblG,OAAA,CAACiH,eAAe;YAAArB,QAAA,EAAE7B,IAAI,CAACmD;UAAe;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CAAC,eACzDlG,OAAA,CAACmH,QAAQ;YAAAvB,QAAA,EAAE5C,UAAU,CAACe,IAAI,CAACD,SAAS;UAAC;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC;QAAA,GAhBpCnC,IAAI,CAACM,EAAE;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiBZ,CACX,CAAC,gBAEFlG,OAAA,CAACoH,OAAO;UAAAxB,QAAA,EAAC;QAA0B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAC7C;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACTjF,SAAS,IAAIF,YAAY,iBACxBf,OAAA,CAACqH,KAAK;MAAAzB,QAAA,eACJ5F,OAAA,CAACsH,YAAY;QAAA1B,QAAA,gBACX5F,OAAA;UAAA4F,QAAA,EAAI;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBlG,OAAA,CAACuH,IAAI;UACHC,QAAQ,EAAGC,CAAC,IAAK;YACfA,CAAC,CAACC,cAAc,CAAC,CAAC;YAClBvD,gBAAgB,CAACpD,YAAY,CAAC;UAChC,CAAE;UAAA6E,QAAA,gBAEF5F,OAAA,CAAC2H,KAAK;YACJC,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE9G,YAAY,CAAC6F,SAAU;YAC9BkB,QAAQ,EAAGL,CAAC,IAAKzG,eAAe,CAAC;cAAE,GAAGD,YAAY;cAAE6F,SAAS,EAAEa,CAAC,CAACpC,MAAM,CAACwC;YAAM,CAAC,CAAE;YACjFE,WAAW,EAAC,qBAAkB;YAC9BC,QAAQ;UAAA;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFlG,OAAA,CAACiI,QAAQ;YACPJ,KAAK,EAAE9G,YAAY,CAACmG,eAAgB;YACpCY,QAAQ,EAAGL,CAAC,IAAKzG,eAAe,CAAC;cAAE,GAAGD,YAAY;cAAEmG,eAAe,EAAEO,CAAC,CAACpC,MAAM,CAACwC;YAAM,CAAC,CAAE;YACvFE,WAAW,EAAC,2BAAqB;YACjCC,QAAQ;UAAA;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFlG,OAAA,CAACkI,MAAM;YAACN,IAAI,EAAC,QAAQ;YAAAhC,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrClG,OAAA,CAACkI,MAAM;YAACN,IAAI,EAAC,QAAQ;YAACvB,OAAO,EAAEA,CAAA,KAAMrB,gBAAgB,CAACjE,YAAY,CAACsD,EAAE,CAAE;YAAAuB,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxFlG,OAAA,CAACkI,MAAM;YAACN,IAAI,EAAC,QAAQ;YAACvB,OAAO,EAAEnC,gBAAiB;YAAA0B,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAChG,EAAA,CAxQID,aAAa;EAAA,QAWAL,WAAW;AAAA;AAAAuI,EAAA,GAXxBlI,aAAa;AA0QnB,eAAeA,aAAa;AAAC,IAAAkI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}