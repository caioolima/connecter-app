{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\n\n// Hook personalizado para detectar cliques fora de um elemento\nconst useOnClickOutside = handler => {\n  _s();\n  // Referência para o elemento alvo\n  const ref = useRef();\n  useEffect(() => {\n    // Função que será chamada quando um clique fora do elemento for detectado\n    const listener = event => {\n      // Verifica se o clique ocorreu fora do elemento referenciado\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      // Chama o manipulador passado como argumento se o clique foi fora\n      handler();\n    };\n\n    // Adiciona os ouvintes de eventos para detectar cliques\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    // Limpa os ouvintes de eventos quando o componente é desmontado ou o handler muda\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [handler]); // Reexecuta o efeito apenas se o handler mudar\n\n  // Retorna a referência para o elemento alvo\n  return ref;\n};\n_s(useOnClickOutside, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nexport default useOnClickOutside;","map":{"version":3,"names":["useEffect","useRef","useOnClickOutside","handler","_s","ref","listener","event","current","contains","target","document","addEventListener","removeEventListener"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/hooks/useClickOutside.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// Hook personalizado para detectar cliques fora de um elemento\nconst useOnClickOutside = (handler) => {\n  // Referência para o elemento alvo\n  const ref = useRef();\n\n  useEffect(() => {\n    // Função que será chamada quando um clique fora do elemento for detectado\n    const listener = (event) => {\n      // Verifica se o clique ocorreu fora do elemento referenciado\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      // Chama o manipulador passado como argumento se o clique foi fora\n      handler();\n    };\n\n    // Adiciona os ouvintes de eventos para detectar cliques\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    // Limpa os ouvintes de eventos quando o componente é desmontado ou o handler muda\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [handler]); // Reexecuta o efeito apenas se o handler mudar\n\n  // Retorna a referência para o elemento alvo\n  return ref;\n};\n\nexport default useOnClickOutside;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAEzC;AACA,MAAMC,iBAAiB,GAAIC,OAAO,IAAK;EAAAC,EAAA;EACrC;EACA,MAAMC,GAAG,GAAGJ,MAAM,CAAC,CAAC;EAEpBD,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,QAAQ,GAAIC,KAAK,IAAK;MAC1B;MACA,IAAI,CAACF,GAAG,CAACG,OAAO,IAAIH,GAAG,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACtD;MACF;MACA;MACAP,OAAO,CAAC,CAAC;IACX,CAAC;;IAED;IACAQ,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,QAAQ,CAAC;IAChDK,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAEN,QAAQ,CAAC;;IAEjD;IACA,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,QAAQ,CAAC;MACnDK,QAAQ,CAACE,mBAAmB,CAAC,YAAY,EAAEP,QAAQ,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf;EACA,OAAOE,GAAG;AACZ,CAAC;AAACD,EAAA,CA5BIF,iBAAiB;AA8BvB,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}