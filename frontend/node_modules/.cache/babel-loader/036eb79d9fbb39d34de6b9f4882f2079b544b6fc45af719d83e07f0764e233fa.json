{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/PrivateRoute.js\",\n  _s = $RefreshSig$();\n// components/PrivateRoute.js\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useAuth } from \"./Context/AuthContext\"; // Ajuste o caminho conforme necessário\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    username\n  } = useAuth(); // Obtém o username do contexto\n  const token = localStorage.getItem(\"token\"); // Obtém o token do localStorage\n\n  // Verifica se o usuário está autenticado\n  const isAuthentication = !!token;\n\n  // Redireciona para a página inicial se o usuário não estiver autenticado e tentar acessar /user-data\n  if (!isAuthentication && window.location.pathname === \"/user-tasks\") {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Permite acesso a todas as rotas se o usuário estiver autenticado\n  if (isAuthentication) {\n    return children;\n  }\n\n  // Redireciona para a página de login se o usuário não estiver autenticado e tentar acessar outras rotas\n  return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n_s(PrivateRoute, \"f8fUjET2tjxQzXR/8OvE8ObKMXs=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","PrivateRoute","children","_s","username","token","localStorage","getItem","isAuthentication","window","location","pathname","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/PrivateRoute.js"],"sourcesContent":["// components/PrivateRoute.js\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport {useAuth } from \"./Context/AuthContext\"; // Ajuste o caminho conforme necessário\n\nconst PrivateRoute = ({ children }) => {\n    const { username } = useAuth(); // Obtém o username do contexto\n    const token = localStorage.getItem(\"token\"); // Obtém o token do localStorage\n\n    // Verifica se o usuário está autenticado\n    const isAuthentication = !!token;\n\n    // Redireciona para a página inicial se o usuário não estiver autenticado e tentar acessar /user-data\n    if (!isAuthentication && window.location.pathname === \"/user-tasks\") {\n        return <Navigate to=\"/login\" replace />;\n    }\n\n    // Permite acesso a todas as rotas se o usuário estiver autenticado\n    if (isAuthentication) {\n        return children;\n    }\n\n    // Redireciona para a página de login se o usuário não estiver autenticado e tentar acessar outras rotas\n    return <Navigate to=\"/login\" replace />;\n};\n\nexport default PrivateRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAAQC,OAAO,QAAQ,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAS,CAAC,GAAGN,OAAO,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE7C;EACA,MAAMC,gBAAgB,GAAG,CAAC,CAACH,KAAK;;EAEhC;EACA,IAAI,CAACG,gBAAgB,IAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,aAAa,EAAE;IACjE,oBAAOX,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;;EAEA;EACA,IAAIT,gBAAgB,EAAE;IAClB,OAAON,QAAQ;EACnB;;EAEA;EACA,oBAAOF,OAAA,CAACH,QAAQ;IAACe,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C,CAAC;AAACd,EAAA,CAnBIF,YAAY;EAAA,QACOH,OAAO;AAAA;AAAAoB,EAAA,GAD1BjB,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}