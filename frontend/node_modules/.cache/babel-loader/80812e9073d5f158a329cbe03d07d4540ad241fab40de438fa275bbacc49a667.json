{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Login/Input.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\n// Componente funcional Input\n// Este componente renderiza um campo de entrada estilizado com styled-components.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  name,\n  type,\n  placeholder,\n  value,\n  onChange,\n  autoFocus\n}) => /*#__PURE__*/_jsxDEV(StyledInput, {\n  name: name // Nome do campo de entrada\n  ,\n  type: type // Tipo do campo de entrada, ex: \"text\", \"password\"\n  ,\n  placeholder: placeholder // Texto a ser exibido quando o campo estiver vazio\n  ,\n  value: value // Valor atual do campo de entrada\n  ,\n  onChange: onChange // Função de callback chamada quando o valor do campo muda\n  ,\n  autoFocus: autoFocus // Define se o campo deve receber foco automaticamente ao renderizar\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n// Estilização do componente StyledInput usando styled-components\n_c = Input;\nconst StyledInput = styled.input`\n  width: 70%;                     // Largura do campo de entrada\n  padding: 1.2rem;                // Espaçamento interno do campo\n  padding-right: 3.5rem;         // Espaçamento interno à direita (para espaço para ícones ou outros elementos)\n  border: 1px solid #a4a4ad;     // Cor e estilo da borda do campo de entrada\n  border-radius: 12px;           // Arredondamento das bordas\n  font-size: 1rem;               // Tamanho da fonte\n  color: #fff;                   // Cor do texto\n  background-color: #333;        // Cor de fundo do campo de entrada\n  transition:                    // Efeitos de transição para mudanças de estilo\n    border-color 0.3s,            // Transição suave para a cor da borda\n    box-shadow 0.3s;              // Transição suave para a sombra da caixa\n\n  &:focus {\n    border-color: #ea4f97;       // Cor da borda quando o campo está em foco\n    box-shadow: 0 0 0 2px rgba(234, 79, 151, 0.2); // Sombra ao redor do campo quando em foco\n    outline: none;               // Remove a borda de foco padrão do navegador\n  }\n`;\n\n// Definindo as propriedades esperadas e seus tipos para o componente Input\n_c2 = StyledInput;\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  // Nome do campo de entrada (obrigatório)\n  type: PropTypes.string.isRequired,\n  // Tipo do campo de entrada (obrigatório)\n  placeholder: PropTypes.string.isRequired,\n  // Texto de placeholder (obrigatório)\n  value: PropTypes.string.isRequired,\n  // Valor do campo de entrada (obrigatório)\n  onChange: PropTypes.func.isRequired,\n  // Função chamada quando o valor muda (obrigatório)\n  autoFocus: PropTypes.bool // Se o campo deve receber foco automaticamente (opcional)\n};\n\n// Definindo o valor padrão para a propriedade autoFocus\nInput.defaultProps = {\n  autoFocus: false\n};\nexport default Input;\nvar _c, _c2;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"StyledInput\");","map":{"version":3,"names":["React","styled","PropTypes","jsxDEV","_jsxDEV","Input","name","type","placeholder","value","onChange","autoFocus","StyledInput","fileName","_jsxFileName","lineNumber","columnNumber","_c","input","_c2","propTypes","string","isRequired","func","bool","defaultProps","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Login/Input.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\n// Componente funcional Input\n// Este componente renderiza um campo de entrada estilizado com styled-components.\nconst Input = ({ name, type, placeholder, value, onChange, autoFocus }) => (\n  <StyledInput\n    name={name}             // Nome do campo de entrada\n    type={type}             // Tipo do campo de entrada, ex: \"text\", \"password\"\n    placeholder={placeholder} // Texto a ser exibido quando o campo estiver vazio\n    value={value}           // Valor atual do campo de entrada\n    onChange={onChange}     // Função de callback chamada quando o valor do campo muda\n    autoFocus={autoFocus}   // Define se o campo deve receber foco automaticamente ao renderizar\n  />\n);\n\n// Estilização do componente StyledInput usando styled-components\nconst StyledInput = styled.input`\n  width: 70%;                     // Largura do campo de entrada\n  padding: 1.2rem;                // Espaçamento interno do campo\n  padding-right: 3.5rem;         // Espaçamento interno à direita (para espaço para ícones ou outros elementos)\n  border: 1px solid #a4a4ad;     // Cor e estilo da borda do campo de entrada\n  border-radius: 12px;           // Arredondamento das bordas\n  font-size: 1rem;               // Tamanho da fonte\n  color: #fff;                   // Cor do texto\n  background-color: #333;        // Cor de fundo do campo de entrada\n  transition:                    // Efeitos de transição para mudanças de estilo\n    border-color 0.3s,            // Transição suave para a cor da borda\n    box-shadow 0.3s;              // Transição suave para a sombra da caixa\n\n  &:focus {\n    border-color: #ea4f97;       // Cor da borda quando o campo está em foco\n    box-shadow: 0 0 0 2px rgba(234, 79, 151, 0.2); // Sombra ao redor do campo quando em foco\n    outline: none;               // Remove a borda de foco padrão do navegador\n  }\n`;\n\n// Definindo as propriedades esperadas e seus tipos para o componente Input\nInput.propTypes = {\n  name: PropTypes.string.isRequired,       // Nome do campo de entrada (obrigatório)\n  type: PropTypes.string.isRequired,       // Tipo do campo de entrada (obrigatório)\n  placeholder: PropTypes.string.isRequired, // Texto de placeholder (obrigatório)\n  value: PropTypes.string.isRequired,       // Valor do campo de entrada (obrigatório)\n  onChange: PropTypes.func.isRequired,      // Função chamada quando o valor muda (obrigatório)\n  autoFocus: PropTypes.bool,                // Se o campo deve receber foco automaticamente (opcional)\n};\n\n// Definindo o valor padrão para a propriedade autoFocus\nInput.defaultProps = {\n  autoFocus: false,\n};\n\nexport default Input;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,WAAW;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAU,CAAC,kBACpEP,OAAA,CAACQ,WAAW;EACVN,IAAI,EAAEA,IAAK,CAAa;EAAA;EACxBC,IAAI,EAAEA,IAAK,CAAa;EAAA;EACxBC,WAAW,EAAEA,WAAY,CAAC;EAAA;EAC1BC,KAAK,EAAEA,KAAM,CAAW;EAAA;EACxBC,QAAQ,EAAEA,QAAS,CAAK;EAAA;EACxBC,SAAS,EAAEA,SAAU,CAAG;AAAA;EAAAE,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACzB,CACF;;AAED;AAAAC,EAAA,GAXMZ,KAAK;AAYX,MAAMO,WAAW,GAAGX,MAAM,CAACiB,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GApBMP,WAAW;AAqBjBP,KAAK,CAACe,SAAS,GAAG;EAChBd,IAAI,EAAEJ,SAAS,CAACmB,MAAM,CAACC,UAAU;EAAQ;EACzCf,IAAI,EAAEL,SAAS,CAACmB,MAAM,CAACC,UAAU;EAAQ;EACzCd,WAAW,EAAEN,SAAS,CAACmB,MAAM,CAACC,UAAU;EAAE;EAC1Cb,KAAK,EAAEP,SAAS,CAACmB,MAAM,CAACC,UAAU;EAAQ;EAC1CZ,QAAQ,EAAER,SAAS,CAACqB,IAAI,CAACD,UAAU;EAAO;EAC1CX,SAAS,EAAET,SAAS,CAACsB,IAAI,CAAiB;AAC5C,CAAC;;AAED;AACAnB,KAAK,CAACoB,YAAY,GAAG;EACnBd,SAAS,EAAE;AACb,CAAC;AAED,eAAeN,KAAK;AAAC,IAAAY,EAAA,EAAAE,GAAA;AAAAO,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAP,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}