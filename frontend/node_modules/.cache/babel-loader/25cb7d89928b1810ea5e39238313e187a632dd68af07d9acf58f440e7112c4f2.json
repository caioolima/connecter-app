{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nconst useHeader = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isCreateTaskModalOpen, setIsCreateTaskModalOpen] = useState(false);\n  const [isTaskMenuOpen, setIsTaskMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: '',\n    fullName: '',\n    createdAt: ''\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Função para armazenar a logo no localStorage\n  const saveLogoToLocalStorage = async () => {\n    const logoUrl = 'https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-logo-preview.png?alt=media&token=5891cb1a-9b80-4908-ba62-ebf81bbeb46a';\n    const response = await fetch(logoUrl);\n    const blob = await response.blob();\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.onloadend = () => {\n        localStorage.setItem('logo', reader.result);\n        resolve();\n      };\n      reader.onerror = reject;\n      reader.readAsDataURL(blob);\n    });\n  };\n  useEffect(() => {\n    if (loading) return; // Evita a execução enquanto está carregando\n\n    // Verifica se o logo está armazenado, se não, armazena-o\n    const fetchLogo = async () => {\n      const storedLogo = localStorage.getItem('logo');\n      if (!storedLogo) {\n        await saveLogoToLocalStorage();\n      }\n    };\n    fetchLogo();\n  }, [loading]);\n  useEffect(() => {\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUserInfo({\n          username: decodedToken.username || '',\n          email: decodedToken.email || '',\n          fullName: decodedToken.fullName || '',\n          createdAt: decodedToken.createdAt || ''\n        });\n      } catch (error) {\n        console.error('Erro ao decodificar o token', error);\n        localStorage.removeItem('token');\n        setToken('');\n        setUserInfo({\n          username: '',\n          email: '',\n          fullName: '',\n          createdAt: ''\n        });\n      }\n    } else {\n      setUserInfo({\n        username: '',\n        email: '',\n        fullName: '',\n        createdAt: ''\n      });\n    }\n    setLoading(false);\n  }, [token]);\n  useEffect(() => {\n    if (loading) return; // Evita a execução enquanto está carregando\n\n    if (token && userInfo.username && location.pathname === '/login') {\n      navigate(`/tasks/${encodeURIComponent(userInfo.username)}`);\n    }\n  }, [loading, token, userInfo.username, location.pathname, navigate]);\n  useEffect(() => {\n    // Fechar os menus ao trocar de página\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  }, [location.pathname]);\n  const toggleTaskMenu = () => {\n    if (isUserMenuOpen) {\n      setIsUserMenuOpen(false);\n    }\n    setIsTaskMenuOpen(prev => !prev);\n  };\n  const toggleUserMenu = () => {\n    if (isTaskMenuOpen) {\n      setIsTaskMenuOpen(false);\n    }\n    setIsUserMenuOpen(prev => !prev);\n  };\n  const openCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(true);\n  };\n  const closeCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(false);\n  };\n  const handleCreateTask = task => {\n    console.log('Nova tarefa criada:', task);\n  };\n  const handleViewTasks = () => {\n    navigate('/user-tasks');\n    setIsTaskMenuOpen(false); // Fecha o menu ao navegar\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken('');\n    setUserInfo({\n      username: '',\n      email: '',\n      fullName: '',\n      createdAt: ''\n    });\n    navigate('/login');\n    setIsTaskMenuOpen(false); // Fecha o menu ao deslogar\n    setIsUserMenuOpen(false); // Fecha o menu ao deslogar\n  };\n  const isOnLoginPage = location.pathname === '/login';\n  const isOnUserTasksPage = location.pathname === '/user-tasks';\n\n  // Verifica se o usuário está autenticado com base no token e userInfo\n  const isAuthenticated = !!token && !!userInfo.username;\n  return {\n    isCreateTaskModalOpen,\n    isTaskMenuOpen,\n    isUserMenuOpen,\n    token,\n    userInfo,\n    loading,\n    // Retorna o estado de carregamento\n    isOnLoginPage,\n    isOnUserTasksPage,\n    isAuthenticated,\n    toggleTaskMenu,\n    toggleUserMenu,\n    openCreateTaskModal,\n    closeCreateTaskModal,\n    handleCreateTask,\n    handleViewTasks,\n    handleLogout,\n    setIsTaskMenuOpen\n  };\n};\n_s(useHeader, \"F5pXIhL/cLKUUa4q1Mmp0tAiEFA=\", false, function () {\n  return [useNavigate, useLocation];\n});\nexport default useHeader;","map":{"version":3,"names":["useState","useEffect","useNavigate","useLocation","jwtDecode","useHeader","_s","navigate","location","isCreateTaskModalOpen","setIsCreateTaskModalOpen","isTaskMenuOpen","setIsTaskMenuOpen","isUserMenuOpen","setIsUserMenuOpen","token","setToken","localStorage","getItem","userInfo","setUserInfo","username","email","fullName","createdAt","loading","setLoading","saveLogoToLocalStorage","logoUrl","response","fetch","blob","reader","FileReader","Promise","resolve","reject","onloadend","setItem","result","onerror","readAsDataURL","fetchLogo","storedLogo","decodedToken","error","console","removeItem","pathname","encodeURIComponent","toggleTaskMenu","prev","toggleUserMenu","openCreateTaskModal","closeCreateTaskModal","handleCreateTask","task","log","handleViewTasks","handleLogout","isOnLoginPage","isOnUserTasksPage","isAuthenticated"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/hooks/useHeader.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\n\nconst useHeader = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isCreateTaskModalOpen, setIsCreateTaskModalOpen] = useState(false);\n  const [isTaskMenuOpen, setIsTaskMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: '',\n    fullName: '',\n    createdAt: '',\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Função para armazenar a logo no localStorage\n  const saveLogoToLocalStorage = async () => {\n    const logoUrl = 'https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-logo-preview.png?alt=media&token=5891cb1a-9b80-4908-ba62-ebf81bbeb46a';\n    const response = await fetch(logoUrl);\n    const blob = await response.blob();\n    const reader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n      reader.onloadend = () => {\n        localStorage.setItem('logo', reader.result);\n        resolve();\n      };\n      reader.onerror = reject;\n      reader.readAsDataURL(blob);\n    });\n  };\n\n  useEffect(() => {\n    if (loading) return; // Evita a execução enquanto está carregando\n\n    // Verifica se o logo está armazenado, se não, armazena-o\n    const fetchLogo = async () => {\n      const storedLogo = localStorage.getItem('logo');\n      if (!storedLogo) {\n        await saveLogoToLocalStorage();\n      }\n    };\n    \n    fetchLogo();\n  }, [loading]);\n\n  useEffect(() => {\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUserInfo({\n          username: decodedToken.username || '',\n          email: decodedToken.email || '',\n          fullName: decodedToken.fullName || '',\n          createdAt: decodedToken.createdAt || '',\n        });\n      } catch (error) {\n        console.error('Erro ao decodificar o token', error);\n        localStorage.removeItem('token');\n        setToken('');\n        setUserInfo({\n          username: '',\n          email: '',\n          fullName: '',\n          createdAt: '',\n        });\n      }\n    } else {\n      setUserInfo({\n        username: '',\n        email: '',\n        fullName: '',\n        createdAt: '',\n      });\n    }\n    setLoading(false);\n  }, [token]);\n\n  useEffect(() => {\n    if (loading) return; // Evita a execução enquanto está carregando\n\n    if (token && userInfo.username && location.pathname === '/login') {\n      navigate(`/tasks/${encodeURIComponent(userInfo.username)}`);\n    }\n  }, [loading, token, userInfo.username, location.pathname, navigate]);\n\n  useEffect(() => {\n    // Fechar os menus ao trocar de página\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  }, [location.pathname]);\n\n  const toggleTaskMenu = () => {\n    if (isUserMenuOpen) {\n      setIsUserMenuOpen(false);\n    }\n    setIsTaskMenuOpen(prev => !prev);\n  };\n\n  const toggleUserMenu = () => {\n    if (isTaskMenuOpen) {\n      setIsTaskMenuOpen(false);\n    }\n    setIsUserMenuOpen(prev => !prev);\n  };\n\n  const openCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(true);\n  };\n\n  const closeCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(false);\n  };\n\n  const handleCreateTask = (task) => {\n    console.log('Nova tarefa criada:', task);\n  };\n\n  const handleViewTasks = () => {\n    navigate('/user-tasks');\n    setIsTaskMenuOpen(false); // Fecha o menu ao navegar\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken('');\n    setUserInfo({\n      username: '',\n      email: '',\n      fullName: '',\n      createdAt: '',\n    });\n    navigate('/login');\n    setIsTaskMenuOpen(false); // Fecha o menu ao deslogar\n    setIsUserMenuOpen(false); // Fecha o menu ao deslogar\n  };\n\n  const isOnLoginPage = location.pathname === '/login';\n  const isOnUserTasksPage = location.pathname === '/user-tasks';\n\n  // Verifica se o usuário está autenticado com base no token e userInfo\n  const isAuthenticated = !!token && !!userInfo.username;\n\n  return {\n    isCreateTaskModalOpen,\n    isTaskMenuOpen,\n    isUserMenuOpen,\n    token,\n    userInfo,\n    loading, // Retorna o estado de carregamento\n    isOnLoginPage,\n    isOnUserTasksPage,\n    isAuthenticated,\n    toggleTaskMenu,\n    toggleUserMenu,\n    openCreateTaskModal,\n    closeCreateTaskModal,\n    handleCreateTask,\n    handleViewTasks,\n    handleLogout,\n    setIsTaskMenuOpen, \n  };\n};\n\nexport default useHeader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}