{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth'; // Importando o hook useAuth\nimport styles from './TaskManager.module.css'; // Importando os estilos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all'); // Filtros: 'all', 'completed', 'pending'\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: ''\n  });\n  const {\n    token,\n    userInfo\n  } = useAuth(); // Usando useAuth para obter token e informações do usuário\n  const navigate = useNavigate();\n\n  // Fetch para obter tarefas\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token) return; // Se não houver token, não faz o fetch\n      try {\n        const response = await fetch('http://localhost:5000/api/tasks', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) throw new Error('Erro ao buscar tarefas');\n        const data = await response.json();\n        setTasks(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTasks();\n  }, [token]);\n\n  // Função para adicionar uma nova tarefa\n  const addTask = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (!response.ok) throw new Error('Erro ao adicionar tarefa');\n      const newTaskData = await response.json();\n      setTasks([...tasks, newTaskData.userTask]);\n      setNewTask({\n        title: '',\n        description: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para atualizar uma tarefa\n  const updateTask = async (taskId, updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (!response.ok) throw new Error('Erro ao atualizar tarefa');\n      const updatedTaskData = await response.json();\n      setTasks(tasks.map(task => task._id === taskId ? updatedTaskData.userTask : task));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para deletar uma tarefa\n  const deleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao deletar tarefa');\n      setTasks(tasks.filter(task => task._id !== taskId));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para completar uma tarefa\n  const completeTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          completed: true\n        })\n      });\n      if (!response.ok) throw new Error('Erro ao completar tarefa');\n      const completedTaskData = await response.json();\n      setTasks(tasks.map(task => task._id === taskId ? completedTaskData.userTask : task));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para filtrar as tarefas\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.completed;\n    if (filter === 'pending') return !task.completed;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.taskManager,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gerenciador de Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.taskForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        placeholder: \"T\\xEDtulo da tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        }),\n        placeholder: \"Descri\\xE7\\xE3o da tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Adicionar Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filters,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('all'),\n        children: \"Todas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('completed'),\n        children: \"Conclu\\xEDdas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('pending'),\n        children: \"Pendentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.taskList,\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? styles.completed : '',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => completeTask(task._id),\n            children: \"Completar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateTask(task._id, {\n              title: task.title,\n              description: task.description\n            }),\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(task._id),\n            children: \"Deletar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"z7DGvl+4BjSryBDYs2Ddxa1egI0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","styles","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","filter","setFilter","newTask","setNewTask","title","description","token","userInfo","navigate","fetchTasks","response","fetch","headers","Authorization","ok","Error","data","json","error","console","addTask","method","body","JSON","stringify","newTaskData","userTask","updateTask","taskId","updatedTask","updatedTaskData","map","task","_id","deleteTask","completeTask","completed","completedTaskData","filteredTasks","className","taskManager","children","fileName","_jsxFileName","lineNumber","columnNumber","taskForm","type","value","onChange","e","target","placeholder","onClick","filters","taskList","actions","_c","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth'; // Importando o hook useAuth\nimport styles from './TaskManager.module.css'; // Importando os estilos\n\nconst TaskManager = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all'); // Filtros: 'all', 'completed', 'pending'\n  const [newTask, setNewTask] = useState({ title: '', description: '' });\n  const { token, userInfo } = useAuth(); // Usando useAuth para obter token e informações do usuário\n  const navigate = useNavigate();\n\n  // Fetch para obter tarefas\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token) return; // Se não houver token, não faz o fetch\n      try {\n        const response = await fetch('http://localhost:5000/api/tasks', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (!response.ok) throw new Error('Erro ao buscar tarefas');\n        const data = await response.json();\n        setTasks(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchTasks();\n  }, [token]);\n\n  // Função para adicionar uma nova tarefa\n  const addTask = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(newTask),\n      });\n\n      if (!response.ok) throw new Error('Erro ao adicionar tarefa');\n      const newTaskData = await response.json();\n      setTasks([...tasks, newTaskData.userTask]);\n      setNewTask({ title: '', description: '' });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para atualizar uma tarefa\n  const updateTask = async (taskId, updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(updatedTask),\n      });\n\n      if (!response.ok) throw new Error('Erro ao atualizar tarefa');\n      const updatedTaskData = await response.json();\n      setTasks(tasks.map(task => (task._id === taskId ? updatedTaskData.userTask : task)));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para deletar uma tarefa\n  const deleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao deletar tarefa');\n      setTasks(tasks.filter(task => task._id !== taskId));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para completar uma tarefa\n  const completeTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ completed: true }),\n      });\n\n      if (!response.ok) throw new Error('Erro ao completar tarefa');\n      const completedTaskData = await response.json();\n      setTasks(tasks.map(task => (task._id === taskId ? completedTaskData.userTask : task)));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Função para filtrar as tarefas\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.completed;\n    if (filter === 'pending') return !task.completed;\n    return true;\n  });\n\n  return (\n    <div className={styles.taskManager}>\n      <h1>Gerenciador de Tarefas</h1>\n      <div className={styles.taskForm}>\n        <input\n          type=\"text\"\n          value={newTask.title}\n          onChange={e => setNewTask({ ...newTask, title: e.target.value })}\n          placeholder=\"Título da tarefa\"\n        />\n        <textarea\n          value={newTask.description}\n          onChange={e => setNewTask({ ...newTask, description: e.target.value })}\n          placeholder=\"Descrição da tarefa\"\n        />\n        <button onClick={addTask}>Adicionar Tarefa</button>\n      </div>\n\n      <div className={styles.filters}>\n        <button onClick={() => setFilter('all')}>Todas</button>\n        <button onClick={() => setFilter('completed')}>Concluídas</button>\n        <button onClick={() => setFilter('pending')}>Pendentes</button>\n      </div>\n\n      <ul className={styles.taskList}>\n        {filteredTasks.map(task => (\n          <li key={task._id} className={task.completed ? styles.completed : ''}>\n            <h3>{task.title}</h3>\n            <p>{task.description}</p>\n            <div className={styles.actions}>\n              <button onClick={() => completeTask(task._id)}>Completar</button>\n              <button onClick={() => updateTask(task._id, { title: task.title, description: task.description })}>Editar</button>\n              <button onClick={() => deleteTask(task._id)}>Deletar</button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}