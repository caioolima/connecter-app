{"ast":null,"code":"var _s = $RefreshSig$();\nconst useTasksApi = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [loading, setLoading] = useState(true);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const {\n    token,\n    userInfo\n  } = useAuth();\n  const fetchTasks = async () => {\n    if (!token || !(userInfo !== null && userInfo !== void 0 && userInfo.username)) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${userInfo.username}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao buscar tarefas');\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [token, userInfo === null || userInfo === void 0 ? void 0 : userInfo.username]);\n  const handleAddTaskClick = () => {\n    setCurrentTask(null);\n    setModalOpen(true);\n  };\n  const handleSaveTask = async task => {\n    try {\n      const method = currentTask ? 'PUT' : 'POST';\n      const url = currentTask ? `https://connecter-app-production.up.railway.app/api/manager/tasks/${currentTask.id}` : 'https://connecter-app-production.up.railway.app/api/manager/tasks';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(task)\n      });\n      if (!response.ok) throw new Error('Erro ao salvar tarefa');\n      await response.json();\n      fetchTasks();\n      setModalOpen(false);\n      setCurrentTask(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluída');\n      await response.json();\n      fetchTasks();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao excluir tarefa');\n      fetchTasks();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.taskStatus;\n    if (filter === 'pending') return !task.taskStatus;\n    return true;\n  });\n  return {\n    tasks: filteredTasks,\n    loading,\n    modalOpen,\n    currentTask,\n    filter,\n    setFilter,\n    setModalOpen,\n    setCurrentTask,\n    handleAddTaskClick,\n    handleSaveTask,\n    handleCompleteTask,\n    handleDeleteTask\n  };\n};\n_s(useTasksApi, \"m4gDtOVmaczFGNovfOxuz4bIZiw=\", true);\nexport default useTasksApi;","map":{"version":3,"names":["useTasksApi","_s","tasks","setTasks","useState","filter","setFilter","loading","setLoading","currentTask","setCurrentTask","modalOpen","setModalOpen","token","userInfo","useAuth","fetchTasks","username","response","fetch","headers","Authorization","ok","Error","data","json","error","console","useEffect","handleAddTaskClick","handleSaveTask","task","method","url","id","body","JSON","stringify","handleCompleteTask","taskId","handleDeleteTask","filteredTasks","taskStatus"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/hooks/Manager Hooks/useTaskApi.js"],"sourcesContent":["const useTasksApi = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [loading, setLoading] = useState(true);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const { token, userInfo } = useAuth();\n\n  const fetchTasks = async () => {\n    if (!token || !userInfo?.username) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${userInfo.username}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (!response.ok) throw new Error('Erro ao buscar tarefas');\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, [token, userInfo?.username]);\n\n  const handleAddTaskClick = () => {\n    setCurrentTask(null);\n    setModalOpen(true);\n  };\n\n  const handleSaveTask = async (task) => {\n    try {\n      const method = currentTask ? 'PUT' : 'POST';\n      const url = currentTask\n        ? `https://connecter-app-production.up.railway.app/api/manager/tasks/${currentTask.id}`\n        : 'https://connecter-app-production.up.railway.app/api/manager/tasks';\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(task),\n      });\n\n      if (!response.ok) throw new Error('Erro ao salvar tarefa');\n      await response.json();\n      \n      fetchTasks();\n      setModalOpen(false);\n      setCurrentTask(null);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluída');\n      await response.json();\n      \n      fetchTasks();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`https://connecter-app-production.up.railway.app/api/manager/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao excluir tarefa');\n      fetchTasks();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.taskStatus;\n    if (filter === 'pending') return !task.taskStatus;\n    return true;\n  });\n\n  return {\n    tasks: filteredTasks,\n    loading,\n    modalOpen,\n    currentTask,\n    filter,\n    setFilter,\n    setModalOpen,\n    setCurrentTask,\n    handleAddTaskClick,\n    handleSaveTask,\n    handleCompleteTask,\n    handleDeleteTask,\n  };\n};\n\nexport default useTasksApi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}