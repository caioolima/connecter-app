{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/TasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { useAuth } from '../hooks/useAuth'; // Importando o hook useAuth\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nconst formatDate = dateString => {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\nconst TasksPage = () => {\n  _s();\n  const {\n    username\n  } = useParams(); // Obtém o nome de usuário da URL\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [createdAt, setCreatedAt] = useState(''); // Estado para a data de criação\n  const navigate = useNavigate();\n  const {\n    token,\n    userInfo\n  } = useAuth(); // Utilize useAuth para obter informações do usuário\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        if (token) {\n          const decodedToken = jwtDecode(token);\n          console.log(decodedToken);\n          const firstName = capitalizeFirstLetter(decodedToken.username || 'Usuário');\n          setFullName(decodedToken.fullName || 'Nome não disponível');\n          setEmail(decodedToken.email || 'Email não disponível');\n          setCreatedAt(decodedToken.createdAt || 'Data não disponível'); // Define a data de criação\n\n          // Redirecionar se o nome de usuário da URL não corresponder ao nome do usuário autenticado\n          if (username !== firstName) {\n            navigate(`/tasks/${encodeURIComponent(firstName)}`);\n            return;\n          }\n        } else {\n          const response = await fetch(`http://localhost:5000/api/users/user/${encodeURIComponent(username)}`);\n          if (response.ok) {\n            const data = await response.json();\n            setFullName(data.fullName || 'Nome não disponível');\n            setEmail(data.email || 'Email não disponível');\n            setCreatedAt(data.createdAt || 'Data não disponível'); // Define a data de criação\n          } else {\n            console.error('Erro ao carregar informações do usuário:', response.statusText);\n          }\n        }\n      } catch (error) {\n        console.error('Erro ao carregar informações do usuário:', error);\n      }\n    };\n    const fetchTasks = async () => {\n      try {\n        const apiUrl = token ? `http://localhost:5000/api/tasks/user/${encodeURIComponent(userInfo.username)}` : `http://localhost:5000/api/tasks/user/${encodeURIComponent(username)}`; // Correção para usar o username da URL\n\n        const response = await fetch(apiUrl, {\n          headers: token ? {\n            Authorization: `Bearer ${token}`\n          } : {}\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      }\n    };\n    fetchUserInfo();\n    fetchTasks();\n  }, [navigate, username, token, userInfo.username]);\n  const handleViewTask = task => {\n    if (token) {\n      setSelectedTask(task);\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n  const handleCloseModal = () => {\n    setSelectedTask(null);\n  };\n  const handleCloseLoginModal = () => {\n    setShowLoginModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(WidgetsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(UserWidget, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Informa\\xE7\\xF5es de \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(UserInfo, {\n          children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nome:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), \" \", fullName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), \" \", email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Data de Cria\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), \" \", formatDate(createdAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TasksWidget, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Tarefas de \", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(TaskGrid, {\n          children: tasks.slice(0, 6).map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n              children: formatDate(task.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n              onClick: () => handleViewTask(task),\n              children: \"Detalhes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskModal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: handleCloseModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedTask.taskTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalDate, {\n            children: formatDate(selectedTask.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Descri\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 18\n            }, this), \" \", selectedTask.taskDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 18\n            }, this), \" \", selectedTask.taskStatus ? 'Concluído' : 'Pendente']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), showLoginModal && /*#__PURE__*/_jsxDEV(LoginModal, {\n      children: /*#__PURE__*/_jsxDEV(LoginModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: handleCloseLoginModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Voc\\xEA precisa estar logado para ver esta tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n          onClick: () => navigate('/login'),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"shXbDab7ykwFVZyWbBrc9Nuyli0=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = TasksPage;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  background: #000; /* Preto */\n  padding: 2rem;\n  min-height: 85vh;\n  align-items: flex-start;\n  color: #fff; /* Branco */\n`;\n_c2 = Container;\nconst WidgetsContainer = styled.div`\n  display: flex;\n  gap: 2rem;\n  width: 100%;\n  margin-top: 5rem;\n  max-width: 1200px;\n  justify-content: center;\n`;\n_c3 = WidgetsContainer;\nconst Widget = styled.div`\n  background: #111; /* Preto muito escuro */\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1), inset 0 -2px 4px rgba(255, 255, 255, 0.05);\n  padding: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  animation: ${fadeIn} 0.6s ease-in-out;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 6px 12px rgba(255, 255, 255, 0.2), inset 0 -2px 4px rgba(255, 255, 255, 0.1);\n  }\n`;\nconst TasksWidget = styled(Widget)`\n  flex: 2;\n  max-width: 750px;\n\n  h2 {\n    color: #fff; /* Branco */\n    font-weight: bold;\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n`;\n_c4 = TasksWidget;\nconst UserWidget = styled(Widget)`\n  flex: 1;\n  max-width: 350px;\n  height: auto;\n\n  h2 {\n    color: #fff; /* Branco */\n    font-weight: bold;\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n`;\n_c5 = UserWidget;\nconst UserInfo = styled.div`\n  margin-top: 1rem;\n`;\n_c6 = UserInfo;\nconst InfoItem = styled.div`\n  margin-bottom: 0.5rem;\n  color: #ccc; /* Cinza claro */\n`;\n_c7 = InfoItem;\nconst TaskGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n`;\n_c8 = TaskGrid;\nconst TaskItem = styled.div`\n  background: #222; /* Preto um pouco mais claro */\n  border-radius: 10px;\n  padding: 1rem;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: background 0.3s ease, transform 0.3s ease;\n\n  &:hover {\n    background: #333; /* Preto mais claro */\n    transform: scale(1.02);\n  }\n`;\n_c9 = TaskItem;\nconst TaskName = styled.h3`\n  font-size: 1.2rem;\n  color: #fff; /* Branco */\n`;\n_c10 = TaskName;\nconst TaskDate = styled.p`\n  font-size: 0.9rem;\n  color: #888; /* Cinza escuro */\n`;\n_c11 = TaskDate;\nconst ActionButton = styled.button`\n  background: #ea4f97; /* Cor primária */\n  color: #fff; /* Branco */\n  border: none;\n  border-radius: 5px;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  margin-top: 1rem;\n  font-size: 1rem;\n\n  &:hover {\n    background: #f70073; /* Cor primária ao passar o mouse */\n  }\n`;\n_c12 = ActionButton;\nconst TaskModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n_c13 = TaskModal;\nconst ModalContent = styled.div`\n  background: #333;\n  color: #fff;\n  border-radius: 10px;\n  padding: 2rem;\n  width: 80%;\n  max-width: 500px;\n  position: relative;\n`;\n_c14 = ModalContent;\nconst ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n_c15 = ModalHeader;\nconst ModalDate = styled.p`\n  font-size: 0.9rem;\n  color: #aaa; /* Cinza claro */\n`;\n_c16 = ModalDate;\nconst ModalBody = styled.div`\n  font-size: 1rem;\n`;\n_c17 = ModalBody;\nconst CloseButton = styled.button`\n  background: transparent;\n  border: none;\n  color: #fff;\n  font-size: 1.5rem;\n  cursor: pointer;\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n`;\n_c18 = CloseButton;\nconst LoginModal = styled(TaskModal)``;\n_c19 = LoginModal;\nconst LoginModalContent = styled(ModalContent)`\n  text-align: center;\n`;\n_c20 = LoginModalContent;\nconst LoginButton = styled.button`\n  background: #ea4f97; /* Cor primária */\n  color: #fff; /* Branco */\n  border: none;\n  border-radius: 5px;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  margin-top: 1rem;\n  font-size: 1rem;\n\n  &:hover {\n    background: #f70073; /* Cor primária ao passar o mouse */\n  }\n`;\n_c21 = LoginButton;\nexport default TasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n$RefreshReg$(_c, \"TasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"WidgetsContainer\");\n$RefreshReg$(_c4, \"TasksWidget\");\n$RefreshReg$(_c5, \"UserWidget\");\n$RefreshReg$(_c6, \"UserInfo\");\n$RefreshReg$(_c7, \"InfoItem\");\n$RefreshReg$(_c8, \"TaskGrid\");\n$RefreshReg$(_c9, \"TaskItem\");\n$RefreshReg$(_c10, \"TaskName\");\n$RefreshReg$(_c11, \"TaskDate\");\n$RefreshReg$(_c12, \"ActionButton\");\n$RefreshReg$(_c13, \"TaskModal\");\n$RefreshReg$(_c14, \"ModalContent\");\n$RefreshReg$(_c15, \"ModalHeader\");\n$RefreshReg$(_c16, \"ModalDate\");\n$RefreshReg$(_c17, \"ModalBody\");\n$RefreshReg$(_c18, \"CloseButton\");\n$RefreshReg$(_c19, \"LoginModal\");\n$RefreshReg$(_c20, \"LoginModalContent\");\n$RefreshReg$(_c21, \"LoginButton\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","styled","keyframes","useAuth","jwtDecode","jsxDEV","_jsxDEV","capitalizeFirstLetter","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","fadeIn","TasksPage","_s","username","tasks","setTasks","selectedTask","setSelectedTask","showLoginModal","setShowLoginModal","fullName","setFullName","email","setEmail","createdAt","setCreatedAt","navigate","token","userInfo","fetchUserInfo","decodedToken","console","log","firstName","encodeURIComponent","response","fetch","ok","data","json","error","statusText","fetchTasks","apiUrl","headers","Authorization","handleViewTask","task","handleCloseModal","handleCloseLoginModal","Container","children","WidgetsContainer","UserWidget","fileName","_jsxFileName","lineNumber","columnNumber","UserInfo","InfoItem","TasksWidget","TaskGrid","map","TaskItem","TaskName","taskTitle","TaskDate","ActionButton","onClick","id","TaskModal","ModalContent","CloseButton","ModalHeader","ModalDate","ModalBody","taskDescription","taskStatus","LoginModal","LoginModalContent","LoginButton","_c","div","_c2","_c3","Widget","_c4","_c5","_c6","_c7","_c8","_c9","h3","_c10","p","_c11","button","_c12","_c13","_c14","_c15","_c16","_c17","_c18","_c19","_c20","_c21","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/TasksPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { useAuth } from '../hooks/useAuth'; // Importando o hook useAuth\nimport { jwtDecode } from 'jwt-decode';\n\nconst capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst formatDate = (dateString) => {\n  const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst TasksPage = () => {\n  const { username } = useParams(); // Obtém o nome de usuário da URL\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [createdAt, setCreatedAt] = useState(''); // Estado para a data de criação\n  const navigate = useNavigate();\n\n  const { token, userInfo } = useAuth(); // Utilize useAuth para obter informações do usuário\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        if (token) {\n          const decodedToken = jwtDecode(token);\n          console.log(decodedToken);\n          const firstName = capitalizeFirstLetter(decodedToken.username || 'Usuário');\n          setFullName(decodedToken.fullName || 'Nome não disponível');\n          setEmail(decodedToken.email || 'Email não disponível');\n          setCreatedAt(decodedToken.createdAt || 'Data não disponível'); // Define a data de criação\n\n          // Redirecionar se o nome de usuário da URL não corresponder ao nome do usuário autenticado\n          if (username !== firstName) {\n            navigate(`/tasks/${encodeURIComponent(firstName)}`);\n            return;\n          }\n        } else {\n          const response = await fetch(`http://localhost:5000/api/users/user/${encodeURIComponent(username)}`);\n          if (response.ok) {\n            const data = await response.json();\n            setFullName(data.fullName || 'Nome não disponível');\n            setEmail(data.email || 'Email não disponível');\n            setCreatedAt(data.createdAt || 'Data não disponível'); // Define a data de criação\n          } else {\n            console.error('Erro ao carregar informações do usuário:', response.statusText);\n          }\n        }\n      } catch (error) {\n        console.error('Erro ao carregar informações do usuário:', error);\n      }\n    };\n\n    const fetchTasks = async () => {\n      try {\n        const apiUrl = token\n          ? `http://localhost:5000/api/tasks/user/${encodeURIComponent(userInfo.username)}`\n          : `http://localhost:5000/api/tasks/user/${encodeURIComponent(username)}`; // Correção para usar o username da URL\n\n        const response = await fetch(apiUrl, {\n          headers: token ? { Authorization: `Bearer ${token}` } : {},\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      }\n    };\n\n    fetchUserInfo();\n    fetchTasks();\n  }, [navigate, username, token, userInfo.username]);\n\n  const handleViewTask = (task) => {\n    if (token) {\n      setSelectedTask(task);\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTask(null);\n  };\n\n  const handleCloseLoginModal = () => {\n    setShowLoginModal(false);\n  };\n\n  return (\n    <Container>\n      <WidgetsContainer>\n        <UserWidget>\n          <h2>Informações de {username}</h2> {/* Exibe o nome do usuário do token */}\n          <UserInfo>\n            <InfoItem>\n              <strong>Nome:</strong> {fullName}\n            </InfoItem>\n            <InfoItem>\n              <strong>Email:</strong> {email}\n            </InfoItem>\n            <InfoItem>\n              <strong>Data de Criação:</strong> {formatDate(createdAt)}\n            </InfoItem>\n          </UserInfo>\n        </UserWidget>\n        <TasksWidget>\n          <h2>Tarefas de {username}</h2> {/* Exibe o nome do usuário do token */}\n          <TaskGrid>\n            {tasks.slice(0, 6).map((task) => (\n              <TaskItem key={task.id}>\n                <TaskName>{task.taskTitle}</TaskName>\n                <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n                <ActionButton\n                  onClick={() => handleViewTask(task)}\n                >\n                  Detalhes\n                </ActionButton>\n              </TaskItem>\n            ))}\n          </TaskGrid>\n        </TasksWidget>\n      </WidgetsContainer>\n\n      {selectedTask && (\n        <TaskModal>\n          <ModalContent>\n            <CloseButton onClick={handleCloseModal}>×</CloseButton>\n            <ModalHeader>\n              <h3>{selectedTask.taskTitle}</h3>\n              <ModalDate>{formatDate(selectedTask.createdAt)}</ModalDate>\n            </ModalHeader>\n            <ModalBody>\n              <p><strong>Descrição:</strong> {selectedTask.taskDescription}</p>\n              <p><strong>Status:</strong> {selectedTask.taskStatus ? 'Concluído' : 'Pendente'}</p>\n            </ModalBody>\n          </ModalContent>\n        </TaskModal>\n      )}\n\n      {showLoginModal && (\n        <LoginModal>\n          <LoginModalContent>\n            <CloseButton onClick={handleCloseLoginModal}>×</CloseButton>\n            <h2>Você precisa estar logado para ver esta tarefa</h2>\n            <LoginButton onClick={() => navigate('/login')}>Login</LoginButton>\n          </LoginModalContent>\n        </LoginModal>\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  background: #000; /* Preto */\n  padding: 2rem;\n  min-height: 85vh;\n  align-items: flex-start;\n  color: #fff; /* Branco */\n`;\n\nconst WidgetsContainer = styled.div`\n  display: flex;\n  gap: 2rem;\n  width: 100%;\n  margin-top: 5rem;\n  max-width: 1200px;\n  justify-content: center;\n`;\n\nconst Widget = styled.div`\n  background: #111; /* Preto muito escuro */\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1), inset 0 -2px 4px rgba(255, 255, 255, 0.05);\n  padding: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  animation: ${fadeIn} 0.6s ease-in-out;\n\n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 6px 12px rgba(255, 255, 255, 0.2), inset 0 -2px 4px rgba(255, 255, 255, 0.1);\n  }\n`;\n\nconst TasksWidget = styled(Widget)`\n  flex: 2;\n  max-width: 750px;\n\n  h2 {\n    color: #fff; /* Branco */\n    font-weight: bold;\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst UserWidget = styled(Widget)`\n  flex: 1;\n  max-width: 350px;\n  height: auto;\n\n  h2 {\n    color: #fff; /* Branco */\n    font-weight: bold;\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst UserInfo = styled.div`\n  margin-top: 1rem;\n`;\n\nconst InfoItem = styled.div`\n  margin-bottom: 0.5rem;\n  color: #ccc; /* Cinza claro */\n`;\n\nconst TaskGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 1rem;\n`;\n\nconst TaskItem = styled.div`\n  background: #222; /* Preto um pouco mais claro */\n  border-radius: 10px;\n  padding: 1rem;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: background 0.3s ease, transform 0.3s ease;\n\n  &:hover {\n    background: #333; /* Preto mais claro */\n    transform: scale(1.02);\n  }\n`;\n\nconst TaskName = styled.h3`\n  font-size: 1.2rem;\n  color: #fff; /* Branco */\n`;\n\nconst TaskDate = styled.p`\n  font-size: 0.9rem;\n  color: #888; /* Cinza escuro */\n`;\n\nconst ActionButton = styled.button`\n  background: #ea4f97; /* Cor primária */\n  color: #fff; /* Branco */\n  border: none;\n  border-radius: 5px;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  margin-top: 1rem;\n  font-size: 1rem;\n\n  &:hover {\n    background: #f70073; /* Cor primária ao passar o mouse */\n  }\n`;\n\nconst TaskModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n\nconst ModalContent = styled.div`\n  background: #333;\n  color: #fff;\n  border-radius: 10px;\n  padding: 2rem;\n  width: 80%;\n  max-width: 500px;\n  position: relative;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n\nconst ModalDate = styled.p`\n  font-size: 0.9rem;\n  color: #aaa; /* Cinza claro */\n`;\n\nconst ModalBody = styled.div`\n  font-size: 1rem;\n`;\n\nconst CloseButton = styled.button`\n  background: transparent;\n  border: none;\n  color: #fff;\n  font-size: 1.5rem;\n  cursor: pointer;\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n`;\n\nconst LoginModal = styled(TaskModal)``;\n\nconst LoginModalContent = styled(ModalContent)`\n  text-align: center;\n`;\n\nconst LoginButton = styled.button`\n  background: #ea4f97; /* Cor primária */\n  color: #fff; /* Branco */\n  border: none;\n  border-radius: 5px;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  margin-top: 1rem;\n  font-size: 1rem;\n\n  &:hover {\n    background: #f70073; /* Cor primária ao passar o mouse */\n  }\n`;\n\nexport default TasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}