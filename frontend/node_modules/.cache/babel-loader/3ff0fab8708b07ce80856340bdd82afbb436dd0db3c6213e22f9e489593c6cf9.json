{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Manager/DropdownMenu.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport useDropdownMenu from '../../hooks/Manager Hooks/useDropdownMenu';\n\n// Componente DropdownMenu para exibir um menu suspenso com ações\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownMenu = ({\n  onEdit,\n  onDelete,\n  onComplete,\n  isCompleted\n}) => {\n  _s();\n  // Utiliza o hook personalizado useDropdownMenu para gerenciar o estado do menu\n  const {\n    isOpen,\n    hoveredItem,\n    menuRef,\n    handleToggle,\n    handleMouseEnter,\n    handleMouseLeave\n  } = useDropdownMenu();\n  return /*#__PURE__*/_jsxDEV(MenuContainer, {\n    ref: menuRef,\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      onClick: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [!isCompleted && /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          onComplete();\n          handleToggle();\n        },\n        isHovered: hoveredItem === 'complete',\n        onMouseEnter: () => handleMouseEnter('complete'),\n        onMouseLeave: handleMouseLeave,\n        children: \"Concluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), !isCompleted && /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          onEdit();\n          handleToggle();\n        },\n        isHovered: hoveredItem === 'edit',\n        onMouseEnter: () => handleMouseEnter('edit'),\n        onMouseLeave: handleMouseLeave,\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          onDelete();\n          handleToggle();\n        },\n        isHovered: hoveredItem === 'delete',\n        onMouseEnter: () => handleMouseEnter('delete'),\n        onMouseLeave: handleMouseLeave,\n        children: \"Excluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n// Container do menu, que posiciona o menu suspenso\n_s(DropdownMenu, \"i+e6gtGqjeVUATe58NDKDMLV/iM=\", false, function () {\n  return [useDropdownMenu];\n});\n_c = DropdownMenu;\nconst MenuContainer = styled.div`\n  position: relative; /* Faz com que o menu suspenso seja posicionado relativamente ao container */\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end; /* Alinha o menu ao final do container */\n`;\n\n// Estilização para o ícone do menu (três pontos verticais)\n_c2 = MenuContainer;\nconst Icon = styled(FaEllipsisV)`\n  font-size: 22px; /* Define o tamanho do ícone */\n  cursor: pointer; /* Muda o cursor para indicar que é clicável */\n  color: #ea4f97; /* Cor primária para o ícone */\n  transform: rotate(90deg); /* Rotaciona o ícone em 90 graus para a posição vertical */\n  transition: color 0.3s ease; /* Adiciona uma transição suave na cor ao passar o mouse */\n\n  &:hover {\n    color: #f291be; /* Cor secundária ao passar o mouse */\n  }\n`;\n\n// Estilo para o menu suspenso\n_c3 = Icon;\nconst Dropdown = styled.div`\n  position: absolute; /* Posiciona o menu suspenso em relação ao container pai */\n  top: 30px; /* Define a distância do topo do container pai */\n  right: 0; /* Alinha o menu ao lado direito do container pai */\n  background-color: #1e1e1e; /* Cor de fundo para o menu */\n  border-radius: 8px; /* Arredonda os cantos do menu */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Adiciona uma sombra ao menu */\n  min-width: 120px; /* Define uma largura mínima para o menu */\n  z-index: 1000; /* Garante que o menu fique acima de outros elementos */\n  overflow: hidden; /* Evita que o conteúdo ultrapasse os limites do menu */\n\n  @media (max-width: 768px) {\n    min-width: 120px; /* Mantém a largura mínima em telas menores */\n  }\n`;\n\n// Estilo para cada item do menu\n_c4 = Dropdown;\nconst MenuItem = styled.button`\n  display: block;\n  padding: 12px 15px; /* Adiciona espaçamento interno ao item do menu */\n  color: #f5f5f5; /* Cor do texto dos itens do menu */\n  background-color: ${({\n  isHovered\n}) => isHovered ? '#333' : '#1e1e1e'}; /* Cor de fundo para o item do menu baseado no estado de hover */\n  border: none; /* Remove a borda padrão do botão */\n  text-align: left; /* Alinha o texto à esquerda */\n  cursor: pointer; /* Muda o cursor para indicar que é clicável */\n  width: 100%; /* Define a largura do item do menu como 100% do menu suspenso */\n  border-bottom: 1px solid #333; /* Adiciona uma linha inferior para separar os itens do menu */\n  transition: background-color 0.3s; /* Adiciona uma transição suave na cor de fundo ao passar o mouse */\n  font-size: 1rem; /* Define o tamanho da fonte para o texto do item do menu */\n\n  &:last-child {\n    border-bottom: none; /* Remove a linha inferior do último item do menu */\n  }\n\n  &:hover {\n    background-color: #333; /* Cor de fundo ao passar o mouse */\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.9rem; /* Ajusta o tamanho da fonte em telas menores */\n    padding: 10px 12px; /* Ajusta o padding interno em telas menores */\n  }\n`;\n_c5 = MenuItem;\nexport default DropdownMenu;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DropdownMenu\");\n$RefreshReg$(_c2, \"MenuContainer\");\n$RefreshReg$(_c3, \"Icon\");\n$RefreshReg$(_c4, \"Dropdown\");\n$RefreshReg$(_c5, \"MenuItem\");","map":{"version":3,"names":["React","FaEllipsisV","styled","useDropdownMenu","jsxDEV","_jsxDEV","DropdownMenu","onEdit","onDelete","onComplete","isCompleted","_s","isOpen","hoveredItem","menuRef","handleToggle","handleMouseEnter","handleMouseLeave","MenuContainer","ref","children","Icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Dropdown","MenuItem","isHovered","onMouseEnter","onMouseLeave","_c","div","_c2","_c3","_c4","button","_c5","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Manager/DropdownMenu.js"],"sourcesContent":["import React from 'react';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport styled from 'styled-components';\nimport useDropdownMenu from '../../hooks/Manager Hooks/useDropdownMenu';\n\n// Componente DropdownMenu para exibir um menu suspenso com ações\nconst DropdownMenu = ({ onEdit, onDelete, onComplete, isCompleted }) => {\n  // Utiliza o hook personalizado useDropdownMenu para gerenciar o estado do menu\n  const {\n    isOpen,\n    hoveredItem,\n    menuRef,\n    handleToggle,\n    handleMouseEnter,\n    handleMouseLeave,\n  } = useDropdownMenu();\n\n  return (\n    <MenuContainer ref={menuRef}>\n      {/* Ícone que abre ou fecha o menu */}\n      <Icon onClick={handleToggle} />\n      {isOpen && (\n        <Dropdown>\n          {/* MenuItem para completar a tarefa, visível apenas se a tarefa não estiver concluída */}\n          {!isCompleted && (\n            <MenuItem\n              onClick={() => { onComplete(); handleToggle(); }}\n              isHovered={hoveredItem === 'complete'}\n              onMouseEnter={() => handleMouseEnter('complete')}\n              onMouseLeave={handleMouseLeave}\n            >\n              Concluir\n            </MenuItem>\n          )}\n          {/* MenuItem para editar a tarefa, visível apenas se a tarefa não estiver concluída */}\n          {!isCompleted && (\n            <MenuItem\n              onClick={() => { onEdit(); handleToggle(); }}\n              isHovered={hoveredItem === 'edit'}\n              onMouseEnter={() => handleMouseEnter('edit')}\n              onMouseLeave={handleMouseLeave}\n            >\n              Editar\n            </MenuItem>\n          )}\n          {/* MenuItem para excluir a tarefa, visível sempre */}\n          <MenuItem\n            onClick={() => { onDelete(); handleToggle(); }}\n            isHovered={hoveredItem === 'delete'}\n            onMouseEnter={() => handleMouseEnter('delete')}\n            onMouseLeave={handleMouseLeave}\n          >\n            Excluir\n          </MenuItem>\n        </Dropdown>\n      )}\n    </MenuContainer>\n  );\n};\n\n// Container do menu, que posiciona o menu suspenso\nconst MenuContainer = styled.div`\n  position: relative; /* Faz com que o menu suspenso seja posicionado relativamente ao container */\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end; /* Alinha o menu ao final do container */\n`;\n\n// Estilização para o ícone do menu (três pontos verticais)\nconst Icon = styled(FaEllipsisV)`\n  font-size: 22px; /* Define o tamanho do ícone */\n  cursor: pointer; /* Muda o cursor para indicar que é clicável */\n  color: #ea4f97; /* Cor primária para o ícone */\n  transform: rotate(90deg); /* Rotaciona o ícone em 90 graus para a posição vertical */\n  transition: color 0.3s ease; /* Adiciona uma transição suave na cor ao passar o mouse */\n\n  &:hover {\n    color: #f291be; /* Cor secundária ao passar o mouse */\n  }\n`;\n\n// Estilo para o menu suspenso\nconst Dropdown = styled.div`\n  position: absolute; /* Posiciona o menu suspenso em relação ao container pai */\n  top: 30px; /* Define a distância do topo do container pai */\n  right: 0; /* Alinha o menu ao lado direito do container pai */\n  background-color: #1e1e1e; /* Cor de fundo para o menu */\n  border-radius: 8px; /* Arredonda os cantos do menu */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Adiciona uma sombra ao menu */\n  min-width: 120px; /* Define uma largura mínima para o menu */\n  z-index: 1000; /* Garante que o menu fique acima de outros elementos */\n  overflow: hidden; /* Evita que o conteúdo ultrapasse os limites do menu */\n\n  @media (max-width: 768px) {\n    min-width: 120px; /* Mantém a largura mínima em telas menores */\n  }\n`;\n\n// Estilo para cada item do menu\nconst MenuItem = styled.button`\n  display: block;\n  padding: 12px 15px; /* Adiciona espaçamento interno ao item do menu */\n  color: #f5f5f5; /* Cor do texto dos itens do menu */\n  background-color: ${({ isHovered }) => (isHovered ? '#333' : '#1e1e1e')}; /* Cor de fundo para o item do menu baseado no estado de hover */\n  border: none; /* Remove a borda padrão do botão */\n  text-align: left; /* Alinha o texto à esquerda */\n  cursor: pointer; /* Muda o cursor para indicar que é clicável */\n  width: 100%; /* Define a largura do item do menu como 100% do menu suspenso */\n  border-bottom: 1px solid #333; /* Adiciona uma linha inferior para separar os itens do menu */\n  transition: background-color 0.3s; /* Adiciona uma transição suave na cor de fundo ao passar o mouse */\n  font-size: 1rem; /* Define o tamanho da fonte para o texto do item do menu */\n\n  &:last-child {\n    border-bottom: none; /* Remove a linha inferior do último item do menu */\n  }\n\n  &:hover {\n    background-color: #333; /* Cor de fundo ao passar o mouse */\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.9rem; /* Ajusta o tamanho da fonte em telas menores */\n    padding: 10px 12px; /* Ajusta o padding interno em telas menores */\n  }\n`;\n\nexport default DropdownMenu;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}