{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Header/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaBars } from 'react-icons/fa';\nimport { useAuth } from '../../hooks/useAuth'; // Ajuste o caminho conforme necessário\nimport UserMenu from './UserMenu';\nimport TaskMenu from './TaskMenu';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isCreateTaskModalOpen, setIsCreateTaskModalOpen] = useState(false);\n  const [isTaskMenuOpen, setIsTaskMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const {\n    token,\n    userInfo,\n    isAuthenticated,\n    logout\n  } = useAuth(); // Inclua isAuthenticated aqui\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (loading) return; // Evita a execução enquanto está carregando\n\n    if (token && userInfo.username && location.pathname === '/login') {\n      navigate(`/tasks/${encodeURIComponent(userInfo.username)}`);\n    }\n  }, [loading, token, userInfo.username, location.pathname, navigate]);\n  useEffect(() => {\n    // Fechar os menus ao trocar de página\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  }, [location.pathname]);\n  const toggleTaskMenu = () => {\n    if (isUserMenuOpen) {\n      setIsUserMenuOpen(false);\n    }\n    setIsTaskMenuOpen(!isTaskMenuOpen);\n  };\n  const toggleUserMenu = () => {\n    if (isTaskMenuOpen) {\n      setIsTaskMenuOpen(false);\n    }\n    setIsUserMenuOpen(!isUserMenuOpen);\n  };\n  const openCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(true);\n  };\n  const closeCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(false);\n  };\n  const handleCreateTask = task => {\n    console.log('Nova tarefa criada:', task);\n  };\n  const handleViewTasks = () => {\n    navigate('/user-tasks');\n    setIsTaskMenuOpen(false); // Fecha o menu ao navegar\n  };\n  const handleLogout = () => {\n    logout();\n    setIsTaskMenuOpen(false); // Fecha o menu ao deslogar\n    setIsUserMenuOpen(false); // Fecha o menu ao deslogar\n  };\n  const isOnLoginPage = location.pathname === '/login';\n  const isOnUserTasksPage = location.pathname === '/user-tasks';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(StyledLink, {\n        to: isAuthenticated ? `/tasks/${encodeURIComponent(userInfo.username)}` : '/',\n        children: /*#__PURE__*/_jsxDEV(Logo, {\n          src: \"https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-logo-preview.png?alt=media&token=5891cb1a-9b80-4908-ba62-ebf81bbeb46a\",\n          alt: \"Connecter Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), isAuthenticated && !isOnUserTasksPage ? /*#__PURE__*/_jsxDEV(MenuContainer, {\n        children: [/*#__PURE__*/_jsxDEV(MenuIcon, {\n          onClick: toggleTaskMenu,\n          children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), isTaskMenuOpen && /*#__PURE__*/_jsxDEV(TaskMenu, {\n          onViewTasks: () => {\n            handleViewTasks();\n            setIsTaskMenuOpen(false); // Fecha o menu ao clicar na opção\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(UserMenu, {\n          name: userInfo.fullName,\n          onLogout: handleLogout,\n          onClick: () => {\n            toggleUserMenu();\n            // Fechar o menu de tarefas se o menu de usuário for aberto\n            if (isTaskMenuOpen) {\n              setIsTaskMenuOpen(false);\n            }\n          },\n          isOpen: isUserMenuOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), isUserMenuOpen && !isTaskMenuOpen && /*#__PURE__*/_jsxDEV(UserMenu, {\n          name: userInfo.fullName,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : isAuthenticated && !isOnLoginPage ? /*#__PURE__*/_jsxDEV(MenuContainer, {\n        children: /*#__PURE__*/_jsxDEV(UserMenu, {\n          name: userInfo.fullName,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : !isAuthenticated && !isOnUserTasksPage ? /*#__PURE__*/_jsxDEV(LoginButton, {\n        to: \"/login\",\n        children: \"Fazer Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Header, \"VTYa+S6FmM94shDHdEdEddwVTaE=\", false, function () {\n  return [useNavigate, useLocation, useAuth];\n});\n_c = Header;\nconst Container = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: rgba(0, 0, 0, 0.6);\n  height: 80px;\n  padding: 0 20px;\n  margin: 0;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n`;\n_c2 = Container;\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n_c3 = StyledLink;\nconst Logo = styled.img`\n  height: 50px;\n`;\n_c4 = Logo;\nconst MenuContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c5 = MenuContainer;\nconst MenuIcon = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  margin-right: 20px;\n`;\n_c6 = MenuIcon;\nconst LoginButton = styled(Link)`\n  color: white;\n  text-decoration: none;\n  background-color: #ea4f97;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #f291be;\n  }\n`;\n_c7 = LoginButton;\nexport default Header;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"StyledLink\");\n$RefreshReg$(_c4, \"Logo\");\n$RefreshReg$(_c5, \"MenuContainer\");\n$RefreshReg$(_c6, \"MenuIcon\");\n$RefreshReg$(_c7, \"LoginButton\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","styled","FaBars","useAuth","UserMenu","TaskMenu","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","_s","navigate","location","isCreateTaskModalOpen","setIsCreateTaskModalOpen","isTaskMenuOpen","setIsTaskMenuOpen","isUserMenuOpen","setIsUserMenuOpen","token","userInfo","isAuthenticated","logout","loading","setLoading","username","pathname","encodeURIComponent","toggleTaskMenu","toggleUserMenu","openCreateTaskModal","closeCreateTaskModal","handleCreateTask","task","console","log","handleViewTasks","handleLogout","isOnLoginPage","isOnUserTasksPage","children","Container","StyledLink","to","Logo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","MenuContainer","MenuIcon","onClick","onViewTasks","name","fullName","onLogout","isOpen","LoginButton","_c","header","_c2","_c3","img","_c4","div","_c5","_c6","_c7","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaBars } from 'react-icons/fa';\nimport { useAuth } from '../../hooks/useAuth'; // Ajuste o caminho conforme necessário\nimport UserMenu from './UserMenu';\nimport TaskMenu from './TaskMenu';\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isCreateTaskModalOpen, setIsCreateTaskModalOpen] = useState(false);\n  const [isTaskMenuOpen, setIsTaskMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const { token, userInfo, isAuthenticated, logout } = useAuth(); // Inclua isAuthenticated aqui\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (loading) return; // Evita a execução enquanto está carregando\n\n    if (token && userInfo.username && location.pathname === '/login') {\n      navigate(`/tasks/${encodeURIComponent(userInfo.username)}`);\n    }\n  }, [loading, token, userInfo.username, location.pathname, navigate]);\n\n  useEffect(() => {\n    // Fechar os menus ao trocar de página\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  }, [location.pathname]);\n\n  const toggleTaskMenu = () => {\n    if (isUserMenuOpen) {\n      setIsUserMenuOpen(false);\n    }\n    setIsTaskMenuOpen(!isTaskMenuOpen);\n  };\n\n  const toggleUserMenu = () => {\n    if (isTaskMenuOpen) {\n      setIsTaskMenuOpen(false);\n    }\n    setIsUserMenuOpen(!isUserMenuOpen);\n  };\n\n  const openCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(true);\n  };\n\n  const closeCreateTaskModal = () => {\n    setIsCreateTaskModalOpen(false);\n  };\n\n  const handleCreateTask = (task) => {\n    console.log('Nova tarefa criada:', task);\n  };\n\n  const handleViewTasks = () => {\n    navigate('/user-tasks');\n    setIsTaskMenuOpen(false); // Fecha o menu ao navegar\n  };\n\n  const handleLogout = () => {\n    logout();\n    setIsTaskMenuOpen(false); // Fecha o menu ao deslogar\n    setIsUserMenuOpen(false); // Fecha o menu ao deslogar\n  };\n\n  const isOnLoginPage = location.pathname === '/login';\n  const isOnUserTasksPage = location.pathname === '/user-tasks';\n\n  return (\n    <>\n      <Container>\n        <StyledLink to={isAuthenticated ? `/tasks/${encodeURIComponent(userInfo.username)}` : '/'}>\n          <Logo src=\"https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-logo-preview.png?alt=media&token=5891cb1a-9b80-4908-ba62-ebf81bbeb46a\" alt=\"Connecter Logo\" />\n        </StyledLink>\n        {isAuthenticated && !isOnUserTasksPage ? (\n          <MenuContainer>\n            <MenuIcon onClick={toggleTaskMenu}>\n              <FaBars />\n            </MenuIcon>\n            {isTaskMenuOpen && (\n              <TaskMenu \n                onViewTasks={() => {\n                  handleViewTasks();\n                  setIsTaskMenuOpen(false); // Fecha o menu ao clicar na opção\n                }} \n              />\n            )}\n            <UserMenu\n              name={userInfo.fullName}\n              onLogout={handleLogout}\n              onClick={() => {\n                toggleUserMenu();\n                // Fechar o menu de tarefas se o menu de usuário for aberto\n                if (isTaskMenuOpen) {\n                  setIsTaskMenuOpen(false);\n                }\n              }}\n              isOpen={isUserMenuOpen}\n            />\n            {isUserMenuOpen && !isTaskMenuOpen && (\n              <UserMenu \n                name={userInfo.fullName} \n                onLogout={handleLogout} \n              />\n            )}\n          </MenuContainer>\n        ) : isAuthenticated && !isOnLoginPage ? (\n          <MenuContainer>\n            <UserMenu name={userInfo.fullName} onLogout={handleLogout} />\n          </MenuContainer>\n        ) : !isAuthenticated && !isOnUserTasksPage ? (\n          <LoginButton to=\"/login\">Fazer Login</LoginButton>\n        ) : null}\n      </Container>\n    </>\n  );\n};\n\nconst Container = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: rgba(0, 0, 0, 0.6);\n  height: 80px;\n  padding: 0 20px;\n  margin: 0;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nconst Logo = styled.img`\n  height: 50px;\n`;\n\nconst MenuContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst MenuIcon = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  margin-right: 20px;\n`;\n\nconst LoginButton = styled(Link)`\n  color: white;\n  text-decoration: none;\n  background-color: #ea4f97;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-weight: bold;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #f291be;\n  }\n`;\n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}