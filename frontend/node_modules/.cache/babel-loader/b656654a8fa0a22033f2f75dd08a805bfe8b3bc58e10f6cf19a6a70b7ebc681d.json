{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/TasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { jwtDecode } from 'jwt-decode';\nimport CreateTaskModal from './CreateTaskModal'; // Importe o modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nconst formatDate = dateString => {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\nconst TasksPage = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({\n    firstName: '',\n    email: '',\n    createdAt: ''\n  });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showCreateTaskModal, setShowCreateTaskModal] = useState(false); // Estado para controlar o modal de criação\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token'); // Obtém o token do localStorage\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível'\n        });\n        if (username !== firstName) {\n          navigate(`/tasks/${encodeURIComponent(firstName)}`);\n        }\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      const fetchUserInfo = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/users/user/${encodeURIComponent(username)}`);\n          if (response.ok) {\n            const data = await response.json();\n            setUser({\n              firstName: capitalizeFirstLetter(data.name),\n              email: data.email,\n              createdAt: data.createdAt\n            });\n          } else {\n            console.error('Erro ao carregar informações do usuário:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Erro ao carregar informações do usuário:', error);\n        }\n      };\n      fetchUserInfo();\n    }\n    const fetchTasks = async () => {\n      try {\n        const apiUrl = isAuthenticated ? `http://localhost:5000/api/tasks/` : `http://localhost:5000/api/tasks/task/user/${encodeURIComponent(username)}`;\n        const response = await fetch(apiUrl, {\n          headers: isAuthenticated ? {\n            Authorization: `Bearer ${token}`\n          } : {}\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      }\n    };\n    fetchTasks();\n  }, [navigate, username, isAuthenticated, token]);\n  const handleViewTask = task => {\n    if (isAuthenticated) {\n      setSelectedTask(task);\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n  const handleCloseModal = () => {\n    setSelectedTask(null);\n  };\n  const handleCloseLoginModal = () => {\n    setShowLoginModal(false);\n  };\n  const handleOpenCreateTaskModal = () => {\n    setShowCreateTaskModal(true);\n  };\n  const handleCloseCreateTaskModal = () => {\n    setShowCreateTaskModal(false);\n  };\n  const handleCreateTask = newTask => {\n    setTasks(prevTasks => [newTask, ...prevTasks]); // Atualiza a lista de tarefas com a nova tarefa\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(WidgetsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(UserWidget, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Informa\\xE7\\xF5es de \", user.firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n          children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Nome:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), \" \", user.firstName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), \" \", user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Data de Cria\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), \" \", formatDate(user.createdAt), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TasksWidget, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Tarefas de \", user.firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n          onClick: handleOpenCreateTaskModal,\n          children: \"Criar Nova Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskGrid, {\n          children: tasks.slice(0, 6).map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            children: [/*#__PURE__*/_jsxDEV(TaskName, {\n              children: task.taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TaskDate, {\n              children: formatDate(task.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n              onClick: () => handleViewTask(task),\n              children: \"Ver Tarefa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(TaskModal, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: handleCloseModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedTask.taskTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ModalDate, {\n            children: formatDate(selectedTask.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Descri\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 18\n            }, this), \" \", selectedTask.taskDescription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 18\n            }, this), \" \", selectedTask.taskStatus ? 'Concluído' : 'Pendente']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), showLoginModal && /*#__PURE__*/_jsxDEV(LoginModal, {\n      children: /*#__PURE__*/_jsxDEV(LoginModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: handleCloseLoginModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Voc\\xEA precisa estar logado para ver esta tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n          onClick: () => navigate('/login'),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), showCreateTaskModal && /*#__PURE__*/_jsxDEV(CreateTaskModal, {\n      isOpen: showCreateTaskModal,\n      onClose: handleCloseCreateTaskModal,\n      onCreate: handleCreateTask,\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"r132gZt6dMj3Gqsva8nMyl0lI/U=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TasksPage;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  background: url('https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-background.jpg?alt=media&token=ed77c00e-74c3-4580-b494-ce581651ce09') no-repeat center center fixed;\n  background-size: cover;\n  padding: 2rem;\n  min-height: 85vh;\n  align-items: flex-start;\n  color: #dcdcdc; /* Cor de texto mais clara para contraste */\n`;\n_c2 = Container;\nconst WidgetsContainer = styled.div`\n  display: flex;\n  gap: 2rem;\n  width: 100%;\n  margin-top: 10rem;\n  max-width: 1200px;\n  justify-content: center;\n`;\n_c3 = WidgetsContainer;\nconst Widget = styled.div`\n  background: rgba(0, 0, 0, 0.8); /* Fundo preto semitransparente */\n  border-radius: 15px;\n  box-shadow: 0 8px 16px rgba(255, 255, 255, 0.2), inset 0 -3px 6px rgba(255, 255, 255, 0.1);\n  padding: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  animation: ${fadeIn} 0.6s ease-in-out;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: 0 12px 24px rgba(255, 255, 255, 0.3), inset 0 -4px 8px rgba(255, 255, 255, 0.2);\n  }\n`;\nconst TasksWidget = styled(Widget)`\n  flex: 2;\n  max-width: 750px;\n  background: rgba(0, 0, 0, 0.7);\n  \n  h2 {\n    color: #f70073; /* Cor rosa para o título */\n    font-weight: bold;\n    font-size: 1.8rem;\n    margin-bottom: 1rem;\n  }\n`;\n_c4 = TasksWidget;\nconst UserWidget = styled(Widget)`\n  flex: 1;\n  max-width: 350px;\n  background: rgba(0, 0, 0, 0.7);\n  \n  h2 {\n    color: #f70073; /* Cor rosa para o título */\n    font-weight: bold;\n    font-size: 1.8rem;\n    margin-bottom: 1rem;\n  }\n`;\n_c5 = UserWidget;\nconst UserInfo = styled.div`\n  margin-top: 1.5rem;\n`;\n_c6 = UserInfo;\nconst InfoItem = styled.div`\n  margin-bottom: 0.75rem;\n  font-size: 1.1rem;\n  color: #dcdcdc;\n`;\n_c7 = InfoItem;\nconst TaskGrid = styled.div`\n  display: grid;\n  gap: 1rem;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n`;\n_c8 = TaskGrid;\nconst TaskItem = styled.div`\n  background: rgba(0, 0, 0, 0.8); /* Fundo preto semitransparente */\n  border-radius: 8px;\n  padding: 1rem;\n  text-align: center;\n  color: #dcdcdc;\n`;\n_c9 = TaskItem;\nconst TaskName = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n`;\n_c10 = TaskName;\nconst TaskDate = styled.p`\n  font-size: 0.9rem;\n  color: #bbb;\n`;\n_c11 = TaskDate;\nconst ActionButton = styled.button`\n  background: #ea4f97; /* Cor rosa para o botão */\n  border: none;\n  border-radius: 5px;\n  color: white;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  font-size: 1rem;\n  margin-top: 0.5rem;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #f70073; /* Cor rosa mais escura para hover */\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n  }\n`;\n_c12 = ActionButton;\nconst TaskModal = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.9); /* Fundo preto semitransparente */\n  color: #dcdcdc;\n  border-radius: 10px;\n  padding: 2rem;\n  width: 80%;\n  max-width: 600px;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);\n`;\n_c13 = TaskModal;\nconst LoginModal = styled(TaskModal)`\n  background: rgba(0, 0, 0, 0.9); /* Fundo preto semitransparente */\n`;\n_c14 = LoginModal;\nconst ModalContent = styled.div``;\n_c15 = ModalContent;\nconst LoginModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c16 = LoginModalContent;\nconst ModalHeader = styled.div`\n  margin-bottom: 1rem;\n`;\n_c17 = ModalHeader;\nconst ModalBody = styled.div`\n  margin-bottom: 1rem;\n`;\n_c18 = ModalBody;\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: transparent;\n  border: none;\n  color: #dcdcdc;\n  font-size: 1.5rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #f70073; /* Cor rosa para hover */\n  }\n`;\n_c19 = CloseButton;\nconst ModalDate = styled.p`\n  font-size: 0.9rem;\n  color: #bbb;\n`;\n_c20 = ModalDate;\nconst LoginButton = styled.button`\n  background: #ea4f97; /* Cor rosa para o botão */\n  border: none;\n  border-radius: 5px;\n  color: white;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #f70073; /* Cor rosa mais escura para hover */\n  }\n`;\n_c21 = LoginButton;\nexport default TasksPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n$RefreshReg$(_c, \"TasksPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"WidgetsContainer\");\n$RefreshReg$(_c4, \"TasksWidget\");\n$RefreshReg$(_c5, \"UserWidget\");\n$RefreshReg$(_c6, \"UserInfo\");\n$RefreshReg$(_c7, \"InfoItem\");\n$RefreshReg$(_c8, \"TaskGrid\");\n$RefreshReg$(_c9, \"TaskItem\");\n$RefreshReg$(_c10, \"TaskName\");\n$RefreshReg$(_c11, \"TaskDate\");\n$RefreshReg$(_c12, \"ActionButton\");\n$RefreshReg$(_c13, \"TaskModal\");\n$RefreshReg$(_c14, \"LoginModal\");\n$RefreshReg$(_c15, \"ModalContent\");\n$RefreshReg$(_c16, \"LoginModalContent\");\n$RefreshReg$(_c17, \"ModalHeader\");\n$RefreshReg$(_c18, \"ModalBody\");\n$RefreshReg$(_c19, \"CloseButton\");\n$RefreshReg$(_c20, \"ModalDate\");\n$RefreshReg$(_c21, \"LoginButton\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","styled","keyframes","jwtDecode","CreateTaskModal","jsxDEV","_jsxDEV","capitalizeFirstLetter","string","charAt","toUpperCase","slice","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","fadeIn","TasksPage","_s","username","tasks","setTasks","isAuthenticated","setIsAuthenticated","user","setUser","firstName","email","createdAt","selectedTask","setSelectedTask","showLoginModal","setShowLoginModal","showCreateTaskModal","setShowCreateTaskModal","navigate","token","localStorage","getItem","decodedToken","fullName","name","split","encodeURIComponent","error","console","fetchUserInfo","response","fetch","ok","data","json","statusText","fetchTasks","apiUrl","headers","Authorization","handleViewTask","task","handleCloseModal","handleCloseLoginModal","handleOpenCreateTaskModal","handleCloseCreateTaskModal","handleCreateTask","newTask","prevTasks","Container","children","WidgetsContainer","UserWidget","fileName","_jsxFileName","lineNumber","columnNumber","UserInfo","InfoItem","TasksWidget","ActionButton","onClick","TaskGrid","map","TaskItem","TaskName","taskTitle","TaskDate","id","TaskModal","ModalContent","CloseButton","ModalHeader","ModalDate","ModalBody","taskDescription","taskStatus","LoginModal","LoginModalContent","LoginButton","isOpen","onClose","onCreate","_c","div","_c2","_c3","Widget","_c4","_c5","_c6","_c7","_c8","_c9","h3","_c10","p","_c11","button","_c12","_c13","_c14","_c15","_c16","_c17","_c18","_c19","_c20","_c21","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/TasksPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { jwtDecode } from 'jwt-decode';\nimport CreateTaskModal from './CreateTaskModal'; // Importe o modal\n\nconst capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nconst formatDate = (dateString) => {\n  const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst TasksPage = () => {\n  const { username } = useParams();\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState({ firstName: '', email: '', createdAt: '' });\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showCreateTaskModal, setShowCreateTaskModal] = useState(false); // Estado para controlar o modal de criação\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token'); // Obtém o token do localStorage\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      setIsAuthenticated(true);\n\n      try {\n        const decodedToken = jwtDecode(token);\n        const fullName = decodedToken.name || 'Nome não disponível';\n        const firstName = capitalizeFirstLetter(fullName.split(' ')[0]);\n\n        setUser({\n          firstName,\n          email: decodedToken.email || 'Email não disponível',\n        });\n\n        if (username !== firstName) {\n          navigate(`/tasks/${encodeURIComponent(firstName)}`);\n        }\n      } catch (error) {\n        console.error('Erro ao decodificar o token:', error);\n      }\n    } else {\n      const fetchUserInfo = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/users/user/${encodeURIComponent(username)}`);\n          if (response.ok) {\n            const data = await response.json();\n            setUser({\n              firstName: capitalizeFirstLetter(data.name),\n              email: data.email,\n              createdAt: data.createdAt,\n            });\n          } else {\n            console.error('Erro ao carregar informações do usuário:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Erro ao carregar informações do usuário:', error);\n        }\n      };\n\n      fetchUserInfo();\n    }\n\n    const fetchTasks = async () => {\n      try {\n        const apiUrl = isAuthenticated \n          ? `http://localhost:5000/api/tasks/` \n          : `http://localhost:5000/api/tasks/task/user/${encodeURIComponent(username)}`;\n\n        const response = await fetch(apiUrl, {\n          headers: isAuthenticated ? { Authorization: `Bearer ${token}` } : {},\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data);\n        } else {\n          console.error('Erro ao carregar tarefas:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Erro ao carregar tarefas:', error);\n      }\n    };\n\n    fetchTasks();\n  }, [navigate, username, isAuthenticated, token]);\n\n  const handleViewTask = (task) => {\n    if (isAuthenticated) {\n      setSelectedTask(task);\n    } else {\n      setShowLoginModal(true);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTask(null);\n  };\n\n  const handleCloseLoginModal = () => {\n    setShowLoginModal(false);\n  };\n\n  const handleOpenCreateTaskModal = () => {\n    setShowCreateTaskModal(true);\n  };\n\n  const handleCloseCreateTaskModal = () => {\n    setShowCreateTaskModal(false);\n  };\n\n  const handleCreateTask = (newTask) => {\n    setTasks((prevTasks) => [newTask, ...prevTasks]); // Atualiza a lista de tarefas com a nova tarefa\n  };\n\n  return (\n    <Container>\n      <WidgetsContainer>\n        <UserWidget>\n          <h2>Informações de {user.firstName}</h2>\n          <UserInfo>\n            <InfoItem>\n              <strong>Nome:</strong> {user.firstName}\n            </InfoItem>\n            <InfoItem>\n              <strong>Email:</strong> {user.email}\n            </InfoItem>\n            <InfoItem>\n              <strong>Data de Criação:</strong> {formatDate(user.createdAt)} {/* Exibe a data de criação */}\n            </InfoItem>\n          </UserInfo>\n        </UserWidget>\n        <TasksWidget>\n          <h2>Tarefas de {user.firstName}</h2>\n          <ActionButton onClick={handleOpenCreateTaskModal}>\n            Criar Nova Tarefa\n          </ActionButton>\n          <TaskGrid>\n            {tasks.slice(0, 6).map((task) => (\n              <TaskItem key={task.id}>\n                <TaskName>{task.taskTitle}</TaskName>\n                <TaskDate>{formatDate(task.createdAt)}</TaskDate>\n                <ActionButton\n                  onClick={() => handleViewTask(task)}\n                >\n                  Ver Tarefa\n                </ActionButton>\n              </TaskItem>\n            ))}\n          </TaskGrid>\n        </TasksWidget>\n      </WidgetsContainer>\n\n      {selectedTask && (\n        <TaskModal>\n          <ModalContent>\n            <CloseButton onClick={handleCloseModal}>×</CloseButton>\n            <ModalHeader>\n              <h3>{selectedTask.taskTitle}</h3>\n              <ModalDate>{formatDate(selectedTask.createdAt)}</ModalDate>\n            </ModalHeader>\n            <ModalBody>\n              <p><strong>Descrição:</strong> {selectedTask.taskDescription}</p>\n              <p><strong>Status:</strong> {selectedTask.taskStatus ? 'Concluído' : 'Pendente'}</p>\n            </ModalBody>\n          </ModalContent>\n        </TaskModal>\n      )}\n\n      {showLoginModal && (\n        <LoginModal>\n          <LoginModalContent>\n            <CloseButton onClick={handleCloseLoginModal}>×</CloseButton>\n            <h2>Você precisa estar logado para ver esta tarefa</h2>\n            <LoginButton onClick={() => navigate('/login')}>Login</LoginButton>\n          </LoginModalContent>\n        </LoginModal>\n      )}\n\n      {showCreateTaskModal && (\n        <CreateTaskModal\n          isOpen={showCreateTaskModal}\n          onClose={handleCloseCreateTaskModal}\n          onCreate={handleCreateTask}\n          token={token}\n        />\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  background: url('https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-background.jpg?alt=media&token=ed77c00e-74c3-4580-b494-ce581651ce09') no-repeat center center fixed;\n  background-size: cover;\n  padding: 2rem;\n  min-height: 85vh;\n  align-items: flex-start;\n  color: #dcdcdc; /* Cor de texto mais clara para contraste */\n`;\n\nconst WidgetsContainer = styled.div`\n  display: flex;\n  gap: 2rem;\n  width: 100%;\n  margin-top: 10rem;\n  max-width: 1200px;\n  justify-content: center;\n`;\n\nconst Widget = styled.div`\n  background: rgba(0, 0, 0, 0.8); /* Fundo preto semitransparente */\n  border-radius: 15px;\n  box-shadow: 0 8px 16px rgba(255, 255, 255, 0.2), inset 0 -3px 6px rgba(255, 255, 255, 0.1);\n  padding: 2rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  animation: ${fadeIn} 0.6s ease-in-out;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: 0 12px 24px rgba(255, 255, 255, 0.3), inset 0 -4px 8px rgba(255, 255, 255, 0.2);\n  }\n`;\n\nconst TasksWidget = styled(Widget)`\n  flex: 2;\n  max-width: 750px;\n  background: rgba(0, 0, 0, 0.7);\n  \n  h2 {\n    color: #f70073; /* Cor rosa para o título */\n    font-weight: bold;\n    font-size: 1.8rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst UserWidget = styled(Widget)`\n  flex: 1;\n  max-width: 350px;\n  background: rgba(0, 0, 0, 0.7);\n  \n  h2 {\n    color: #f70073; /* Cor rosa para o título */\n    font-weight: bold;\n    font-size: 1.8rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst UserInfo = styled.div`\n  margin-top: 1.5rem;\n`;\n\nconst InfoItem = styled.div`\n  margin-bottom: 0.75rem;\n  font-size: 1.1rem;\n  color: #dcdcdc;\n`;\n\nconst TaskGrid = styled.div`\n  display: grid;\n  gap: 1rem;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n`;\n\nconst TaskItem = styled.div`\n  background: rgba(0, 0, 0, 0.8); /* Fundo preto semitransparente */\n  border-radius: 8px;\n  padding: 1rem;\n  text-align: center;\n  color: #dcdcdc;\n`;\n\nconst TaskName = styled.h3`\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst TaskDate = styled.p`\n  font-size: 0.9rem;\n  color: #bbb;\n`;\n\nconst ActionButton = styled.button`\n  background: #ea4f97; /* Cor rosa para o botão */\n  border: none;\n  border-radius: 5px;\n  color: white;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  font-size: 1rem;\n  margin-top: 0.5rem;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #f70073; /* Cor rosa mais escura para hover */\n  }\n\n  &:disabled {\n    background: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst TaskModal = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.9); /* Fundo preto semitransparente */\n  color: #dcdcdc;\n  border-radius: 10px;\n  padding: 2rem;\n  width: 80%;\n  max-width: 600px;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);\n`;\n\nconst LoginModal = styled(TaskModal)`\n  background: rgba(0, 0, 0, 0.9); /* Fundo preto semitransparente */\n`;\n\nconst ModalContent = styled.div``;\n\nconst LoginModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ModalHeader = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst ModalBody = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  background: transparent;\n  border: none;\n  color: #dcdcdc;\n  font-size: 1.5rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: #f70073; /* Cor rosa para hover */\n  }\n`;\n\nconst ModalDate = styled.p`\n  font-size: 0.9rem;\n  color: #bbb;\n`;\n\nconst LoginButton = styled.button`\n  background: #ea4f97; /* Cor rosa para o botão */\n  border: none;\n  border-radius: 5px;\n  color: white;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #f70073; /* Cor rosa mais escura para hover */\n  }\n`;\n\nexport default TasksPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}