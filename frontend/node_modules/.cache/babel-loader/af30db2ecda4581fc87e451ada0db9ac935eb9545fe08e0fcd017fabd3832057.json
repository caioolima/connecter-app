{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaBars, FaUserCircle } from 'react-icons/fa';\nimport { jwtDecode } from 'jwt-decode'; // Correção para importar jwtDecode corretamente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setName(decodedToken.name || 'Usuário');\n        localStorage.setItem('name', decodedToken.name || 'Usuário');\n        setIsAuthenticated(true); // Atualiza o estado de autenticação\n      } catch (error) {\n        console.error('Erro ao decodificar o token', error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const handleStorageChange = () => {\n      const token = localStorage.getItem('token');\n      setIsAuthenticated(!!token);\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('name');\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  const toggleUserMenu = () => {\n    setIsUserMenuOpen(!isUserMenuOpen);\n  };\n\n  // Verifica se a rota atual é '/login'\n  const isOnLoginPage = location.pathname === '/login';\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StyledLink, {\n      to: isAuthenticated ? `/tasks/${encodeURIComponent(name)}` : '/',\n      children: /*#__PURE__*/_jsxDEV(Logo, {\n        src: \"https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-logo-preview.png?alt=media&token=08d82f35-dfb6-4552-8024-4efffe218839\",\n        alt: \"Connecter Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(MenuContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MenuIcon, {\n        onClick: toggleMenu,\n        children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UserMenu, {\n        children: [/*#__PURE__*/_jsxDEV(UserIcon, {\n          onClick: toggleUserMenu,\n          children: /*#__PURE__*/_jsxDEV(FaUserCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), isUserMenuOpen && /*#__PURE__*/_jsxDEV(DropdownMenu, {\n          children: [/*#__PURE__*/_jsxDEV(UserName, {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(TaskMenu, {\n        children: [/*#__PURE__*/_jsxDEV(TaskLink, {\n          to: `/tasks/create/${encodeURIComponent(name)}`,\n          children: \"Criar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TaskLink, {\n          to: `/tasks/${encodeURIComponent(name)}`,\n          children: \"Ver Tarefas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : !isOnLoginPage && /*#__PURE__*/_jsxDEV(LoginButton, {\n      to: \"/login\",\n      children: \"Fazer Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n// Estilos aqui permanecem os mesmos\n_s(Header, \"zXzPvRHz8eOx4iLYp1CmQjMYDZg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","styled","FaBars","FaUserCircle","jwtDecode","jsxDEV","_jsxDEV","Header","_s","navigate","location","isMenuOpen","setIsMenuOpen","isUserMenuOpen","setIsUserMenuOpen","name","setName","isAuthenticated","setIsAuthenticated","localStorage","getItem","token","decodedToken","setItem","error","console","handleStorageChange","window","addEventListener","removeEventListener","handleLogout","removeItem","toggleMenu","toggleUserMenu","isOnLoginPage","pathname","Container","children","StyledLink","to","encodeURIComponent","Logo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","MenuContainer","MenuIcon","onClick","UserMenu","UserIcon","DropdownMenu","UserName","LogoutButton","TaskMenu","TaskLink","LoginButton","_c","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaBars, FaUserCircle } from 'react-icons/fa';\nimport { jwtDecode } from 'jwt-decode'; // Correção para importar jwtDecode corretamente\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('token'));\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setName(decodedToken.name || 'Usuário');\n        localStorage.setItem('name', decodedToken.name || 'Usuário');\n        setIsAuthenticated(true); // Atualiza o estado de autenticação\n      } catch (error) {\n        console.error('Erro ao decodificar o token', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      const token = localStorage.getItem('token');\n      setIsAuthenticated(!!token);\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('name');\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const toggleUserMenu = () => {\n    setIsUserMenuOpen(!isUserMenuOpen);\n  };\n\n  // Verifica se a rota atual é '/login'\n  const isOnLoginPage = location.pathname === '/login';\n\n  return (\n    <Container>\n      <StyledLink\n        to={isAuthenticated ? `/tasks/${encodeURIComponent(name)}` : '/'}\n      >\n        <Logo src=\"https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-logo-preview.png?alt=media&token=08d82f35-dfb6-4552-8024-4efffe218839\" alt=\"Connecter Logo\" />\n      </StyledLink>\n      {isAuthenticated ? (\n        <MenuContainer>\n          <MenuIcon onClick={toggleMenu}>\n            <FaBars />\n          </MenuIcon>\n          <UserMenu>\n            <UserIcon onClick={toggleUserMenu}>\n              <FaUserCircle />\n            </UserIcon>\n            {isUserMenuOpen && (\n              <DropdownMenu>\n                <UserName>{name}</UserName>\n                <LogoutButton onClick={handleLogout}>Logout</LogoutButton>\n              </DropdownMenu>\n            )}\n          </UserMenu>\n          {isMenuOpen && (\n            <TaskMenu>\n              <TaskLink to={`/tasks/create/${encodeURIComponent(name)}`}>\n                Criar Tarefa\n              </TaskLink>\n              <TaskLink to={`/tasks/${encodeURIComponent(name)}`}>\n                Ver Tarefas\n              </TaskLink>\n            </TaskMenu>\n          )}\n        </MenuContainer>\n      ) : (\n        !isOnLoginPage && (\n          <LoginButton to=\"/login\">Fazer Login</LoginButton>\n        )\n      )}\n    </Container>\n  );\n};\n\n// Estilos aqui permanecem os mesmos\n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}