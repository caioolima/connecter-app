{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Manager/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// Componente Navbar que recebe callbacks para adicionar tarefa e alterar filtro\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  onAddTaskClick,\n  onFilterChange\n}) => {\n  _s();\n  const [selectedFilter, setSelectedFilter] = useState('all'); // Estado para armazenar o filtro selecionado\n\n  // Função para lidar com a mudança de filtro\n  const handleFilterChange = filter => {\n    setSelectedFilter(filter); // Atualiza o estado com o novo filtro selecionado\n    onFilterChange(filter); // Chama a função de callback passando o novo filtro\n  };\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    children: /*#__PURE__*/_jsxDEV(NavContent, {\n      children: [/*#__PURE__*/_jsxDEV(FilterContainer, {\n        children: [/*#__PURE__*/_jsxDEV(NavButton, {\n          isSelected: selectedFilter === 'all' // Verifica se este botão está selecionado\n          ,\n          onClick: () => handleFilterChange('all') // Altera o filtro para 'all'\n          ,\n          children: \"Todas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n          isSelected: selectedFilter === 'completed' // Verifica se este botão está selecionado\n          ,\n          onClick: () => handleFilterChange('completed') // Altera o filtro para 'completed'\n          ,\n          children: \"Conclu\\xEDdas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n          isSelected: selectedFilter === 'pending' // Verifica se este botão está selecionado\n          ,\n          onClick: () => handleFilterChange('pending') // Altera o filtro para 'pending'\n          ,\n          children: \"Pendentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddTaskButton, {\n        onClick: onAddTaskClick,\n        children: \"Adicionar Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n// Estilos do Navbar\n_s(Navbar, \"u01VDmmAE7SNEcT2ycrmaiLXb2c=\");\n_c = Navbar;\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: center; /* Centraliza os itens horizontalmente */\n  align-items: center; /* Centraliza os itens verticalmente */\n  padding: 0.5rem 1rem; /* Espaçamento interno do nav */\n  background-color: #000; /* Cor de fundo preta */\n  margin-top: 6rem; /* Espaço acima do nav */\n  color: #fff; /* Cor do texto branca */\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3); /* Sombra do nav */\n  width: 100%; /* Largura total do contêiner */\n  box-sizing: border-box; /* Inclui padding e border no cálculo da largura e altura */\n`;\n_c2 = Nav;\nconst NavContent = styled.div`\n  display: flex;\n  flex-direction: column; /* Layout em coluna por padrão */\n  align-items: center; /* Alinha itens ao centro */\n  width: 99%; /* Largura do contêiner um pouco menor que 100% */\n  box-sizing: border-box; /* Inclui padding e border no cálculo da largura e altura */\n  \n  @media (min-width: 768px) {\n    flex-direction: row; /* Alinha itens em linha em telas maiores */\n    justify-content: space-between; /* Espaça itens igualmente */\n  }\n`;\n_c3 = NavContent;\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-wrap: nowrap; /* Não permite quebra de linha dos itens */\n  gap: 12px; /* Espaço entre os itens */\n  justify-content: center; /* Centraliza os itens horizontalmente */\n  margin-bottom: 1rem; /* Espaço abaixo do contêiner de filtros */\n\n  @media (min-width: 768px) {\n    margin-bottom: 0; /* Remove o espaço abaixo em telas maiores */\n  }\n`;\n_c4 = FilterContainer;\nconst NavButton = styled.button`\n  background-color: ${({\n  isSelected\n}) => isSelected ? '#444' : '#222'}; /* Cor de fundo dependendo se o botão está selecionado */\n  color: #fff; /* Cor do texto branca */\n  border: 1px solid ${({\n  isSelected\n}) => isSelected ? '#666' : '#444'}; /* Borda dependendo se o botão está selecionado */\n  border-radius: 5px; /* Bordas arredondadas */\n  padding: 12px 20px; /* Espaçamento interno do botão */\n  cursor: pointer; /* Cursor de ponteiro ao passar sobre o botão */\n  transition: background-color 0.3s, transform 0.2s; /* Transições suaves para cor de fundo e transformação */\n  font-size: 1rem; /* Tamanho da fonte */\n  white-space: nowrap; /* Impede a quebra de linha do texto */\n\n  transform: ${({\n  isSelected\n}) => isSelected ? 'scale(1.05)' : 'none'}; /* Aumenta o botão quando selecionado */\n\n  &:hover {\n    background-color: #333; /* Cor de fundo quando o botão é hover */\n  }\n`;\n_c5 = NavButton;\nconst AddTaskButton = styled.button`\n  background-color: #ea4f97; /* Cor de fundo do botão de adicionar tarefa */\n  color: #fff; /* Cor do texto branca */\n  border-radius: 5px; /* Bordas arredondadas */\n  padding: 12px 20px; /* Espaçamento interno do botão */\n  cursor: pointer; /* Cursor de ponteiro ao passar sobre o botão */\n  transition: background-color 0.3s, color 0.3s; /* Transições suaves para cor de fundo e texto */\n  font-size: 1rem; /* Tamanho da fonte */\n\n  &:hover {\n    background-color: #d43f82; /* Cor de fundo quando o botão é hover */\n  }\n\n  @media (min-width: 768px) {\n    margin-left: auto; /* Alinha o botão de adicionar tarefa à direita em telas maiores */\n  }\n`;\n_c6 = AddTaskButton;\nexport default Navbar;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Nav\");\n$RefreshReg$(_c3, \"NavContent\");\n$RefreshReg$(_c4, \"FilterContainer\");\n$RefreshReg$(_c5, \"NavButton\");\n$RefreshReg$(_c6, \"AddTaskButton\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","Navbar","onAddTaskClick","onFilterChange","_s","selectedFilter","setSelectedFilter","handleFilterChange","filter","Nav","children","NavContent","FilterContainer","NavButton","isSelected","onClick","fileName","_jsxFileName","lineNumber","columnNumber","AddTaskButton","_c","nav","_c2","div","_c3","_c4","button","_c5","_c6","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Manager/Navbar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n// Componente Navbar que recebe callbacks para adicionar tarefa e alterar filtro\nconst Navbar = ({ onAddTaskClick, onFilterChange }) => {\n  const [selectedFilter, setSelectedFilter] = useState('all'); // Estado para armazenar o filtro selecionado\n\n  // Função para lidar com a mudança de filtro\n  const handleFilterChange = (filter) => {\n    setSelectedFilter(filter); // Atualiza o estado com o novo filtro selecionado\n    onFilterChange(filter); // Chama a função de callback passando o novo filtro\n  };\n\n  return (\n    <Nav>\n      <NavContent>\n        <FilterContainer>\n          <NavButton\n            isSelected={selectedFilter === 'all'} // Verifica se este botão está selecionado\n            onClick={() => handleFilterChange('all')} // Altera o filtro para 'all'\n          >\n            Todas\n          </NavButton>\n          <NavButton\n            isSelected={selectedFilter === 'completed'} // Verifica se este botão está selecionado\n            onClick={() => handleFilterChange('completed')} // Altera o filtro para 'completed'\n          >\n            Concluídas\n          </NavButton>\n          <NavButton\n            isSelected={selectedFilter === 'pending'} // Verifica se este botão está selecionado\n            onClick={() => handleFilterChange('pending')} // Altera o filtro para 'pending'\n          >\n            Pendentes\n          </NavButton>\n        </FilterContainer>\n        <AddTaskButton onClick={onAddTaskClick}>\n          Adicionar Tarefa\n        </AddTaskButton>\n      </NavContent>\n    </Nav>\n  );\n};\n\n// Estilos do Navbar\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: center; /* Centraliza os itens horizontalmente */\n  align-items: center; /* Centraliza os itens verticalmente */\n  padding: 0.5rem 1rem; /* Espaçamento interno do nav */\n  background-color: #000; /* Cor de fundo preta */\n  margin-top: 6rem; /* Espaço acima do nav */\n  color: #fff; /* Cor do texto branca */\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3); /* Sombra do nav */\n  width: 100%; /* Largura total do contêiner */\n  box-sizing: border-box; /* Inclui padding e border no cálculo da largura e altura */\n`;\n\nconst NavContent = styled.div`\n  display: flex;\n  flex-direction: column; /* Layout em coluna por padrão */\n  align-items: center; /* Alinha itens ao centro */\n  width: 99%; /* Largura do contêiner um pouco menor que 100% */\n  box-sizing: border-box; /* Inclui padding e border no cálculo da largura e altura */\n  \n  @media (min-width: 768px) {\n    flex-direction: row; /* Alinha itens em linha em telas maiores */\n    justify-content: space-between; /* Espaça itens igualmente */\n  }\n`;\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-wrap: nowrap; /* Não permite quebra de linha dos itens */\n  gap: 12px; /* Espaço entre os itens */\n  justify-content: center; /* Centraliza os itens horizontalmente */\n  margin-bottom: 1rem; /* Espaço abaixo do contêiner de filtros */\n\n  @media (min-width: 768px) {\n    margin-bottom: 0; /* Remove o espaço abaixo em telas maiores */\n  }\n`;\n\nconst NavButton = styled.button`\n  background-color: ${({ isSelected }) => (isSelected ? '#444' : '#222')}; /* Cor de fundo dependendo se o botão está selecionado */\n  color: #fff; /* Cor do texto branca */\n  border: 1px solid ${({ isSelected }) => (isSelected ? '#666' : '#444')}; /* Borda dependendo se o botão está selecionado */\n  border-radius: 5px; /* Bordas arredondadas */\n  padding: 12px 20px; /* Espaçamento interno do botão */\n  cursor: pointer; /* Cursor de ponteiro ao passar sobre o botão */\n  transition: background-color 0.3s, transform 0.2s; /* Transições suaves para cor de fundo e transformação */\n  font-size: 1rem; /* Tamanho da fonte */\n  white-space: nowrap; /* Impede a quebra de linha do texto */\n\n  transform: ${({ isSelected }) => (isSelected ? 'scale(1.05)' : 'none')}; /* Aumenta o botão quando selecionado */\n\n  &:hover {\n    background-color: #333; /* Cor de fundo quando o botão é hover */\n  }\n`;\n\nconst AddTaskButton = styled.button`\n  background-color: #ea4f97; /* Cor de fundo do botão de adicionar tarefa */\n  color: #fff; /* Cor do texto branca */\n  border-radius: 5px; /* Bordas arredondadas */\n  padding: 12px 20px; /* Espaçamento interno do botão */\n  cursor: pointer; /* Cursor de ponteiro ao passar sobre o botão */\n  transition: background-color 0.3s, color 0.3s; /* Transições suaves para cor de fundo e texto */\n  font-size: 1rem; /* Tamanho da fonte */\n\n  &:hover {\n    background-color: #d43f82; /* Cor de fundo quando o botão é hover */\n  }\n\n  @media (min-width: 768px) {\n    margin-left: auto; /* Alinha o botão de adicionar tarefa à direita em telas maiores */\n  }\n`;\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}