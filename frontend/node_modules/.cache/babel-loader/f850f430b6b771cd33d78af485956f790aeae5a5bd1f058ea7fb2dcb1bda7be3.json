{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Header/TaskMenu.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport { FaTasks } from 'react-icons/fa';\nimport useClickOutside from '../../hooks/useClickOutside';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskMenu = ({\n  onViewTasks,\n  onClose\n}) => {\n  _s();\n  const ref = useClickOutside(onClose);\n  return /*#__PURE__*/_jsxDEV(TaskMenuContainer, {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(TaskLink, {\n      onClick: () => {\n        onViewTasks();\n        onClose(); // Fecha o menu após clicar no link\n      },\n      children: [/*#__PURE__*/_jsxDEV(TaskIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), \"Gerenciar Tarefas\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskMenu, \"1sJMpEt0osajCeVHlaDK0MMU90I=\", false, function () {\n  return [useClickOutside];\n});\n_c = TaskMenu;\nconst TaskMenuContainer = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background-color: #1e1e1e;\n  border-radius: 10px;\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.4);\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  z-index: 1000;\n  min-width: 200px;\n`;\n_c2 = TaskMenuContainer;\nconst TaskLink = styled.div`\n  color: #f0f0f0;\n  text-decoration: none;\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: #2c2c2c;\n    transform: translateX(8px);\n  }\n\n  &:focus {\n    outline: 3px solid #1e90ff;\n    outline-offset: 4px;\n  }\n`;\n_c3 = TaskLink;\nconst TaskIcon = styled(FaTasks)`\n  margin-right: 0.5rem;\n  color: #ffdd57;\n`;\n_c4 = TaskIcon;\nexport default TaskMenu;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TaskMenu\");\n$RefreshReg$(_c2, \"TaskMenuContainer\");\n$RefreshReg$(_c3, \"TaskLink\");\n$RefreshReg$(_c4, \"TaskIcon\");","map":{"version":3,"names":["React","styled","FaTasks","useClickOutside","jsxDEV","_jsxDEV","TaskMenu","onViewTasks","onClose","_s","ref","TaskMenuContainer","children","TaskLink","onClick","TaskIcon","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","_c3","_c4","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Header/TaskMenu.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { FaTasks } from 'react-icons/fa';\nimport useClickOutside from '../../hooks/useClickOutside';\n\nconst TaskMenu = ({ onViewTasks, onClose }) => {\n  const ref = useClickOutside(onClose);\n\n  return (\n    <TaskMenuContainer ref={ref}>\n      <TaskLink onClick={() => {\n        onViewTasks();\n        onClose(); // Fecha o menu após clicar no link\n      }}>\n        <TaskIcon />\n        Gerenciar Tarefas\n      </TaskLink>\n    </TaskMenuContainer>\n  );\n};\n\nconst TaskMenuContainer = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  background-color: #1e1e1e;\n  border-radius: 10px;\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.4);\n  padding: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  z-index: 1000;\n  min-width: 200px;\n`;\n\nconst TaskLink = styled.div`\n  color: #f0f0f0;\n  text-decoration: none;\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  font-size: 1rem;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    background-color: #2c2c2c;\n    transform: translateX(8px);\n  }\n\n  &:focus {\n    outline: 3px solid #1e90ff;\n    outline-offset: 4px;\n  }\n`;\n\nconst TaskIcon = styled(FaTasks)`\n  margin-right: 0.5rem;\n  color: #ffdd57;\n`;\n\nexport default TaskMenu;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,eAAe,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAMC,GAAG,GAAGP,eAAe,CAACK,OAAO,CAAC;EAEpC,oBACEH,OAAA,CAACM,iBAAiB;IAACD,GAAG,EAAEA,GAAI;IAAAE,QAAA,eAC1BP,OAAA,CAACQ,QAAQ;MAACC,OAAO,EAAEA,CAAA,KAAM;QACvBP,WAAW,CAAC,CAAC;QACbC,OAAO,CAAC,CAAC,CAAC,CAAC;MACb,CAAE;MAAAI,QAAA,gBACAP,OAAA,CAACU,QAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,qBAEd;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAExB,CAAC;AAACV,EAAA,CAdIH,QAAQ;EAAA,QACAH,eAAe;AAAA;AAAAiB,EAAA,GADvBd,QAAQ;AAgBd,MAAMK,iBAAiB,GAAGV,MAAM,CAACoB,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIX,iBAAiB;AAevB,MAAME,QAAQ,GAAGZ,MAAM,CAACoB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACE,GAAA,GApBIV,QAAQ;AAsBd,MAAME,QAAQ,GAAGd,MAAM,CAACC,OAAO,CAAC;AAChC;AACA;AACA,CAAC;AAACsB,GAAA,GAHIT,QAAQ;AAKd,eAAeT,QAAQ;AAAC,IAAAc,EAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}