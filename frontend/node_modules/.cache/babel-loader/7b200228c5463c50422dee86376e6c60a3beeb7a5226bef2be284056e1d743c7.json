{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Manager/TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DropdownMenu from './DropdownMenu';\nimport styles from './TaskManager.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  onEdit,\n  onDelete,\n  onComplete\n}) => {\n  _s();\n  const [hoveredTask, setHoveredTask] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.taskItem} ${hoveredTask === task.id ? styles.taskItemHover : ''}`,\n    onMouseEnter: () => setHoveredTask(task.id),\n    onMouseLeave: () => setHoveredTask(null),\n    children: [/*#__PURE__*/_jsxDEV(DropdownMenu, {\n      onEdit: () => onEdit(task),\n      onDelete: () => onDelete(task.id),\n      onComplete: () => onComplete(task.id),\n      isCompleted: task.taskStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.taskContent,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.taskTitle,\n        children: [\"T\\xEDtulo: \", task.taskTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.taskDescription,\n        children: [\"Descri\\xE7\\xE3o: \", task.taskDescription]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.taskCreatedAt,\n        children: [\"Criado em: \", new Date(task.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.taskStatus,\n        children: [\"Status: \", task.taskStatus ? 'Concluída' : 'Pendente']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"6cdaWonDqgvbqh7WBJuQcRFaDLk=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","DropdownMenu","styles","jsxDEV","_jsxDEV","TaskItem","task","onEdit","onDelete","onComplete","_s","hoveredTask","setHoveredTask","className","taskItem","id","taskItemHover","onMouseEnter","onMouseLeave","children","isCompleted","taskStatus","fileName","_jsxFileName","lineNumber","columnNumber","taskContent","taskTitle","taskDescription","taskCreatedAt","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Manager/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react';\nimport DropdownMenu from './DropdownMenu';\nimport styles from './TaskManager.module.css';\n\nconst TaskItem = ({ task, onEdit, onDelete, onComplete }) => {\n  const [hoveredTask, setHoveredTask] = useState(null);\n\n  return (\n    <div \n      className={`${styles.taskItem} ${hoveredTask === task.id ? styles.taskItemHover : ''}`}\n      onMouseEnter={() => setHoveredTask(task.id)}\n      onMouseLeave={() => setHoveredTask(null)}\n    >\n      <DropdownMenu\n        onEdit={() => onEdit(task)}\n        onDelete={() => onDelete(task.id)}\n        onComplete={() => onComplete(task.id)}\n        isCompleted={task.taskStatus}\n      />\n      <div className={styles.taskContent}>\n        <h3 className={styles.taskTitle}>Título: {task.taskTitle}</h3>\n        <p className={styles.taskDescription}>Descrição: {task.taskDescription}</p>\n        <p className={styles.taskCreatedAt}>Criado em: {new Date(task.createdAt).toLocaleString()}</p>\n        <p className={styles.taskStatus}>\n          Status: {task.taskStatus ? 'Concluída' : 'Pendente'}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpD,oBACEI,OAAA;IACES,SAAS,EAAE,GAAGX,MAAM,CAACY,QAAQ,IAAIH,WAAW,KAAKL,IAAI,CAACS,EAAE,GAAGb,MAAM,CAACc,aAAa,GAAG,EAAE,EAAG;IACvFC,YAAY,EAAEA,CAAA,KAAML,cAAc,CAACN,IAAI,CAACS,EAAE,CAAE;IAC5CG,YAAY,EAAEA,CAAA,KAAMN,cAAc,CAAC,IAAI,CAAE;IAAAO,QAAA,gBAEzCf,OAAA,CAACH,YAAY;MACXM,MAAM,EAAEA,CAAA,KAAMA,MAAM,CAACD,IAAI,CAAE;MAC3BE,QAAQ,EAAEA,CAAA,KAAMA,QAAQ,CAACF,IAAI,CAACS,EAAE,CAAE;MAClCN,UAAU,EAAEA,CAAA,KAAMA,UAAU,CAACH,IAAI,CAACS,EAAE,CAAE;MACtCK,WAAW,EAAEd,IAAI,CAACe;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFrB,OAAA;MAAKS,SAAS,EAAEX,MAAM,CAACwB,WAAY;MAAAP,QAAA,gBACjCf,OAAA;QAAIS,SAAS,EAAEX,MAAM,CAACyB,SAAU;QAAAR,QAAA,GAAC,aAAQ,EAACb,IAAI,CAACqB,SAAS;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9DrB,OAAA;QAAGS,SAAS,EAAEX,MAAM,CAAC0B,eAAgB;QAAAT,QAAA,GAAC,mBAAW,EAACb,IAAI,CAACsB,eAAe;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3ErB,OAAA;QAAGS,SAAS,EAAEX,MAAM,CAAC2B,aAAc;QAAAV,QAAA,GAAC,aAAW,EAAC,IAAIW,IAAI,CAACxB,IAAI,CAACyB,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9FrB,OAAA;QAAGS,SAAS,EAAEX,MAAM,CAACmB,UAAW;QAAAF,QAAA,GAAC,UACvB,EAACb,IAAI,CAACe,UAAU,GAAG,WAAW,GAAG,UAAU;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBIL,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}