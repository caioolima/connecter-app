{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// Componentes estilizados\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n_c = Container;\nconst Heading = styled.h2`\n  text-align: center;\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: #333;\n`;\n_c2 = Heading;\nconst TaskListContainer = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n_c3 = TaskListContainer;\nconst TaskItem = styled.li`\n  padding: 15px;\n  margin-bottom: 10px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n`;\n_c4 = TaskItem;\nconst TaskTitle = styled.h3`\n  font-size: 18px;\n  margin: 0 0 5px;\n  color: #555;\n`;\n_c5 = TaskTitle;\nconst TaskDescription = styled.p`\n  font-size: 14px;\n  margin: 0 0 10px;\n  color: #777;\n`;\n_c6 = TaskDescription;\nconst TaskStatus = styled.p`\n  font-size: 14px;\n  color: ${({\n  completed\n}) => completed ? 'green' : 'red'};\n  margin-bottom: 10px;\n`;\n_c7 = TaskStatus;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n_c8 = ButtonGroup;\nconst Button = styled.button`\n  padding: 8px 12px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: ${({\n  variant\n}) => variant === 'complete' ? '#16bb1f' : variant === 'edit' ? '#4bc5f5' : '#f70073'};\n    color: white;\n  }\n\n  background-color: ${({\n  variant\n}) => variant === 'complete' ? '#41ee4a' : variant === 'edit' ? '#4bc5f5' : '#ea4f97'};\n  color: #fff;\n`;\n_c9 = Button;\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Função para buscar as tarefas do usuário logado\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/task', {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}` // Assumindo que o token JWT está salvo no localStorage\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n      const data = await response.json();\n      setTasks(data);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Função para excluir uma tarefa\n  const deleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/task/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete task');\n      }\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  // Função para marcar uma tarefa como concluída\n  const completeTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/task/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to complete task');\n      }\n      const updatedTask = await response.json();\n      setTasks(tasks.map(task => task.id === taskId ? updatedTask.userTask : task));\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  // Função para editar uma tarefa\n  const editTask = async (taskId, newTitle, newDescription) => {\n    try {\n      const response = await fetch(`http://localhost:5000/task/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          title: newTitle,\n          description: newDescription\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to edit task');\n      }\n      const updatedTask = await response.json();\n      setTasks(tasks.map(task => task.id === taskId ? updatedTask.userTask : task));\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading tasks...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"My Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskListContainer, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        children: [/*#__PURE__*/_jsxDEV(TaskTitle, {\n          children: task.taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskDescription, {\n          children: task.taskDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskStatus, {\n          completed: task.taskStatus,\n          children: [\"Status: \", task.taskStatus ? 'Completed' : 'Pending']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"complete\",\n            onClick: () => completeTask(task.id),\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"edit\",\n            onClick: () => editTask(task.id, 'New Title', 'New Description'),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"delete\",\n            onClick: () => deleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"26pFup7jtL6OJ6wPzUtWbVs2CLY=\");\n_c10 = TaskList;\nexport default TaskList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Heading\");\n$RefreshReg$(_c3, \"TaskListContainer\");\n$RefreshReg$(_c4, \"TaskItem\");\n$RefreshReg$(_c5, \"TaskTitle\");\n$RefreshReg$(_c6, \"TaskDescription\");\n$RefreshReg$(_c7, \"TaskStatus\");\n$RefreshReg$(_c8, \"ButtonGroup\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c10, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","styled","jsxDEV","_jsxDEV","Container","div","_c","Heading","h2","_c2","TaskListContainer","ul","_c3","TaskItem","li","_c4","TaskTitle","h3","_c5","TaskDescription","p","_c6","TaskStatus","completed","_c7","ButtonGroup","_c8","Button","button","variant","_c9","TaskList","_s","tasks","setTasks","isLoading","setIsLoading","error","setError","fetchTasks","response","fetch","headers","Authorization","localStorage","getItem","ok","Error","data","json","message","deleteTask","taskId","method","filter","task","id","alert","completeTask","updatedTask","map","userTask","editTask","newTitle","newDescription","body","JSON","stringify","title","description","children","fileName","_jsxFileName","lineNumber","columnNumber","taskTitle","taskDescription","taskStatus","onClick","_c10","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\n// Componentes estilizados\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst Heading = styled.h2`\n  text-align: center;\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: #333;\n`;\n\nconst TaskListContainer = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n\nconst TaskItem = styled.li`\n  padding: 15px;\n  margin-bottom: 10px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TaskTitle = styled.h3`\n  font-size: 18px;\n  margin: 0 0 5px;\n  color: #555;\n`;\n\nconst TaskDescription = styled.p`\n  font-size: 14px;\n  margin: 0 0 10px;\n  color: #777;\n`;\n\nconst TaskStatus = styled.p`\n  font-size: 14px;\n  color: ${({ completed }) => (completed ? 'green' : 'red')};\n  margin-bottom: 10px;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst Button = styled.button`\n  padding: 8px 12px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n\n  &:hover {\n    background-color: ${({ variant }) =>\n      variant === 'complete' ? '#16bb1f' : variant === 'edit' ? '#4bc5f5' : '#f70073'};\n    color: white;\n  }\n\n  background-color: ${({ variant }) =>\n    variant === 'complete' ? '#41ee4a' : variant === 'edit' ? '#4bc5f5' : '#ea4f97'};\n  color: #fff;\n`;\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Função para buscar as tarefas do usuário logado\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/task', {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`, // Assumindo que o token JWT está salvo no localStorage\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch tasks');\n      }\n\n      const data = await response.json();\n      setTasks(data);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Função para excluir uma tarefa\n  const deleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/task/${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete task');\n      }\n\n      setTasks(tasks.filter((task) => task.id !== taskId));\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  // Função para marcar uma tarefa como concluída\n  const completeTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/task/${taskId}/complete`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to complete task');\n      }\n\n      const updatedTask = await response.json();\n      setTasks(tasks.map((task) => (task.id === taskId ? updatedTask.userTask : task)));\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  // Função para editar uma tarefa\n  const editTask = async (taskId, newTitle, newDescription) => {\n    try {\n      const response = await fetch(`http://localhost:5000/task/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify({ title: newTitle, description: newDescription }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to edit task');\n      }\n\n      const updatedTask = await response.json();\n      setTasks(tasks.map((task) => (task.id === taskId ? updatedTask.userTask : task)));\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  if (isLoading) return <p>Loading tasks...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <Container>\n      <Heading>My Tasks</Heading>\n      <TaskListContainer>\n        {tasks.map((task) => (\n          <TaskItem key={task.id}>\n            <TaskTitle>{task.taskTitle}</TaskTitle>\n            <TaskDescription>{task.taskDescription}</TaskDescription>\n            <TaskStatus completed={task.taskStatus}>\n              Status: {task.taskStatus ? 'Completed' : 'Pending'}\n            </TaskStatus>\n            <ButtonGroup>\n              <Button variant=\"complete\" onClick={() => completeTask(task.id)}>Complete</Button>\n              <Button variant=\"edit\" onClick={() => editTask(task.id, 'New Title', 'New Description')}>Edit</Button>\n              <Button variant=\"delete\" onClick={() => deleteTask(task.id)}>Delete</Button>\n            </ButtonGroup>\n          </TaskItem>\n        ))}\n      </TaskListContainer>\n    </Container>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}