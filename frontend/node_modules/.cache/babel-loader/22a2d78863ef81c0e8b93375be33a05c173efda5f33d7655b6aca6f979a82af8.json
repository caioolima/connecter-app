{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Header/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaBars } from 'react-icons/fa';\nimport UserMenu from './UserMenu';\nimport TaskMenu from './TaskMenu';\nimport { useAuth } from '../../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isTaskMenuOpen, setIsTaskMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const {\n    verificAuth,\n    userInfo,\n    logout,\n    token\n  } = useAuth();\n\n  // Atualiza o estado do menu quando verificAuth ou token muda\n  useEffect(() => {\n    if (verificAuth && token) {\n      // Navegar para a página de tarefas se estiver na página de login\n      if (location.pathname === '/login') {\n        navigate(`/tasks/${encodeURIComponent(userInfo.username)}`);\n      }\n    }\n  }, [verificAuth, token, location.pathname, navigate, userInfo.username]);\n\n  // Fechar os menus ao trocar de página\n  useEffect(() => {\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  }, [location.pathname]);\n  const toggleTaskMenu = () => {\n    setIsTaskMenuOpen(prevState => !prevState);\n    setIsUserMenuOpen(false);\n  };\n  const toggleUserMenu = () => {\n    setIsUserMenuOpen(prevState => !prevState);\n    setIsTaskMenuOpen(false);\n  };\n  const handleViewTasks = () => {\n    navigate('/user-tasks');\n    setIsTaskMenuOpen(false);\n  };\n  const handleLogout = () => {\n    logout();\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StyledLink, {\n      to: verificAuth ? `/tasks/${encodeURIComponent(userInfo.username)}` : '/',\n      children: /*#__PURE__*/_jsxDEV(Logo, {\n        src: \"https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-logo-preview.png?alt=media&token=5891cb1a-9b80-4908-ba62-ebf81bbeb46a\",\n        alt: \"Connecter Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), verificAuth ? /*#__PURE__*/_jsxDEV(MenuContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MenuIcon, {\n        onClick: toggleTaskMenu,\n        children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), isTaskMenuOpen && /*#__PURE__*/_jsxDEV(TaskMenu, {\n        onViewTasks: handleViewTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(UserMenu, {\n        name: userInfo.fullName,\n        onLogout: handleLogout,\n        onClick: toggleUserMenu,\n        isOpen: isUserMenuOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginButton, {\n      to: \"/login\",\n      children: \"Fazer Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"lcPTRpF8OXh5rtDYNQAJ5KOP6lQ=\", false, function () {\n  return [useNavigate, useLocation, useAuth];\n});\n_c = Header;\nconst Container = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: rgba(0, 0, 0, 0.6);\n  height: 80px;\n  padding: 0 20px;\n  margin: 0;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  position: fixed;\n  backdrop-filter: blur(8px);\n`;\n_c2 = Container;\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  height: 100%;\n`;\n_c3 = StyledLink;\nconst Logo = styled.img`\n  height: 30px;\n  width: auto;\n  cursor: pointer;\n`;\n_c4 = Logo;\nconst MenuContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  color: #fff;\n  margin-right: 2rem;\n`;\n_c5 = MenuContainer;\nconst MenuIcon = styled.div`\n  font-size: 1.8rem;\n  cursor: pointer;\n  margin-right: 1.5rem;\n  color: #fff;\n`;\n_c6 = MenuIcon;\nconst LoginButton = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n  background-color: #000;\n  margin-right: 2rem;\n  padding: 0.6rem 1.2rem;\n  border: 3px solid #fff;\n  border-radius: 6px;\n  font-weight: bold;\n  font-size: 1rem;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover {\n    background-color: #fff;\n    color: #000;\n  }\n`;\n_c7 = LoginButton;\nexport default Header;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"StyledLink\");\n$RefreshReg$(_c4, \"Logo\");\n$RefreshReg$(_c5, \"MenuContainer\");\n$RefreshReg$(_c6, \"MenuIcon\");\n$RefreshReg$(_c7, \"LoginButton\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","styled","FaBars","UserMenu","TaskMenu","useAuth","jsxDEV","_jsxDEV","Header","_s","navigate","location","isTaskMenuOpen","setIsTaskMenuOpen","isUserMenuOpen","setIsUserMenuOpen","verificAuth","userInfo","logout","token","pathname","encodeURIComponent","username","toggleTaskMenu","prevState","toggleUserMenu","handleViewTasks","handleLogout","Container","children","StyledLink","to","Logo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","MenuContainer","MenuIcon","onClick","onViewTasks","name","fullName","onLogout","isOpen","LoginButton","_c","header","_c2","_c3","img","_c4","div","_c5","_c6","_c7","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaBars } from 'react-icons/fa';\nimport UserMenu from './UserMenu';\nimport TaskMenu from './TaskMenu';\nimport { useAuth } from '../../hooks/useAuth';\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isTaskMenuOpen, setIsTaskMenuOpen] = useState(false);\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const { verificAuth, userInfo, logout, token } = useAuth();\n\n  // Atualiza o estado do menu quando verificAuth ou token muda\n  useEffect(() => {\n    if (verificAuth && token) {\n      // Navegar para a página de tarefas se estiver na página de login\n      if (location.pathname === '/login') {\n        navigate(`/tasks/${encodeURIComponent(userInfo.username)}`);\n      }\n    }\n  }, [verificAuth, token, location.pathname, navigate, userInfo.username]);\n\n  // Fechar os menus ao trocar de página\n  useEffect(() => {\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  }, [location.pathname]);\n\n  const toggleTaskMenu = () => {\n    setIsTaskMenuOpen(prevState => !prevState);\n    setIsUserMenuOpen(false);\n  };\n\n  const toggleUserMenu = () => {\n    setIsUserMenuOpen(prevState => !prevState);\n    setIsTaskMenuOpen(false);\n  };\n\n  const handleViewTasks = () => {\n    navigate('/user-tasks');\n    setIsTaskMenuOpen(false);\n  };\n\n  const handleLogout = () => {\n    logout();\n    setIsTaskMenuOpen(false);\n    setIsUserMenuOpen(false);\n  };\n\n  return (\n    <Container>\n      <StyledLink to={verificAuth ? `/tasks/${encodeURIComponent(userInfo.username)}` : '/'}>\n        <Logo src=\"https://firebasestorage.googleapis.com/v0/b/connectrip-10205.appspot.com/o/task%2Fconnecter-logo-preview.png?alt=media&token=5891cb1a-9b80-4908-ba62-ebf81bbeb46a\" alt=\"Connecter Logo\" />\n      </StyledLink>\n      {verificAuth ? (\n        <MenuContainer>\n          <MenuIcon onClick={toggleTaskMenu}>\n            <FaBars />\n          </MenuIcon>\n          {isTaskMenuOpen && (\n            <TaskMenu onViewTasks={handleViewTasks} />\n          )}\n          <UserMenu\n            name={userInfo.fullName}\n            onLogout={handleLogout}\n            onClick={toggleUserMenu}\n            isOpen={isUserMenuOpen}\n          />\n        </MenuContainer>\n      ) : (\n        <LoginButton to=\"/login\">Fazer Login</LoginButton>\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: rgba(0, 0, 0, 0.6);\n  height: 80px;\n  padding: 0 20px;\n  margin: 0;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  position: fixed;\n  backdrop-filter: blur(8px);\n`;\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  height: 100%;\n`;\n\nconst Logo = styled.img`\n  height: 30px;\n  width: auto;\n  cursor: pointer;\n`;\n\nconst MenuContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  color: #fff;\n  margin-right: 2rem;\n`;\n\nconst MenuIcon = styled.div`\n  font-size: 1.8rem;\n  cursor: pointer;\n  margin-right: 1.5rem;\n  color: #fff;\n`;\n\nconst LoginButton = styled(Link)`\n  color: #fff;\n  text-decoration: none;\n  background-color: #000;\n  margin-right: 2rem;\n  padding: 0.6rem 1.2rem;\n  border: 3px solid #fff;\n  border-radius: 6px;\n  font-weight: bold;\n  font-size: 1rem;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover {\n    background-color: #fff;\n    color: #000;\n  }\n`;\n\nexport default Header;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}