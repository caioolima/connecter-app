{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/CreateTaskModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTaskModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Adicione a lógica para criar a tarefa aqui\n    console.log('Creating task:', {\n      title,\n      description\n    });\n    onClose(); // Fechar o modal após a criação da tarefa\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(ModalOverlay, {\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Criar Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"T\\xEDtulo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Descri\\xE7\\xE3o:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Criar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Fechar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTaskModal, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = CreateTaskModal;\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c2 = ModalOverlay;\nconst ModalContent = styled.div`\n  background: #fff;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  width: 400px;\n  text-align: center;\n`;\n_c3 = ModalContent;\nexport default CreateTaskModal;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CreateTaskModal\");\n$RefreshReg$(_c2, \"ModalOverlay\");\n$RefreshReg$(_c3, \"ModalContent\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","CreateTaskModal","isOpen","onClose","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","console","log","ModalOverlay","children","ModalContent","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","div","_c2","_c3","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/CreateTaskModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst CreateTaskModal = ({ isOpen, onClose }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Adicione a lógica para criar a tarefa aqui\n    console.log('Creating task:', { title, description });\n    onClose(); // Fechar o modal após a criação da tarefa\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <ModalOverlay>\n      <ModalContent>\n        <h2>Criar Tarefa</h2>\n        <form onSubmit={handleSubmit}>\n          <label>\n            Título:\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n          </label>\n          <label>\n            Descrição:\n            <textarea\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n            />\n          </label>\n          <button type=\"submit\">Criar Tarefa</button>\n        </form>\n        <button onClick={onClose}>Fechar</button>\n      </ModalContent>\n    </ModalOverlay>\n  );\n};\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ModalContent = styled.div`\n  background: #fff;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  width: 400px;\n  text-align: center;\n`;\n\nexport default CreateTaskModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}