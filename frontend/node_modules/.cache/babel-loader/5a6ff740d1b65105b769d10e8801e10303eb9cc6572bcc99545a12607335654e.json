{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all'); // Filtros: 'all', 'completed', 'pending'\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: ''\n  });\n  const {\n    token,\n    userInfo\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token || !(userInfo !== null && userInfo !== void 0 && userInfo.username)) return;\n      try {\n        const response = await fetch(`http://localhost:5000/api/manager/tasks/${userInfo.username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) throw new Error('Erro ao buscar tarefas');\n        const data = await response.json();\n        setTasks(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTasks();\n  }, [token, userInfo === null || userInfo === void 0 ? void 0 : userInfo.username]);\n  const addTask = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/manager/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newTask)\n      });\n      if (!response.ok) throw new Error('Erro ao adicionar tarefa');\n      const newTaskData = await response.json();\n      setTasks([...tasks, newTaskData.userTask]);\n      setNewTask({\n        title: '',\n        description: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const updateTask = async (taskId, updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(updatedTask)\n      });\n      if (!response.ok) throw new Error('Erro ao atualizar tarefa');\n      const updatedTaskData = await response.json();\n      setTasks(tasks.map(task => task.id === taskId ? updatedTaskData.userTask : task));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const completeTask = async taskId => {\n    try {\n      const response = await fetch('http://localhost:5000/api/manager/tasks/24/complete', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluída');\n      const updatedTaskData = await response.json();\n      setTasks(tasks.map(task => task.id === taskId ? updatedTaskData.userTask : task));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error('Erro ao excluir tarefa');\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.taskStatus;\n    if (filter === 'pending') return !task.taskStatus;\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.heading,\n      children: \"Gerenciador de Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.filterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.filterButton,\n        onClick: () => setFilter('all'),\n        children: \"Todas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.filterButton,\n        onClick: () => setFilter('completed'),\n        children: \"Conclu\\xEDdas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.filterButton,\n        onClick: () => setFilter('pending'),\n        children: \"Pendentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.taskForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo\",\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Descri\\xE7\\xE3o\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        }),\n        style: styles.textarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        style: styles.addButton,\n        children: \"Adicionar Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: styles.taskList,\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: styles.taskItem,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.taskTitle,\n          children: task.taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.taskDescription,\n          children: task.taskDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => completeTask(task.id),\n          style: styles.updateButton,\n          children: task.taskStatus ? 'Marcar como Pendente' : 'Marcar como Concluída'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          style: styles.deleteButton,\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"z7DGvl+4BjSryBDYs2Ddxa1egI0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = TaskManager;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#000',\n    color: '#fff',\n    minHeight: '100vh',\n    padding: '20px'\n  },\n  heading: {\n    marginBottom: '20px',\n    fontSize: '2rem'\n  },\n  filterContainer: {\n    marginBottom: '20px'\n  },\n  filterButton: {\n    backgroundColor: '#444',\n    color: '#fff',\n    border: 'none',\n    padding: '10px 20px',\n    margin: '0 5px',\n    cursor: 'pointer'\n  },\n  taskForm: {\n    marginBottom: '20px',\n    width: '100%',\n    maxWidth: '600px',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  input: {\n    padding: '10px',\n    marginBottom: '10px',\n    border: '1px solid #666',\n    backgroundColor: '#333',\n    color: '#fff'\n  },\n  textarea: {\n    padding: '10px',\n    marginBottom: '10px',\n    border: '1px solid #666',\n    backgroundColor: '#333',\n    color: '#fff'\n  },\n  addButton: {\n    backgroundColor: '#555',\n    color: '#fff',\n    border: 'none',\n    padding: '10px',\n    cursor: 'pointer'\n  },\n  taskList: {\n    listStyle: 'none',\n    padding: 0,\n    width: '100%',\n    maxWidth: '600px'\n  },\n  taskItem: {\n    backgroundColor: '#222',\n    padding: '10px',\n    marginBottom: '10px',\n    borderRadius: '5px'\n  },\n  taskTitle: {\n    fontSize: '1.2rem',\n    margin: '0 0 10px 0'\n  },\n  taskDescription: {\n    margin: '0 0 10px 0'\n  },\n  updateButton: {\n    backgroundColor: '#777',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 10px',\n    marginRight: '5px',\n    cursor: 'pointer'\n  },\n  deleteButton: {\n    backgroundColor: '#f00',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 10px',\n    cursor: 'pointer'\n  }\n};\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","jsxDEV","_jsxDEV","TaskManager","_s","tasks","setTasks","filter","setFilter","newTask","setNewTask","title","description","token","userInfo","navigate","fetchTasks","username","response","fetch","headers","Authorization","ok","Error","data","json","error","console","addTask","method","body","JSON","stringify","newTaskData","userTask","updateTask","taskId","updatedTask","updatedTaskData","map","task","id","completeTask","deleteTask","filteredTasks","taskStatus","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","filterContainer","filterButton","onClick","taskForm","type","placeholder","value","onChange","e","target","input","textarea","addButton","taskList","taskItem","taskTitle","taskDescription","updateButton","deleteButton","_c","display","flexDirection","alignItems","backgroundColor","color","minHeight","padding","marginBottom","fontSize","border","margin","cursor","width","maxWidth","listStyle","borderRadius","marginRight","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/UserTasksPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\n\nconst TaskManager = () => {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all'); // Filtros: 'all', 'completed', 'pending'\n  const [newTask, setNewTask] = useState({ title: '', description: '' });\n  const { token, userInfo } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token || !userInfo?.username) return;\n      try {\n        const response = await fetch(`http://localhost:5000/api/manager/tasks/${userInfo.username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (!response.ok) throw new Error('Erro ao buscar tarefas');\n        const data = await response.json();\n        setTasks(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchTasks();\n  }, [token, userInfo?.username]);\n\n  const addTask = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/manager/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(newTask),\n      });\n\n      if (!response.ok) throw new Error('Erro ao adicionar tarefa');\n      const newTaskData = await response.json();\n      setTasks([...tasks, newTaskData.userTask]);\n      setNewTask({ title: '', description: '' });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const updateTask = async (taskId, updatedTask) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${taskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(updatedTask),\n      });\n\n      if (!response.ok) throw new Error('Erro ao atualizar tarefa');\n      const updatedTaskData = await response.json();\n      setTasks(tasks.map(task => (task.id === taskId ? updatedTaskData.userTask : task)));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const completeTask = async (taskId) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/manager/tasks/24/complete', {\n  method: 'PATCH',\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`,\n  },\n});\n  \n      if (!response.ok) throw new Error('Erro ao marcar tarefa como concluída');\n      const updatedTaskData = await response.json();\n      setTasks(tasks.map(task => (task.id === taskId ? updatedTaskData.userTask : task)));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n\n  const deleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/manager/tasks/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error('Erro ao excluir tarefa');\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.taskStatus;\n    if (filter === 'pending') return !task.taskStatus;\n    return true;\n  });\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.heading}>Gerenciador de Tarefas</h1>\n      <div style={styles.filterContainer}>\n        <button style={styles.filterButton} onClick={() => setFilter('all')}>Todas</button>\n        <button style={styles.filterButton} onClick={() => setFilter('completed')}>Concluídas</button>\n        <button style={styles.filterButton} onClick={() => setFilter('pending')}>Pendentes</button>\n      </div>\n      <div style={styles.taskForm}>\n        <input\n          type=\"text\"\n          placeholder=\"Título\"\n          value={newTask.title}\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\n          style={styles.input}\n        />\n        <textarea\n          placeholder=\"Descrição\"\n          value={newTask.description}\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\n          style={styles.textarea}\n        />\n        <button onClick={addTask} style={styles.addButton}>Adicionar Tarefa</button>\n      </div>\n      <ul style={styles.taskList}>\n        {filteredTasks.map(task => (\n          <li key={task.id} style={styles.taskItem}>\n            <h3 style={styles.taskTitle}>{task.taskTitle}</h3>\n            <p style={styles.taskDescription}>{task.taskDescription}</p>\n            <button \n              onClick={() => completeTask(task.id)} \n              style={styles.updateButton}\n            >\n              {task.taskStatus ? 'Marcar como Pendente' : 'Marcar como Concluída'}\n            </button>\n            <button onClick={() => deleteTask(task.id)} style={styles.deleteButton}>Excluir</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#000',\n    color: '#fff',\n    minHeight: '100vh',\n    padding: '20px',\n  },\n  heading: {\n    marginBottom: '20px',\n    fontSize: '2rem',\n  },\n  filterContainer: {\n    marginBottom: '20px',\n  },\n  filterButton: {\n    backgroundColor: '#444',\n    color: '#fff',\n    border: 'none',\n    padding: '10px 20px',\n    margin: '0 5px',\n    cursor: 'pointer',\n  },\n  taskForm: {\n    marginBottom: '20px',\n    width: '100%',\n    maxWidth: '600px',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  input: {\n    padding: '10px',\n    marginBottom: '10px',\n    border: '1px solid #666',\n    backgroundColor: '#333',\n    color: '#fff',\n  },\n  textarea: {\n    padding: '10px',\n    marginBottom: '10px',\n    border: '1px solid #666',\n    backgroundColor: '#333',\n    color: '#fff',\n  },\n  addButton: {\n    backgroundColor: '#555',\n    color: '#fff',\n    border: 'none',\n    padding: '10px',\n    cursor: 'pointer',\n  },\n  taskList: {\n    listStyle: 'none',\n    padding: 0,\n    width: '100%',\n    maxWidth: '600px',\n  },\n  taskItem: {\n    backgroundColor: '#222',\n    padding: '10px',\n    marginBottom: '10px',\n    borderRadius: '5px',\n  },\n  taskTitle: {\n    fontSize: '1.2rem',\n    margin: '0 0 10px 0',\n  },\n  taskDescription: {\n    margin: '0 0 10px 0',\n  },\n  updateButton: {\n    backgroundColor: '#777',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 10px',\n    marginRight: '5px',\n    cursor: 'pointer',\n  },\n  deleteButton: {\n    backgroundColor: '#f00',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 10px',\n    cursor: 'pointer',\n  },\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}