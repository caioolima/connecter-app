{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Tasks/TaskList.js\";\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Estilos com styled-components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskListContainer = styled.div`\n  padding: 20px;\n  z-index: 1;\n`;\n_c = TaskListContainer;\nconst TaskItem = styled.div`\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n_c2 = TaskItem;\nconst TaskItemTitle = styled.h3`\n  margin: 0 0 10px;\n`;\n_c3 = TaskItemTitle;\nconst TaskItemDescription = styled.p`\n  margin: 0 0 10px;\n`;\n_c4 = TaskItemDescription;\nconst Button = styled.button`\n  margin-right: 5px;\n  padding: 8px 16px;\n  font-size: 14px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: #007bff;\n  color: #fff;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:active {\n    background-color: #004080;\n  }\n`;\n_c5 = Button;\nconst NoTasksMessage = styled.p`\n  color: #777;\n`;\n_c6 = NoTasksMessage;\nconst TaskList = ({\n  tasks,\n  onComplete,\n  onEdit,\n  onDelete\n}) => {\n  return /*#__PURE__*/_jsxDEV(TaskListContainer, {\n    children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      children: [/*#__PURE__*/_jsxDEV(TaskItemTitle, {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TaskItemDescription, {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data: \", formatDate(task.createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => onComplete(task.id),\n        children: \"Concluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => onEdit(task),\n        children: \"Editar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => onDelete(task.id),\n        children: \"Excluir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(NoTasksMessage, {\n      children: \"Nenhuma tarefa encontrada.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n// Função para formatar a data\n_c7 = TaskList;\nconst formatDate = dateString => {\n  if (!dateString) return 'Data não disponível.';\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\nexport default TaskList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"TaskListContainer\");\n$RefreshReg$(_c2, \"TaskItem\");\n$RefreshReg$(_c3, \"TaskItemTitle\");\n$RefreshReg$(_c4, \"TaskItemDescription\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"NoTasksMessage\");\n$RefreshReg$(_c7, \"TaskList\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","TaskListContainer","div","_c","TaskItem","_c2","TaskItemTitle","h3","_c3","TaskItemDescription","p","_c4","Button","button","_c5","NoTasksMessage","_c6","TaskList","tasks","onComplete","onEdit","onDelete","children","length","map","task","title","fileName","_jsxFileName","lineNumber","columnNumber","description","formatDate","createdAt","onClick","id","_c7","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Tasks/TaskList.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\n// Estilos com styled-components\nconst TaskListContainer = styled.div`\n  padding: 20px;\n  z-index: 1;\n`;\n\nconst TaskItem = styled.div`\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n\nconst TaskItemTitle = styled.h3`\n  margin: 0 0 10px;\n`;\n\nconst TaskItemDescription = styled.p`\n  margin: 0 0 10px;\n`;\n\nconst Button = styled.button`\n  margin-right: 5px;\n  padding: 8px 16px;\n  font-size: 14px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: #007bff;\n  color: #fff;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:active {\n    background-color: #004080;\n  }\n`;\n\nconst NoTasksMessage = styled.p`\n  color: #777;\n`;\n\nconst TaskList = ({ tasks, onComplete, onEdit, onDelete }) => {\n  return (\n    <TaskListContainer>\n      {tasks.length > 0 ? (\n        tasks.map(task => (\n          <TaskItem key={task.id}>\n            <TaskItemTitle>{task.title}</TaskItemTitle>\n            <TaskItemDescription>{task.description}</TaskItemDescription>\n            <p>Data: {formatDate(task.createdAt)}</p>\n            <Button onClick={() => onComplete(task.id)}>Concluir</Button>\n            <Button onClick={() => onEdit(task)}>Editar</Button>\n            <Button onClick={() => onDelete(task.id)}>Excluir</Button>\n          </TaskItem>\n        ))\n      ) : (\n        <NoTasksMessage>Nenhuma tarefa encontrada.</NoTasksMessage>\n      )}\n    </TaskListContainer>\n  );\n};\n\n// Função para formatar a data\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Data não disponível.';\n  const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}