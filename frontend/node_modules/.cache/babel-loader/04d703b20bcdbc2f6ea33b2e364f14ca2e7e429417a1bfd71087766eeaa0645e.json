{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/components/Header/UserMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FaUserCircle } from 'react-icons/fa';\nimport useClickOutside from '../../hooks/useClickOutside'; // Importa o hook customizado para detectar cliques fora do componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserMenu = ({\n  name,\n  onLogout\n}) => {\n  _s();\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false); // Estado para controlar a abertura e fechamento do menu\n\n  // Função para alternar a visibilidade do menu\n  const toggleUserMenu = () => {\n    setIsUserMenuOpen(!isUserMenuOpen);\n  };\n\n  // Hook personalizado para fechar o menu quando clicar fora dele\n  const ref = useClickOutside(() => {\n    setIsUserMenuOpen(false);\n  });\n  return /*#__PURE__*/_jsxDEV(UserMenuContainer, {\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(UserIcon, {\n      onClick: toggleUserMenu,\n      children: /*#__PURE__*/_jsxDEV(FaUserCircle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isUserMenuOpen && /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      children: [/*#__PURE__*/_jsxDEV(UserName, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n        onClick: onLogout,\n        children: \"Sair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n// Container para o menu do usuário\n_s(UserMenu, \"paTKaAOI3GYqrVit/XINkwJzLw0=\", false, function () {\n  return [useClickOutside];\n});\n_c = UserMenu;\nconst UserMenuContainer = styled.div`\n  position: relative; /* Posiciona o menu de forma relativa ao contêiner pai */\n  display: inline-block; /* Faz com que o contêiner ocupe apenas o espaço necessário */\n`;\n\n// Estilo para o ícone do usuário\n_c2 = UserMenuContainer;\nconst UserIcon = styled.div`\n  font-size: 2.4rem; /* Tamanho do ícone */\n  color: #fff; /* Cor do ícone */\n  cursor: pointer; /* Muda o cursor para indicar que é clicável */\n  display: flex;\n  align-items: center; /* Alinha o ícone verticalmente */\n  justify-content: center; /* Centraliza o ícone horizontalmente */\n  border-radius: 50%; /* Faz o ícone ser circular */\n  background-color: #333; /* Cor de fundo do ícone */\n  padding: 0.4rem; /* Espaçamento interno */\n  transition: background-color 0.3s ease, border-color 0.3s ease; /* Transição suave para alterações de cor e borda */\n  border: 1px solid #fff; /* Borda branca discreta ao redor do ícone */\n\n  &:hover {\n    background-color: #444; /* Cor de fundo um pouco mais clara no hover */\n    border-color: #ea4f97; /* Cor da borda ao passar o mouse */\n    color: #ea4f97; /* Cor do ícone no hover */\n  }\n`;\n\n// Estilo para o menu suspenso\n_c3 = UserIcon;\nconst DropdownMenu = styled.div`\n  position: absolute; /* Posiciona o menu absolutamente em relação ao contêiner pai */\n  top: 110%; /* Coloca o menu logo abaixo do ícone do usuário */\n  right: 0; /* Alinha o menu ao lado direito do contêiner pai */\n  background-color: #1e1e1e; /* Cor de fundo preta do menu */\n  border: 1px solid #444; /* Borda cinza escura para um toque discreto */\n  border-radius: 8px; /* Bordas arredondadas do menu */\n  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.4); /* Sombra suave ao redor do menu */\n  padding: 0.5rem; /* Espaçamento interno do menu */\n  display: flex;\n  flex-direction: column; /* Alinha os itens do menu em uma coluna */\n  align-items: stretch; /* Faz com que os itens do menu se estiquem para preencher o contêiner */\n  z-index: 1010; /* Garante que o menu fique sobre outros elementos */\n  min-width: 130px; /* Define uma largura mínima para o menu */\n  animation: fadeIn 0.3s ease-out; /* Animação de aparecimento suave */\n\n  /* Definição da animação fadeIn */\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(-10px); /* Animação para cima */\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0); /* Finaliza a animação na posição original */\n    }\n  }\n`;\n\n// Estilo para o nome do usuário\n_c4 = DropdownMenu;\nconst UserName = styled.div`\n  font-size: 1rem; /* Tamanho da fonte do nome do usuário */\n  font-weight: 600; /* Peso da fonte mais espesso */\n  color: #fff; /* Cor do texto */\n  margin-bottom: 0.5rem; /* Espaçamento abaixo do nome do usuário */\n  text-align: center; /* Alinha o texto ao centro */\n  padding: 0 1rem; /* Adiciona padding horizontal para mais espaço */\n`;\n\n// Estilo para o botão de logout\n_c5 = UserName;\nconst LogoutButton = styled.button`\n  background-color: #ea4f97; /* Cor de fundo rosa do botão */\n  color: #fff; /* Cor do texto do botão */\n  border: none; /* Remove a borda padrão do botão */\n  border-radius: 6px; /* Bordas arredondadas do botão */\n  padding: 0.4rem 0.8rem; /* Espaçamento interno do botão */\n  cursor: pointer; /* Muda o cursor para indicar que é clicável */\n  margin: 0 auto; /* Centraliza o botão horizontalmente */\n  font-size: 0.9rem; /* Tamanho da fonte do botão */\n  transition: background-color 0.3s ease, transform 0.3s ease; /* Transição suave para alterações de cor e tamanho */\n  width: 80px; /* Largura ajustada para o botão */\n  text-align: center; /* Alinha o texto ao centro */\n\n  &:hover {\n    background-color: #d93e8a; /* Cor de fundo mais escura no hover */\n    transform: scale(1.05); /* Efeito de aumento suave no hover */\n  }\n\n  &:focus {\n    outline: 3px solid #ea4f97; /* Destaque ao focar no botão */\n  }\n`;\n_c6 = LogoutButton;\nexport default UserMenu;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"UserMenu\");\n$RefreshReg$(_c2, \"UserMenuContainer\");\n$RefreshReg$(_c3, \"UserIcon\");\n$RefreshReg$(_c4, \"DropdownMenu\");\n$RefreshReg$(_c5, \"UserName\");\n$RefreshReg$(_c6, \"LogoutButton\");","map":{"version":3,"names":["React","useState","styled","FaUserCircle","useClickOutside","jsxDEV","_jsxDEV","UserMenu","name","onLogout","_s","isUserMenuOpen","setIsUserMenuOpen","toggleUserMenu","ref","UserMenuContainer","children","UserIcon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","DropdownMenu","UserName","LogoutButton","_c","div","_c2","_c3","_c4","_c5","button","_c6","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/components/Header/UserMenu.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FaUserCircle } from 'react-icons/fa';\nimport useClickOutside from '../../hooks/useClickOutside'; // Importa o hook customizado para detectar cliques fora do componente\n\nconst UserMenu = ({ name, onLogout }) => {\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false); // Estado para controlar a abertura e fechamento do menu\n\n  // Função para alternar a visibilidade do menu\n  const toggleUserMenu = () => {\n    setIsUserMenuOpen(!isUserMenuOpen);\n  };\n\n  // Hook personalizado para fechar o menu quando clicar fora dele\n  const ref = useClickOutside(() => {\n    setIsUserMenuOpen(false);\n  });\n\n  return (\n    <UserMenuContainer ref={ref}>\n      <UserIcon onClick={toggleUserMenu}>\n        <FaUserCircle />\n      </UserIcon>\n      {isUserMenuOpen && (\n        <DropdownMenu>\n          <UserName>{name}</UserName>\n          <LogoutButton onClick={onLogout}>Sair</LogoutButton>\n        </DropdownMenu>\n      )}\n    </UserMenuContainer>\n  );\n};\n\n// Container para o menu do usuário\nconst UserMenuContainer = styled.div`\n  position: relative; /* Posiciona o menu de forma relativa ao contêiner pai */\n  display: inline-block; /* Faz com que o contêiner ocupe apenas o espaço necessário */\n`;\n\n// Estilo para o ícone do usuário\nconst UserIcon = styled.div`\n  font-size: 2.4rem; /* Tamanho do ícone */\n  color: #fff; /* Cor do ícone */\n  cursor: pointer; /* Muda o cursor para indicar que é clicável */\n  display: flex;\n  align-items: center; /* Alinha o ícone verticalmente */\n  justify-content: center; /* Centraliza o ícone horizontalmente */\n  border-radius: 50%; /* Faz o ícone ser circular */\n  background-color: #333; /* Cor de fundo do ícone */\n  padding: 0.4rem; /* Espaçamento interno */\n  transition: background-color 0.3s ease, border-color 0.3s ease; /* Transição suave para alterações de cor e borda */\n  border: 1px solid #fff; /* Borda branca discreta ao redor do ícone */\n\n  &:hover {\n    background-color: #444; /* Cor de fundo um pouco mais clara no hover */\n    border-color: #ea4f97; /* Cor da borda ao passar o mouse */\n    color: #ea4f97; /* Cor do ícone no hover */\n  }\n`;\n\n// Estilo para o menu suspenso\nconst DropdownMenu = styled.div`\n  position: absolute; /* Posiciona o menu absolutamente em relação ao contêiner pai */\n  top: 110%; /* Coloca o menu logo abaixo do ícone do usuário */\n  right: 0; /* Alinha o menu ao lado direito do contêiner pai */\n  background-color: #1e1e1e; /* Cor de fundo preta do menu */\n  border: 1px solid #444; /* Borda cinza escura para um toque discreto */\n  border-radius: 8px; /* Bordas arredondadas do menu */\n  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.4); /* Sombra suave ao redor do menu */\n  padding: 0.5rem; /* Espaçamento interno do menu */\n  display: flex;\n  flex-direction: column; /* Alinha os itens do menu em uma coluna */\n  align-items: stretch; /* Faz com que os itens do menu se estiquem para preencher o contêiner */\n  z-index: 1010; /* Garante que o menu fique sobre outros elementos */\n  min-width: 130px; /* Define uma largura mínima para o menu */\n  animation: fadeIn 0.3s ease-out; /* Animação de aparecimento suave */\n\n  /* Definição da animação fadeIn */\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(-10px); /* Animação para cima */\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0); /* Finaliza a animação na posição original */\n    }\n  }\n`;\n\n// Estilo para o nome do usuário\nconst UserName = styled.div`\n  font-size: 1rem; /* Tamanho da fonte do nome do usuário */\n  font-weight: 600; /* Peso da fonte mais espesso */\n  color: #fff; /* Cor do texto */\n  margin-bottom: 0.5rem; /* Espaçamento abaixo do nome do usuário */\n  text-align: center; /* Alinha o texto ao centro */\n  padding: 0 1rem; /* Adiciona padding horizontal para mais espaço */\n`;\n\n// Estilo para o botão de logout\nconst LogoutButton = styled.button`\n  background-color: #ea4f97; /* Cor de fundo rosa do botão */\n  color: #fff; /* Cor do texto do botão */\n  border: none; /* Remove a borda padrão do botão */\n  border-radius: 6px; /* Bordas arredondadas do botão */\n  padding: 0.4rem 0.8rem; /* Espaçamento interno do botão */\n  cursor: pointer; /* Muda o cursor para indicar que é clicável */\n  margin: 0 auto; /* Centraliza o botão horizontalmente */\n  font-size: 0.9rem; /* Tamanho da fonte do botão */\n  transition: background-color 0.3s ease, transform 0.3s ease; /* Transição suave para alterações de cor e tamanho */\n  width: 80px; /* Largura ajustada para o botão */\n  text-align: center; /* Alinha o texto ao centro */\n\n  &:hover {\n    background-color: #d93e8a; /* Cor de fundo mais escura no hover */\n    transform: scale(1.05); /* Efeito de aumento suave no hover */\n  }\n\n  &:focus {\n    outline: 3px solid #ea4f97; /* Destaque ao focar no botão */\n  }\n`;\n\nexport default UserMenu;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}