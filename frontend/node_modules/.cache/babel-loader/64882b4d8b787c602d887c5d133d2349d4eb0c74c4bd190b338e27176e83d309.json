{"ast":null,"code":"var _jsxFileName = \"/Users/devcosta/Documents/task-manager/frontend/src/pages/TaskManager.js\",\n  _s = $RefreshSig$();\n// components/Manager/TaskManager.js\nimport React from 'react';\nimport Navbar from '../components/Manager/Navbar';\nimport AddTaskModal from '../components/Manager/addTaskModal';\nimport EditTaskModal from '../components/Manager/EditTaskModal';\nimport DropdownMenu from '../components/Manager/DropdownMenu';\nimport useFetchTasks from '../hooks/Manager Hooks/useFetchTasks';\nimport useTaskModal from '../hooks/Manager Hooks/useTaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = () => {\n  _s();\n  const {\n    tasks,\n    loading,\n    setFilter,\n    saveTask,\n    completeTask,\n    deleteTask\n  } = useFetchTasks();\n  const {\n    addModalOpen,\n    editModalOpen,\n    currentTask,\n    openAddModal,\n    closeAddModal,\n    openEditModal,\n    closeEditModal\n  } = useTaskModal();\n\n  // Função para abrir o modal de adicionar tarefa\n  const handleAddTaskClick = () => {\n    openAddModal();\n  };\n\n  // Função para abrir o modal de editar tarefa\n  const handleEditTaskClick = task => {\n    openEditModal(task);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onAddTaskClick: handleAddTaskClick,\n      onFilterChange: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.taskWrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.taskGrid,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.loadingMessage,\n          children: \"Carregando tarefas...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this) : tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.taskItem,\n          children: [/*#__PURE__*/_jsxDEV(DropdownMenu, {\n            onEdit: () => handleEditTaskClick(task),\n            onDelete: () => deleteTask(task.id),\n            onComplete: () => completeTask(task.id),\n            isCompleted: task.taskStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.taskContent,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: styles.taskTitle,\n              children: [\"T\\xEDtulo: \", task.taskTitle]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.taskDescription,\n              children: [\"Descri\\xE7\\xE3o: \", task.taskDescription]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.taskCreatedAt,\n              children: [\"Criado em: \", new Date(task.createdAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: styles.taskStatus,\n              children: [\"Status: \", task.taskStatus ? 'Concluída' : 'Pendente']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.noTasksMessage,\n          children: \"N\\xE3o h\\xE1 tarefas para exibir.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskModal, {\n      isOpen: addModalOpen,\n      onClose: closeAddModal,\n      onSave: saveTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      isOpen: editModalOpen,\n      onClose: closeEditModal,\n      onSave: saveTask,\n      task: currentTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManager, \"oEpotiMhGJXXcjZNslA3/gR7yC0=\", false, function () {\n  return [useFetchTasks, useTaskModal];\n});\n_c = TaskManager;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    backgroundColor: '#000',\n    color: '#fff',\n    overflow: 'hidden'\n  },\n  taskWrapper: {\n    flex: 1,\n    overflowY: 'auto',\n    padding: '20px'\n  },\n  taskGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))',\n    gap: '20px'\n  },\n  taskItem: {\n    backgroundColor: '#1a1a1a',\n    padding: '20px',\n    borderRadius: '12px',\n    boxShadow: '0 6px 15px rgba(255, 255, 255, 0.1)',\n    // Sombra branca suave\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n    cursor: 'pointer',\n    border: '1px solid #333'\n  },\n  loadingMessage: {\n    gridColumn: '1 / -1',\n    textAlign: 'center',\n    fontSize: '18px',\n    color: '#888'\n  },\n  taskContent: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  taskTitle: {\n    fontSize: '20px',\n    fontWeight: 'bold',\n    marginBottom: '8px',\n    color: '#f5f5f5'\n  },\n  taskDescription: {\n    fontSize: '15px',\n    lineHeight: '1.5',\n    color: '#d1d1d1',\n    marginBottom: '10px'\n  },\n  taskCreatedAt: {\n    fontSize: '13px',\n    color: '#999',\n    marginBottom: '8px'\n  },\n  taskStatus: {\n    fontSize: '14px',\n    fontWeight: 'bold',\n    color: '#4caf50'\n  },\n  noTasksMessage: {\n    gridColumn: '1 / -1',\n    textAlign: 'center',\n    fontSize: '18px',\n    color: '#888'\n  }\n};\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","Navbar","AddTaskModal","EditTaskModal","DropdownMenu","useFetchTasks","useTaskModal","jsxDEV","_jsxDEV","TaskManager","_s","tasks","loading","setFilter","saveTask","completeTask","deleteTask","addModalOpen","editModalOpen","currentTask","openAddModal","closeAddModal","openEditModal","closeEditModal","handleAddTaskClick","handleEditTaskClick","task","style","styles","container","children","onAddTaskClick","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","taskWrapper","taskGrid","loadingMessage","length","map","taskItem","onEdit","onDelete","id","onComplete","isCompleted","taskStatus","taskContent","taskTitle","taskDescription","taskCreatedAt","Date","createdAt","toLocaleString","noTasksMessage","isOpen","onClose","onSave","_c","display","flexDirection","height","backgroundColor","color","overflow","flex","overflowY","padding","gridTemplateColumns","gap","borderRadius","boxShadow","position","transition","cursor","border","gridColumn","textAlign","fontSize","fontWeight","marginBottom","lineHeight","$RefreshReg$"],"sources":["/Users/devcosta/Documents/task-manager/frontend/src/pages/TaskManager.js"],"sourcesContent":["// components/Manager/TaskManager.js\nimport React from 'react';\nimport Navbar from '../components/Manager/Navbar';\nimport AddTaskModal from '../components/Manager/addTaskModal';\nimport EditTaskModal from '../components/Manager/EditTaskModal';\nimport DropdownMenu from '../components/Manager/DropdownMenu';\nimport useFetchTasks from '../hooks/Manager Hooks/useFetchTasks';\nimport useTaskModal from '../hooks/Manager Hooks/useTaskModal';\n\nconst TaskManager = () => {\n  const { tasks, loading, setFilter, saveTask, completeTask, deleteTask } = useFetchTasks();\n  const {\n    addModalOpen,\n    editModalOpen,\n    currentTask,\n    openAddModal,\n    closeAddModal,\n    openEditModal,\n    closeEditModal,\n  } = useTaskModal();\n\n  // Função para abrir o modal de adicionar tarefa\n  const handleAddTaskClick = () => {\n    openAddModal();\n  };\n\n  // Função para abrir o modal de editar tarefa\n  const handleEditTaskClick = (task) => {\n    openEditModal(task);\n  };\n\n  return (\n    <div style={styles.container}>\n      <Navbar onAddTaskClick={handleAddTaskClick} onFilterChange={setFilter} />\n      <div style={styles.taskWrapper}>\n        <div style={styles.taskGrid}>\n          {loading ? (\n            <div style={styles.loadingMessage}>Carregando tarefas...</div>\n          ) : tasks.length > 0 ? (\n            tasks.map(task => (\n              <div \n                key={task.id} \n                style={styles.taskItem}\n              >\n                <DropdownMenu\n                  onEdit={() => handleEditTaskClick(task)}\n                  onDelete={() => deleteTask(task.id)}\n                  onComplete={() => completeTask(task.id)}\n                  isCompleted={task.taskStatus}\n                />\n                <div style={styles.taskContent}>\n                  <h3 style={styles.taskTitle}>Título: {task.taskTitle}</h3>\n                  <p style={styles.taskDescription}>Descrição: {task.taskDescription}</p>\n                  <p style={styles.taskCreatedAt}>Criado em: {new Date(task.createdAt).toLocaleString()}</p>\n                  <p style={styles.taskStatus}>\n                    Status: {task.taskStatus ? 'Concluída' : 'Pendente'}\n                  </p>\n                </div>\n              </div>\n            ))\n          ) : (\n            <div style={styles.noTasksMessage}>Não há tarefas para exibir.</div>\n          )}\n        </div>\n      </div>\n      <AddTaskModal \n        isOpen={addModalOpen} \n        onClose={closeAddModal} \n        onSave={saveTask} \n      />\n      <EditTaskModal \n        isOpen={editModalOpen} \n        onClose={closeEditModal} \n        onSave={saveTask} \n        task={currentTask} \n      />\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    backgroundColor: '#000',\n    color: '#fff',\n    overflow: 'hidden',\n  },\n  taskWrapper: {\n    flex: 1,\n    overflowY: 'auto',\n    padding: '20px',\n  },\n  taskGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))',\n    gap: '20px',\n  },\n  taskItem: {\n    backgroundColor: '#1a1a1a',\n    padding: '20px',\n    borderRadius: '12px',\n    boxShadow: '0 6px 15px rgba(255, 255, 255, 0.1)', // Sombra branca suave\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n    cursor: 'pointer',\n    border: '1px solid #333',\n  },\n  loadingMessage: {\n    gridColumn: '1 / -1',\n    textAlign: 'center',\n    fontSize: '18px',\n    color: '#888',\n  },\n  taskContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  taskTitle: {\n    fontSize: '20px',\n    fontWeight: 'bold',\n    marginBottom: '8px',\n    color: '#f5f5f5',\n  },\n  taskDescription: {\n    fontSize: '15px',\n    lineHeight: '1.5',\n    color: '#d1d1d1',\n    marginBottom: '10px',\n  },\n  taskCreatedAt: {\n    fontSize: '13px',\n    color: '#999',\n    marginBottom: '8px',\n  },\n  taskStatus: {\n    fontSize: '14px',\n    fontWeight: 'bold',\n    color: '#4caf50',\n  },\n  noTasksMessage: {\n    gridColumn: '1 / -1',\n    textAlign: 'center',\n    fontSize: '18px',\n    color: '#888',\n  },\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}